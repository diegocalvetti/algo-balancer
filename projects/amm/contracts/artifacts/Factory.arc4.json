{
  "name": "Factory",
  "desc": "",
  "methods": [
    {
      "name": "createApplication",
      "desc": "createApplication method called at creation",
      "args": [],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "createPool",
      "desc": "Deploy the pool contract, compiled teal of the contract\nmust be loaded in poolContractApprovalProgram",
      "args": [],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "initPool",
      "desc": "Initialize the pool with the given assets & weights",
      "args": [
        {
          "name": "poolID",
          "type": "uint64",
          "desc": "Pool App ID"
        },
        {
          "name": "assetIds",
          "type": "uint64[]"
        },
        {
          "name": "weights",
          "type": "uint64[]"
        }
      ],
      "returns": {
        "type": "uint64"
      }
    },
    {
      "name": "addLiquidity",
      "desc": "Add one token as liquidity to the pool",
      "args": [
        {
          "name": "poolID",
          "type": "uint64",
          "desc": "Pool App ID"
        },
        {
          "name": "index",
          "type": "uint64",
          "desc": "the index"
        },
        {
          "name": "transferTxn",
          "type": "axfer",
          "desc": "transfer tx of the token, receiver must be the pool account"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "getLiquidity",
      "desc": "Compute the liquidity for the sender and send the LPs expected",
      "args": [
        {
          "name": "poolID",
          "type": "uint64",
          "desc": "Pool App ID\n uint64 - The LPs expected"
        }
      ],
      "returns": {
        "type": "uint64"
      }
    },
    {
      "name": "burnLiquidity",
      "args": [
        {
          "name": "poolID",
          "type": "uint64"
        },
        {
          "name": "transferTxn",
          "type": "axfer"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "swap",
      "args": [
        {
          "name": "poolID",
          "type": "uint64"
        },
        {
          "name": "from",
          "type": "uint64"
        },
        {
          "name": "to",
          "type": "uint64"
        },
        {
          "name": "transferTxn",
          "type": "axfer"
        }
      ],
      "returns": {
        "type": "uint64"
      }
    },
    {
      "name": "opUp",
      "args": [],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "MANAGER_updatePoolContractProgram",
      "desc": "*******************",
      "args": [
        {
          "name": "programSize",
          "type": "uint64"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "MANAGER_writePoolContractProgram",
      "args": [
        {
          "name": "offset",
          "type": "uint64"
        },
        {
          "name": "data",
          "type": "byte[]"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    {
      "name": "getPool",
      "readonly": true,
      "args": [
        {
          "name": "assetIds",
          "type": "uint64[]"
        },
        {
          "name": "weights",
          "type": "uint64[]"
        }
      ],
      "returns": {
        "type": "(uint64,uint64[],uint64[])"
      }
    }
  ]
}