/* eslint-disable */
/**
 * This file was automatically generated by @algorandfoundation/algokit-client-generator.
 * DO NOT MODIFY IT BY HAND.
 * requires: @algorandfoundation/algokit-utils: ^7
 */
import { AlgorandClientInterface } from '@algorandfoundation/algokit-utils/types/algorand-client-interface'
import { ABIReturn, AppReturn, SendAppTransactionResult } from '@algorandfoundation/algokit-utils/types/app'
import { Arc56Contract, getArc56ReturnValue, getABIStructFromABITuple } from '@algorandfoundation/algokit-utils/types/app-arc56'
import {
  AppClient as _AppClient,
  AppClientMethodCallParams,
  AppClientParams,
  AppClientBareCallParams,
  CallOnComplete,
  AppClientCompilationParams,
  ResolveAppClientByCreatorAndName,
  ResolveAppClientByNetwork,
  CloneAppClientParams,
} from '@algorandfoundation/algokit-utils/types/app-client'
import { AppFactory as _AppFactory, AppFactoryAppClientParams, AppFactoryResolveAppClientByCreatorAndNameParams, AppFactoryDeployParams, AppFactoryParams, CreateSchema } from '@algorandfoundation/algokit-utils/types/app-factory'
import { TransactionComposer, AppCallMethodCall, AppMethodCallTransactionArgument, SimulateOptions, RawSimulateOptions, SkipSignaturesSimulateOptions } from '@algorandfoundation/algokit-utils/types/composer'
import { SendParams, SendSingleTransactionResult, SendAtomicTransactionComposerResults } from '@algorandfoundation/algokit-utils/types/transaction'
import { Address, encodeAddress, modelsv2, OnApplicationComplete, Transaction, TransactionSigner } from 'algosdk'
import SimulateResponse = modelsv2.SimulateResponse

export const APP_SPEC: Arc56Contract = {"name":"BalancedPoolV2","desc":"","methods":[{"name":"createApplication","desc":"createApplication method called at creation","args":[],"returns":{"type":"void"},"actions":{"create":["NoOp"],"call":[]}},{"name":"bootstrap","desc":"Bootstrap the pool by assigning assets and weights, create the LP tokens","args":[{"name":"assetIds","type":"uint64[]","desc":"assets of the pool"},{"name":"weights","type":"uint64[]","desc":"weights of the pool\n uint64 - LP Token created ID"}],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"addLiquidity","desc":"Provide one token liquidity to the pool","args":[{"name":"index","type":"uint64","desc":"index of the token in the pool"},{"name":"amount","type":"uint64","desc":"amount of token sent"},{"name":"sender","type":"address","desc":"the sender"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"computeLiquidity","desc":"Compute the liquidity for the given sender based on the state\nin the contract","args":[{"name":"sender","type":"address","desc":"the sender"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"swap","args":[{"name":"sender","type":"address"},{"name":"from","type":"uint64"},{"name":"to","type":"uint64"},{"name":"amount","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"optIn","args":[{"name":"assetId","type":"uint64","desc":"asset to opt-in\n why?"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}}],"arcs":[4,56],"structs":{},"state":{"schema":{"global":{"bytes":2,"ints":1},"local":{"bytes":0,"ints":0}},"keys":{"global":{"manager":{"key":"bWFuYWdlcg==","keyType":"AVMBytes","valueType":"address"},"token":{"key":"dG9rZW4=","keyType":"AVMBytes","valueType":"uint64"},"assets":{"key":"YXNzZXRz","keyType":"AVMBytes","valueType":"uint64[]"}},"local":{},"box":{}},"maps":{"global":{},"local":{},"box":{"weights":{"keyType":"uint64","valueType":"uint64","prefix":"weights_"},"balances":{"keyType":"uint64","valueType":"uint64","prefix":"balances_"},"provided":{"keyType":"address","valueType":"uint64[]","prefix":"provided_"},"minRatios":{"keyType":"address","valueType":"uint64","prefix":"minratio_"}}}},"bareActions":{"create":[],"call":[]},"sourceInfo":{"approval":{"sourceInfo":[{"teal":1,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[0]},{"teal":2,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1,2,3,4,5,6,7,8,9,10,11,12,13]},{"teal":3,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85]},{"teal":15,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[86,87]},{"teal":16,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[88]},{"teal":17,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[89,90]},{"teal":18,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[91]},{"teal":19,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[92,93]},{"teal":20,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[94]},{"teal":21,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120]},{"teal":25,"source":"contracts/BalancedPoolV2.algo.ts:9","errorMessage":"The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?","pc":[121]},{"teal":30,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[122,123,124]},{"teal":31,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[125]},{"teal":32,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[126]},{"teal":38,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[127,128,129]},{"teal":42,"source":"contracts/BalancedPoolV2.algo.ts:29","pc":[130,131]},{"teal":43,"source":"contracts/BalancedPoolV2.algo.ts:29","pc":[132,133,134]},{"teal":44,"source":"contracts/BalancedPoolV2.algo.ts:29","pc":[135,136]},{"teal":45,"source":"contracts/BalancedPoolV2.algo.ts:29","pc":[137]},{"teal":46,"source":"contracts/BalancedPoolV2.algo.ts:29","pc":[138]},{"teal":47,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[139]},{"teal":52,"source":"contracts/BalancedPoolV2.algo.ts:38","pc":[140,141,142,143,144,145]},{"teal":55,"source":"contracts/BalancedPoolV2.algo.ts:38","pc":[146,147,148]},{"teal":56,"source":"contracts/BalancedPoolV2.algo.ts:38","pc":[149,150,151]},{"teal":59,"source":"contracts/BalancedPoolV2.algo.ts:38","pc":[152,153,154]},{"teal":60,"source":"contracts/BalancedPoolV2.algo.ts:38","pc":[155,156,157]},{"teal":63,"source":"contracts/BalancedPoolV2.algo.ts:38","pc":[158,159,160]},{"teal":64,"source":"contracts/BalancedPoolV2.algo.ts:38","pc":[161]},{"teal":65,"source":"contracts/BalancedPoolV2.algo.ts:38","pc":[162]},{"teal":66,"source":"contracts/BalancedPoolV2.algo.ts:38","pc":[163]},{"teal":67,"source":"contracts/BalancedPoolV2.algo.ts:38","pc":[164]},{"teal":68,"source":"contracts/BalancedPoolV2.algo.ts:38","pc":[165]},{"teal":77,"source":"contracts/BalancedPoolV2.algo.ts:38","pc":[166,167,168]},{"teal":80,"source":"contracts/BalancedPoolV2.algo.ts:38","pc":[169]},{"teal":81,"source":"contracts/BalancedPoolV2.algo.ts:38","pc":[170]},{"teal":85,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[171,172,173]},{"teal":89,"source":"contracts/BalancedPoolV2.algo.ts:40","pc":[174]},{"teal":90,"source":"contracts/BalancedPoolV2.algo.ts:40","pc":[175,176]},{"teal":94,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[177]},{"teal":95,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[178,179]},{"teal":100,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[180,181]},{"teal":101,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[182,183]},{"teal":102,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[184]},{"teal":103,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[185]},{"teal":104,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[186]},{"teal":105,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[187]},{"teal":106,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[188,189,190]},{"teal":110,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[191,192]},{"teal":111,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[193,194]},{"teal":112,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[195]},{"teal":113,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[196,197]},{"teal":114,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[198]},{"teal":115,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[199]},{"teal":116,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[200]},{"teal":117,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[201,202]},{"teal":118,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[203]},{"teal":119,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[204]},{"teal":120,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[205]},{"teal":121,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[206]},{"teal":122,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[207,208]},{"teal":123,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[209,210]},{"teal":124,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[211]},{"teal":125,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[212,213]},{"teal":126,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[214]},{"teal":127,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[215]},{"teal":128,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[216]},{"teal":129,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[217,218]},{"teal":130,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[219]},{"teal":131,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[220]},{"teal":132,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[221]},{"teal":133,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[222]},{"teal":134,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[223,224]},{"teal":135,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[225,226,227]},{"teal":139,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[228,229]},{"teal":140,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[230,231]},{"teal":141,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[232,233]},{"teal":142,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[234]},{"teal":143,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[235,236]},{"teal":144,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[237]},{"teal":145,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[238]},{"teal":146,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[239]},{"teal":147,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[240,241]},{"teal":148,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[242]},{"teal":149,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[243]},{"teal":150,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[244]},{"teal":151,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[245]},{"teal":152,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[246]},{"teal":153,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[247,248]},{"teal":158,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[249,250]},{"teal":159,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[251]},{"teal":160,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[252]},{"teal":161,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[253,254]},{"teal":162,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[255,256,257]},{"teal":167,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[258,259]},{"teal":168,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[260,261]},{"teal":169,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[262]},{"teal":170,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[263]},{"teal":171,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[264]},{"teal":172,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[265]},{"teal":173,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[266]},{"teal":174,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[267,268,269]},{"teal":175,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[270]},{"teal":176,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[271]},{"teal":177,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[272]},{"teal":181,"source":"contracts/BalancedPoolV2.algo.ts:49","pc":[273,274]},{"teal":182,"source":"contracts/BalancedPoolV2.algo.ts:49","pc":[275]},{"teal":183,"source":"contracts/BalancedPoolV2.algo.ts:49","pc":[276]},{"teal":186,"source":"contracts/BalancedPoolV2.algo.ts:49","errorMessage":"Weights must sum to 1","pc":[277]},{"teal":190,"source":"contracts/BalancedPoolV2.algo.ts:50","pc":[278,279,280]},{"teal":194,"source":"contracts/BalancedPoolV2.algo.ts:52","pc":[281]},{"teal":195,"source":"contracts/BalancedPoolV2.algo.ts:52","pc":[282]},{"teal":198,"source":"contracts/BalancedPoolV2.algo.ts:38","pc":[283,284]},{"teal":201,"source":"contracts/BalancedPoolV2.algo.ts:38","pc":[285,286]},{"teal":202,"source":"contracts/BalancedPoolV2.algo.ts:38","pc":[287]},{"teal":207,"source":"contracts/BalancedPoolV2.algo.ts:61","pc":[288,289,290]},{"teal":208,"source":"contracts/BalancedPoolV2.algo.ts:61","pc":[291]},{"teal":209,"source":"contracts/BalancedPoolV2.algo.ts:61","pc":[292]},{"teal":210,"source":"contracts/BalancedPoolV2.algo.ts:61","pc":[293,294]},{"teal":211,"source":"contracts/BalancedPoolV2.algo.ts:61","pc":[295]},{"teal":214,"source":"contracts/BalancedPoolV2.algo.ts:61","errorMessage":"argument 0 (sender) for addLiquidity must be a address","pc":[296]},{"teal":217,"source":"contracts/BalancedPoolV2.algo.ts:61","pc":[297,298,299]},{"teal":218,"source":"contracts/BalancedPoolV2.algo.ts:61","pc":[300]},{"teal":221,"source":"contracts/BalancedPoolV2.algo.ts:61","pc":[301,302,303]},{"teal":222,"source":"contracts/BalancedPoolV2.algo.ts:61","pc":[304]},{"teal":225,"source":"contracts/BalancedPoolV2.algo.ts:61","pc":[305,306,307]},{"teal":226,"source":"contracts/BalancedPoolV2.algo.ts:61","pc":[308]},{"teal":227,"source":"contracts/BalancedPoolV2.algo.ts:61","pc":[309]},{"teal":236,"source":"contracts/BalancedPoolV2.algo.ts:61","pc":[310,311,312]},{"teal":239,"source":"contracts/BalancedPoolV2.algo.ts:61","pc":[313]},{"teal":240,"source":"contracts/BalancedPoolV2.algo.ts:61","pc":[314,315]},{"teal":244,"source":"contracts/BalancedPoolV2.algo.ts:62","pc":[316,317,318]},{"teal":248,"source":"contracts/BalancedPoolV2.algo.ts:63","pc":[319]},{"teal":249,"source":"contracts/BalancedPoolV2.algo.ts:63","pc":[320]},{"teal":250,"source":"contracts/BalancedPoolV2.algo.ts:63","pc":[321]},{"teal":251,"source":"contracts/BalancedPoolV2.algo.ts:63","pc":[322]},{"teal":254,"source":"contracts/BalancedPoolV2.algo.ts:63","errorMessage":"pool not bootstrapped","pc":[323]},{"teal":258,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[324,325]},{"teal":259,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[326]},{"teal":260,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[327,328,329]},{"teal":261,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[330,331]},{"teal":262,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[332]},{"teal":263,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[333,334]},{"teal":264,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[335]},{"teal":265,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[336]},{"teal":266,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[337]},{"teal":267,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[338,339]},{"teal":268,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[340]},{"teal":269,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[341]},{"teal":270,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[342]},{"teal":271,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[343]},{"teal":272,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[344,345]},{"teal":276,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[346,347,348,349,350,351,352,353,354,355,356,357,358,359]},{"teal":277,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[360,361]},{"teal":278,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[362]},{"teal":279,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[363]},{"teal":280,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[364]},{"teal":284,"source":"contracts/BalancedPoolV2.algo.ts:67","pc":[365,366]},{"teal":285,"source":"contracts/BalancedPoolV2.algo.ts:67","pc":[367,368,369]},{"teal":289,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[370]},{"teal":290,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[371,372]},{"teal":291,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[373]},{"teal":292,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[374]},{"teal":293,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[375]},{"teal":296,"source":"contracts/BalancedPoolV2.algo.ts:68","errorMessage":"box value does not exist: this.balances(assetId).value","pc":[376]},{"teal":297,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[377]},{"teal":298,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[378,379]},{"teal":299,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[380]},{"teal":300,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[381]},{"teal":301,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[382,383]},{"teal":302,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[384]},{"teal":303,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[385]},{"teal":304,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[386]},{"teal":305,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[387]},{"teal":306,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[388]},{"teal":311,"source":"contracts/BalancedPoolV2.algo.ts:70","pc":[389]},{"teal":312,"source":"contracts/BalancedPoolV2.algo.ts:70","pc":[390,391]},{"teal":313,"source":"contracts/BalancedPoolV2.algo.ts:70","pc":[392]},{"teal":314,"source":"contracts/BalancedPoolV2.algo.ts:70","pc":[393]},{"teal":315,"source":"contracts/BalancedPoolV2.algo.ts:70","pc":[394]},{"teal":316,"source":"contracts/BalancedPoolV2.algo.ts:70","pc":[395]},{"teal":317,"source":"contracts/BalancedPoolV2.algo.ts:70","pc":[396]},{"teal":318,"source":"contracts/BalancedPoolV2.algo.ts:70","pc":[397,398,399]},{"teal":323,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[400]},{"teal":324,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[401,402]},{"teal":325,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[403]},{"teal":326,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[404,405]},{"teal":327,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[406]},{"teal":328,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[407]},{"teal":333,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[408]},{"teal":334,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[409,410]},{"teal":335,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[411]},{"teal":336,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[412]},{"teal":339,"source":"contracts/BalancedPoolV2.algo.ts:74","errorMessage":"box value does not exist: this.provided(sender).value","pc":[413]},{"teal":340,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[414,415,416]},{"teal":341,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[417,418]},{"teal":342,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[419]},{"teal":343,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[420,421]},{"teal":344,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[422]},{"teal":345,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[423]},{"teal":346,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[424]},{"teal":347,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[425,426]},{"teal":348,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[427]},{"teal":349,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[428]},{"teal":350,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[429,430]},{"teal":351,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[431]},{"teal":352,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[432]},{"teal":355,"source":"contracts/BalancedPoolV2.algo.ts:74","errorMessage":"box value does not exist: this.provided(sender).value","pc":[433]},{"teal":356,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[434,435,436]},{"teal":357,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[437,438]},{"teal":358,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[439]},{"teal":359,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[440,441]},{"teal":360,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[442]},{"teal":361,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[443]},{"teal":362,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[444]},{"teal":363,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[445,446]},{"teal":364,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[447]},{"teal":365,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[448]},{"teal":366,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[449]},{"teal":367,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[450]},{"teal":368,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[451,452]},{"teal":369,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[453]},{"teal":370,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[454]},{"teal":371,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[455]},{"teal":372,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[456]},{"teal":373,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[457,458]},{"teal":374,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[459]},{"teal":375,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[460]},{"teal":376,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[461]},{"teal":377,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[462]},{"teal":378,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[463]},{"teal":379,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[464]},{"teal":380,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[465]},{"teal":381,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[466]},{"teal":382,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[467]},{"teal":383,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[468]},{"teal":384,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[469,470,471]},{"teal":385,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[472]},{"teal":386,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[473]},{"teal":387,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[474]},{"teal":391,"source":"contracts/BalancedPoolV2.algo.ts:76","pc":[475,476]},{"teal":392,"source":"contracts/BalancedPoolV2.algo.ts:76","pc":[477,478]},{"teal":393,"source":"contracts/BalancedPoolV2.algo.ts:76","pc":[479,480,481]},{"teal":394,"source":"contracts/BalancedPoolV2.algo.ts:76","pc":[482,483]},{"teal":399,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[484,485]},{"teal":400,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[486,487]},{"teal":401,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[488]},{"teal":402,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[489]},{"teal":403,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[490]},{"teal":404,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[491]},{"teal":405,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[492]},{"teal":406,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[493,494,495]},{"teal":411,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[496,497]},{"teal":412,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[498,499]},{"teal":413,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[500]},{"teal":414,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[501]},{"teal":415,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[502]},{"teal":416,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[503]},{"teal":420,"source":"contracts/BalancedPoolV2.algo.ts:80","pc":[504,505]},{"teal":421,"source":"contracts/BalancedPoolV2.algo.ts:80","pc":[506,507]},{"teal":422,"source":"contracts/BalancedPoolV2.algo.ts:80","pc":[508]},{"teal":423,"source":"contracts/BalancedPoolV2.algo.ts:80","pc":[509,510]},{"teal":424,"source":"contracts/BalancedPoolV2.algo.ts:80","pc":[511]},{"teal":425,"source":"contracts/BalancedPoolV2.algo.ts:80","pc":[512]},{"teal":426,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[513,514,515]},{"teal":431,"source":"contracts/BalancedPoolV2.algo.ts:82","pc":[516,517]},{"teal":432,"source":"contracts/BalancedPoolV2.algo.ts:82","pc":[518,519]},{"teal":433,"source":"contracts/BalancedPoolV2.algo.ts:82","pc":[520]},{"teal":434,"source":"contracts/BalancedPoolV2.algo.ts:82","pc":[521]},{"teal":437,"source":"contracts/BalancedPoolV2.algo.ts:82","errorMessage":"box value does not exist: this.minRatios(sender).value","pc":[522]},{"teal":438,"source":"contracts/BalancedPoolV2.algo.ts:82","pc":[523]},{"teal":439,"source":"contracts/BalancedPoolV2.algo.ts:82","pc":[524]},{"teal":440,"source":"contracts/BalancedPoolV2.algo.ts:82","pc":[525]},{"teal":441,"source":"contracts/BalancedPoolV2.algo.ts:82","pc":[526,527,528]},{"teal":446,"source":"contracts/BalancedPoolV2.algo.ts:83","pc":[529,530]},{"teal":447,"source":"contracts/BalancedPoolV2.algo.ts:83","pc":[531,532]},{"teal":448,"source":"contracts/BalancedPoolV2.algo.ts:83","pc":[533]},{"teal":449,"source":"contracts/BalancedPoolV2.algo.ts:83","pc":[534,535]},{"teal":450,"source":"contracts/BalancedPoolV2.algo.ts:83","pc":[536]},{"teal":451,"source":"contracts/BalancedPoolV2.algo.ts:83","pc":[537]},{"teal":452,"source":"contracts/BalancedPoolV2.algo.ts:82","pc":[538,539,540]},{"teal":457,"source":"contracts/BalancedPoolV2.algo.ts:85","pc":[541,542]},{"teal":458,"source":"contracts/BalancedPoolV2.algo.ts:85","pc":[543,544]},{"teal":459,"source":"contracts/BalancedPoolV2.algo.ts:85","pc":[545]},{"teal":460,"source":"contracts/BalancedPoolV2.algo.ts:85","pc":[546]},{"teal":463,"source":"contracts/BalancedPoolV2.algo.ts:85","errorMessage":"box value does not exist: this.minRatios(sender).value","pc":[547]},{"teal":464,"source":"contracts/BalancedPoolV2.algo.ts:85","pc":[548]},{"teal":465,"source":"contracts/BalancedPoolV2.algo.ts:85","pc":[549,550]},{"teal":470,"source":"contracts/BalancedPoolV2.algo.ts:87","pc":[551,552]},{"teal":471,"source":"contracts/BalancedPoolV2.algo.ts:87","pc":[553,554]},{"teal":472,"source":"contracts/BalancedPoolV2.algo.ts:87","pc":[555]},{"teal":473,"source":"contracts/BalancedPoolV2.algo.ts:87","pc":[556,557,558]},{"teal":478,"source":"contracts/BalancedPoolV2.algo.ts:88","pc":[559,560]},{"teal":479,"source":"contracts/BalancedPoolV2.algo.ts:88","pc":[561,562]},{"teal":480,"source":"contracts/BalancedPoolV2.algo.ts:88","pc":[563]},{"teal":481,"source":"contracts/BalancedPoolV2.algo.ts:88","pc":[564,565]},{"teal":482,"source":"contracts/BalancedPoolV2.algo.ts:88","pc":[566]},{"teal":483,"source":"contracts/BalancedPoolV2.algo.ts:88","pc":[567]},{"teal":488,"source":"contracts/BalancedPoolV2.algo.ts:61","pc":[568]},{"teal":493,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[569,570,571]},{"teal":494,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[572]},{"teal":495,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[573]},{"teal":496,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[574,575]},{"teal":497,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[576]},{"teal":500,"source":"contracts/BalancedPoolV2.algo.ts:98","errorMessage":"argument 0 (sender) for computeLiquidity must be a address","pc":[577]},{"teal":503,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[578,579,580]},{"teal":504,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[581]},{"teal":505,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[582]},{"teal":513,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[583,584,585]},{"teal":516,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[586]},{"teal":517,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[587,588]},{"teal":521,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[589,590,591]},{"teal":525,"source":"contracts/BalancedPoolV2.algo.ts:100","pc":[592,593]},{"teal":526,"source":"contracts/BalancedPoolV2.algo.ts:100","pc":[594,595]},{"teal":527,"source":"contracts/BalancedPoolV2.algo.ts:100","pc":[596]},{"teal":528,"source":"contracts/BalancedPoolV2.algo.ts:100","pc":[597]},{"teal":531,"source":"contracts/BalancedPoolV2.algo.ts:100","errorMessage":"box value does not exist: this.minRatios(sender).value","pc":[598]},{"teal":532,"source":"contracts/BalancedPoolV2.algo.ts:100","pc":[599]},{"teal":533,"source":"contracts/BalancedPoolV2.algo.ts:100","pc":[600,601]},{"teal":537,"source":"contracts/BalancedPoolV2.algo.ts:102","pc":[602,603]},{"teal":538,"source":"contracts/BalancedPoolV2.algo.ts:102","pc":[604]},{"teal":539,"source":"contracts/BalancedPoolV2.algo.ts:102","pc":[605]},{"teal":542,"source":"contracts/BalancedPoolV2.algo.ts:102","errorMessage":"computed ratio is zero","pc":[606]},{"teal":546,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[607,608,609,610]},{"teal":547,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[611,612]},{"teal":548,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[613,614]},{"teal":549,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[615]},{"teal":550,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[616]},{"teal":551,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[617,618]},{"teal":556,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[619]},{"teal":557,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[620]},{"teal":558,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[621,622]},{"teal":559,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[623]},{"teal":560,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[624]},{"teal":561,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[625]},{"teal":562,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[626,627]},{"teal":563,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[628]},{"teal":564,"source":"contracts/BalancedPoolV2.algo.ts:3","pc":[629,630]},{"teal":565,"source":"contracts/BalancedPoolV2.algo.ts:3","pc":[631,632]},{"teal":566,"source":"contracts/BalancedPoolV2.algo.ts:3","pc":[633]},{"teal":567,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[634]},{"teal":568,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[635,636,637]},{"teal":573,"source":"contracts/BalancedPoolV2.algo.ts:106","pc":[638]},{"teal":574,"source":"contracts/BalancedPoolV2.algo.ts:106","pc":[639]},{"teal":575,"source":"contracts/BalancedPoolV2.algo.ts:106","pc":[640,641]},{"teal":576,"source":"contracts/BalancedPoolV2.algo.ts:106","pc":[642]},{"teal":577,"source":"contracts/BalancedPoolV2.algo.ts:106","pc":[643]},{"teal":578,"source":"contracts/BalancedPoolV2.algo.ts:106","pc":[644]},{"teal":579,"source":"contracts/BalancedPoolV2.algo.ts:106","pc":[645,646]},{"teal":580,"source":"contracts/BalancedPoolV2.algo.ts:106","pc":[647]},{"teal":581,"source":"contracts/BalancedPoolV2.algo.ts:106","pc":[648]},{"teal":582,"source":"contracts/BalancedPoolV2.algo.ts:106","pc":[649]},{"teal":583,"source":"contracts/BalancedPoolV2.algo.ts:106","pc":[650,651]},{"teal":584,"source":"contracts/BalancedPoolV2.algo.ts:106","pc":[652]},{"teal":585,"source":"contracts/BalancedPoolV2.algo.ts:106","pc":[653]},{"teal":586,"source":"contracts/BalancedPoolV2.algo.ts:106","pc":[654,655]},{"teal":590,"source":"contracts/BalancedPoolV2.algo.ts:107","pc":[656,657]},{"teal":591,"source":"contracts/BalancedPoolV2.algo.ts:107","pc":[658,659]},{"teal":592,"source":"contracts/BalancedPoolV2.algo.ts:107","pc":[660]},{"teal":593,"source":"contracts/BalancedPoolV2.algo.ts:107","pc":[661]},{"teal":594,"source":"contracts/BalancedPoolV2.algo.ts:107","pc":[662]},{"teal":595,"source":"contracts/BalancedPoolV2.algo.ts:107","pc":[663]},{"teal":596,"source":"contracts/BalancedPoolV2.algo.ts:107","pc":[664]},{"teal":597,"source":"contracts/BalancedPoolV2.algo.ts:107","pc":[665]},{"teal":598,"source":"contracts/BalancedPoolV2.algo.ts:107","pc":[666]},{"teal":599,"source":"contracts/BalancedPoolV2.algo.ts:107","pc":[667]},{"teal":602,"source":"contracts/BalancedPoolV2.algo.ts:107","errorMessage":"wideRatio failed","pc":[668]},{"teal":603,"source":"contracts/BalancedPoolV2.algo.ts:107","pc":[669,670]},{"teal":608,"source":"contracts/BalancedPoolV2.algo.ts:110","pc":[671,672]},{"teal":609,"source":"contracts/BalancedPoolV2.algo.ts:110","pc":[673]},{"teal":610,"source":"contracts/BalancedPoolV2.algo.ts:110","pc":[674]},{"teal":613,"source":"contracts/BalancedPoolV2.algo.ts:110","errorMessage":"computed LP amount is zero","pc":[675]},{"teal":617,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[676,677]},{"teal":618,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[678,679]},{"teal":619,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[680]},{"teal":620,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[681,682]},{"teal":621,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[683]},{"teal":625,"source":"contracts/BalancedPoolV2.algo.ts:114","pc":[684]},{"teal":626,"source":"contracts/BalancedPoolV2.algo.ts:114","pc":[685,686]},{"teal":631,"source":"contracts/BalancedPoolV2.algo.ts:114","pc":[687,688]},{"teal":632,"source":"contracts/BalancedPoolV2.algo.ts:114","pc":[689]},{"teal":633,"source":"contracts/BalancedPoolV2.algo.ts:114","pc":[690,691]},{"teal":634,"source":"contracts/BalancedPoolV2.algo.ts:114","pc":[692]},{"teal":635,"source":"contracts/BalancedPoolV2.algo.ts:114","pc":[693]},{"teal":638,"source":"contracts/BalancedPoolV2.algo.ts:114","errorMessage":"box value does not exist: this.provided(sender).value","pc":[694]},{"teal":639,"source":"contracts/BalancedPoolV2.algo.ts:114","pc":[695,696,697]},{"teal":640,"source":"contracts/BalancedPoolV2.algo.ts:114","pc":[698]},{"teal":641,"source":"contracts/BalancedPoolV2.algo.ts:114","pc":[699]},{"teal":642,"source":"contracts/BalancedPoolV2.algo.ts:114","pc":[700]},{"teal":643,"source":"contracts/BalancedPoolV2.algo.ts:114","pc":[701]},{"teal":644,"source":"contracts/BalancedPoolV2.algo.ts:114","pc":[702,703,704]},{"teal":648,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[705]},{"teal":649,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[706,707]},{"teal":650,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[708]},{"teal":651,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[709]},{"teal":654,"source":"contracts/BalancedPoolV2.algo.ts:115","errorMessage":"box value does not exist: this.provided(sender).value","pc":[710]},{"teal":655,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[711,712,713]},{"teal":656,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[714,715]},{"teal":657,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[716]},{"teal":658,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[717,718]},{"teal":659,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[719]},{"teal":660,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[720]},{"teal":661,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[721]},{"teal":662,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[722,723]},{"teal":663,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[724]},{"teal":664,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[725,726]},{"teal":665,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[727]},{"teal":666,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[728]},{"teal":667,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[729,730]},{"teal":668,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[731]},{"teal":669,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[732]},{"teal":670,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[733]},{"teal":671,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[734]},{"teal":672,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[735]},{"teal":673,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[736]},{"teal":674,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[737]},{"teal":675,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[738]},{"teal":676,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[739]},{"teal":677,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[740]},{"teal":678,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[741,742,743]},{"teal":679,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[744]},{"teal":680,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[745]},{"teal":681,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[746]},{"teal":686,"source":"contracts/BalancedPoolV2.algo.ts:114","pc":[747,748]},{"teal":687,"source":"contracts/BalancedPoolV2.algo.ts:114","pc":[749]},{"teal":688,"source":"contracts/BalancedPoolV2.algo.ts:114","pc":[750]},{"teal":689,"source":"contracts/BalancedPoolV2.algo.ts:114","pc":[751,752]},{"teal":690,"source":"contracts/BalancedPoolV2.algo.ts:114","pc":[753,754,755]},{"teal":699,"source":"contracts/BalancedPoolV2.algo.ts:118","pc":[756]},{"teal":700,"source":"contracts/BalancedPoolV2.algo.ts:118","pc":[757,758]},{"teal":701,"source":"contracts/BalancedPoolV2.algo.ts:118","pc":[759,760]},{"teal":705,"source":"contracts/BalancedPoolV2.algo.ts:119","pc":[761,762]},{"teal":706,"source":"contracts/BalancedPoolV2.algo.ts:119","pc":[763,764]},{"teal":710,"source":"contracts/BalancedPoolV2.algo.ts:120","pc":[765,766]},{"teal":711,"source":"contracts/BalancedPoolV2.algo.ts:120","pc":[767,768]},{"teal":715,"source":"contracts/BalancedPoolV2.algo.ts:121","pc":[769]},{"teal":716,"source":"contracts/BalancedPoolV2.algo.ts:121","pc":[770]},{"teal":717,"source":"contracts/BalancedPoolV2.algo.ts:121","pc":[771,772]},{"teal":720,"source":"contracts/BalancedPoolV2.algo.ts:118","pc":[773]},{"teal":721,"source":"contracts/BalancedPoolV2.algo.ts:118","pc":[774,775]},{"teal":724,"source":"contracts/BalancedPoolV2.algo.ts:118","pc":[776]},{"teal":725,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[777]},{"teal":730,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[778,779,780]},{"teal":731,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[781]},{"teal":734,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[782,783,784]},{"teal":735,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[785]},{"teal":738,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[786,787,788]},{"teal":739,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[789]},{"teal":742,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[790,791,792]},{"teal":743,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[793]},{"teal":744,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[794]},{"teal":745,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[795,796]},{"teal":746,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[797]},{"teal":749,"source":"contracts/BalancedPoolV2.algo.ts:125","errorMessage":"argument 3 (sender) for swap must be a address","pc":[798]},{"teal":752,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[799,800,801]},{"teal":753,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[802]},{"teal":754,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[803]},{"teal":758,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[804,805,806]},{"teal":761,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[807]},{"teal":762,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[808,809]},{"teal":766,"source":"contracts/BalancedPoolV2.algo.ts:126","pc":[810]},{"teal":767,"source":"contracts/BalancedPoolV2.algo.ts:126","pc":[811]},{"teal":768,"source":"contracts/BalancedPoolV2.algo.ts:126","pc":[812]},{"teal":769,"source":"contracts/BalancedPoolV2.algo.ts:126","pc":[813]},{"teal":772,"source":"contracts/BalancedPoolV2.algo.ts:126","errorMessage":"pool not bootstrapped","pc":[814]},{"teal":776,"source":"contracts/BalancedPoolV2.algo.ts:128","pc":[815,816]},{"teal":777,"source":"contracts/BalancedPoolV2.algo.ts:128","pc":[817]},{"teal":778,"source":"contracts/BalancedPoolV2.algo.ts:128","pc":[818,819,820]},{"teal":779,"source":"contracts/BalancedPoolV2.algo.ts:128","pc":[821,822]},{"teal":780,"source":"contracts/BalancedPoolV2.algo.ts:128","pc":[823]},{"teal":781,"source":"contracts/BalancedPoolV2.algo.ts:128","pc":[824,825]},{"teal":782,"source":"contracts/BalancedPoolV2.algo.ts:128","pc":[826]},{"teal":783,"source":"contracts/BalancedPoolV2.algo.ts:128","pc":[827]},{"teal":784,"source":"contracts/BalancedPoolV2.algo.ts:128","pc":[828]},{"teal":785,"source":"contracts/BalancedPoolV2.algo.ts:128","pc":[829,830]},{"teal":786,"source":"contracts/BalancedPoolV2.algo.ts:128","pc":[831]},{"teal":787,"source":"contracts/BalancedPoolV2.algo.ts:128","pc":[832]},{"teal":788,"source":"contracts/BalancedPoolV2.algo.ts:128","pc":[833]},{"teal":789,"source":"contracts/BalancedPoolV2.algo.ts:128","pc":[834]},{"teal":790,"source":"contracts/BalancedPoolV2.algo.ts:128","pc":[835,836]},{"teal":794,"source":"contracts/BalancedPoolV2.algo.ts:129","pc":[837,838]},{"teal":795,"source":"contracts/BalancedPoolV2.algo.ts:129","pc":[839]},{"teal":796,"source":"contracts/BalancedPoolV2.algo.ts:129","pc":[840,841,842]},{"teal":797,"source":"contracts/BalancedPoolV2.algo.ts:129","pc":[843,844]},{"teal":798,"source":"contracts/BalancedPoolV2.algo.ts:129","pc":[845]},{"teal":799,"source":"contracts/BalancedPoolV2.algo.ts:129","pc":[846,847]},{"teal":800,"source":"contracts/BalancedPoolV2.algo.ts:129","pc":[848]},{"teal":801,"source":"contracts/BalancedPoolV2.algo.ts:129","pc":[849]},{"teal":802,"source":"contracts/BalancedPoolV2.algo.ts:129","pc":[850]},{"teal":803,"source":"contracts/BalancedPoolV2.algo.ts:129","pc":[851,852]},{"teal":804,"source":"contracts/BalancedPoolV2.algo.ts:129","pc":[853]},{"teal":805,"source":"contracts/BalancedPoolV2.algo.ts:129","pc":[854]},{"teal":806,"source":"contracts/BalancedPoolV2.algo.ts:129","pc":[855]},{"teal":807,"source":"contracts/BalancedPoolV2.algo.ts:129","pc":[856]},{"teal":808,"source":"contracts/BalancedPoolV2.algo.ts:129","pc":[857,858]},{"teal":812,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[859]},{"teal":813,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[860,861]},{"teal":814,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[862]},{"teal":815,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[863]},{"teal":816,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[864]},{"teal":819,"source":"contracts/BalancedPoolV2.algo.ts:131","errorMessage":"box value does not exist: this.balances(assetIn).value","pc":[865]},{"teal":820,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[866]},{"teal":821,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[867,868]},{"teal":825,"source":"contracts/BalancedPoolV2.algo.ts:132","pc":[869]},{"teal":826,"source":"contracts/BalancedPoolV2.algo.ts:132","pc":[870,871]},{"teal":827,"source":"contracts/BalancedPoolV2.algo.ts:132","pc":[872]},{"teal":828,"source":"contracts/BalancedPoolV2.algo.ts:132","pc":[873]},{"teal":829,"source":"contracts/BalancedPoolV2.algo.ts:132","pc":[874]},{"teal":832,"source":"contracts/BalancedPoolV2.algo.ts:132","errorMessage":"box value does not exist: this.balances(assetOut).value","pc":[875]},{"teal":833,"source":"contracts/BalancedPoolV2.algo.ts:132","pc":[876]},{"teal":834,"source":"contracts/BalancedPoolV2.algo.ts:132","pc":[877,878]},{"teal":838,"source":"contracts/BalancedPoolV2.algo.ts:134","pc":[879,880]},{"teal":839,"source":"contracts/BalancedPoolV2.algo.ts:134","pc":[881,882]},{"teal":840,"source":"contracts/BalancedPoolV2.algo.ts:134","pc":[883]},{"teal":841,"source":"contracts/BalancedPoolV2.algo.ts:134","pc":[884]},{"teal":842,"source":"contracts/BalancedPoolV2.algo.ts:134","pc":[885]},{"teal":845,"source":"contracts/BalancedPoolV2.algo.ts:134","errorMessage":"box value does not exist: this.weights(from).value","pc":[886]},{"teal":846,"source":"contracts/BalancedPoolV2.algo.ts:134","pc":[887]},{"teal":847,"source":"contracts/BalancedPoolV2.algo.ts:134","pc":[888,889]},{"teal":851,"source":"contracts/BalancedPoolV2.algo.ts:135","pc":[890,891]},{"teal":852,"source":"contracts/BalancedPoolV2.algo.ts:135","pc":[892,893]},{"teal":853,"source":"contracts/BalancedPoolV2.algo.ts:135","pc":[894]},{"teal":854,"source":"contracts/BalancedPoolV2.algo.ts:135","pc":[895]},{"teal":855,"source":"contracts/BalancedPoolV2.algo.ts:135","pc":[896]},{"teal":858,"source":"contracts/BalancedPoolV2.algo.ts:135","errorMessage":"box value does not exist: this.weights(to).value","pc":[897]},{"teal":859,"source":"contracts/BalancedPoolV2.algo.ts:135","pc":[898]},{"teal":860,"source":"contracts/BalancedPoolV2.algo.ts:135","pc":[899,900]},{"teal":864,"source":"contracts/BalancedPoolV2.algo.ts:137","pc":[901,902]},{"teal":865,"source":"contracts/BalancedPoolV2.algo.ts:137","pc":[903]},{"teal":866,"source":"contracts/BalancedPoolV2.algo.ts:137","pc":[904]},{"teal":870,"source":"contracts/BalancedPoolV2.algo.ts:138","pc":[905,906]},{"teal":871,"source":"contracts/BalancedPoolV2.algo.ts:138","pc":[907]},{"teal":872,"source":"contracts/BalancedPoolV2.algo.ts:138","pc":[908]},{"teal":876,"source":"contracts/BalancedPoolV2.algo.ts:139","pc":[909,910]},{"teal":877,"source":"contracts/BalancedPoolV2.algo.ts:139","pc":[911]},{"teal":878,"source":"contracts/BalancedPoolV2.algo.ts:139","pc":[912]},{"teal":882,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[913,914]},{"teal":883,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[915]},{"teal":884,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[916]},{"teal":888,"source":"contracts/BalancedPoolV2.algo.ts:142","pc":[917,918]},{"teal":889,"source":"contracts/BalancedPoolV2.algo.ts:142","pc":[919,920]},{"teal":890,"source":"contracts/BalancedPoolV2.algo.ts:142","pc":[921,922]},{"teal":891,"source":"contracts/BalancedPoolV2.algo.ts:142","pc":[923,924]},{"teal":892,"source":"contracts/BalancedPoolV2.algo.ts:142","pc":[925,926]},{"teal":893,"source":"contracts/BalancedPoolV2.algo.ts:142","pc":[927,928,929]},{"teal":894,"source":"contracts/BalancedPoolV2.algo.ts:142","pc":[930,931]},{"teal":898,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[932,933]},{"teal":899,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[934]},{"teal":900,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[935]},{"teal":904,"source":"contracts/BalancedPoolV2.algo.ts:146","pc":[936]},{"teal":905,"source":"contracts/BalancedPoolV2.algo.ts:146","pc":[937,938]},{"teal":906,"source":"contracts/BalancedPoolV2.algo.ts:146","pc":[939]},{"teal":907,"source":"contracts/BalancedPoolV2.algo.ts:146","pc":[940]},{"teal":908,"source":"contracts/BalancedPoolV2.algo.ts:146","pc":[941,942]},{"teal":909,"source":"contracts/BalancedPoolV2.algo.ts:146","pc":[943,944]},{"teal":910,"source":"contracts/BalancedPoolV2.algo.ts:146","pc":[945]},{"teal":911,"source":"contracts/BalancedPoolV2.algo.ts:146","pc":[946]},{"teal":912,"source":"contracts/BalancedPoolV2.algo.ts:146","pc":[947]},{"teal":916,"source":"contracts/BalancedPoolV2.algo.ts:147","pc":[948]},{"teal":917,"source":"contracts/BalancedPoolV2.algo.ts:147","pc":[949,950]},{"teal":918,"source":"contracts/BalancedPoolV2.algo.ts:147","pc":[951]},{"teal":919,"source":"contracts/BalancedPoolV2.algo.ts:147","pc":[952]},{"teal":920,"source":"contracts/BalancedPoolV2.algo.ts:147","pc":[953,954]},{"teal":921,"source":"contracts/BalancedPoolV2.algo.ts:147","pc":[955,956]},{"teal":922,"source":"contracts/BalancedPoolV2.algo.ts:147","pc":[957]},{"teal":923,"source":"contracts/BalancedPoolV2.algo.ts:147","pc":[958]},{"teal":924,"source":"contracts/BalancedPoolV2.algo.ts:147","pc":[959]},{"teal":932,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[960]},{"teal":933,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[961,962]},{"teal":934,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[963,964]},{"teal":938,"source":"contracts/BalancedPoolV2.algo.ts:150","pc":[965,966]},{"teal":939,"source":"contracts/BalancedPoolV2.algo.ts:150","pc":[967,968]},{"teal":943,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[969,970]},{"teal":944,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[971,972]},{"teal":948,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[973,974]},{"teal":949,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[975,976]},{"teal":952,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[977]},{"teal":953,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[978,979]},{"teal":956,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[980]},{"teal":957,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[981]},{"teal":962,"source":"contracts/BalancedPoolV2.algo.ts:160","pc":[982,983,984]},{"teal":963,"source":"contracts/BalancedPoolV2.algo.ts:160","pc":[985]},{"teal":966,"source":"contracts/BalancedPoolV2.algo.ts:160","pc":[986,987,988]},{"teal":967,"source":"contracts/BalancedPoolV2.algo.ts:160","pc":[989]},{"teal":968,"source":"contracts/BalancedPoolV2.algo.ts:160","pc":[990]},{"teal":975,"source":"contracts/BalancedPoolV2.algo.ts:160","pc":[991,992,993]},{"teal":980,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[994,995]},{"teal":981,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[996,997]},{"teal":982,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[998,999]},{"teal":983,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[1000]},{"teal":984,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[1001]},{"teal":985,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[1002,1003,1004]},{"teal":990,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[1005]},{"teal":999,"source":"contracts/BalancedPoolV2.algo.ts:165","pc":[1006]},{"teal":1000,"source":"contracts/BalancedPoolV2.algo.ts:165","pc":[1007,1008]},{"teal":1001,"source":"contracts/BalancedPoolV2.algo.ts:165","pc":[1009,1010]},{"teal":1005,"source":"contracts/BalancedPoolV2.algo.ts:166","pc":[1011,1012]},{"teal":1006,"source":"contracts/BalancedPoolV2.algo.ts:166","pc":[1013,1014]},{"teal":1010,"source":"contracts/BalancedPoolV2.algo.ts:167","pc":[1015,1016]},{"teal":1011,"source":"contracts/BalancedPoolV2.algo.ts:167","pc":[1017,1018]},{"teal":1015,"source":"contracts/BalancedPoolV2.algo.ts:168","pc":[1019]},{"teal":1016,"source":"contracts/BalancedPoolV2.algo.ts:168","pc":[1020,1021]},{"teal":1019,"source":"contracts/BalancedPoolV2.algo.ts:165","pc":[1022]},{"teal":1020,"source":"contracts/BalancedPoolV2.algo.ts:165","pc":[1023,1024]},{"teal":1023,"source":"contracts/BalancedPoolV2.algo.ts:165","pc":[1025]},{"teal":1024,"source":"contracts/BalancedPoolV2.algo.ts:160","pc":[1026]},{"teal":1035,"source":"contracts/BalancedPoolV2.algo.ts:180","pc":[1027,1028,1029]},{"teal":1040,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[1030,1031]},{"teal":1041,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[1032,1033]},{"teal":1042,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[1034]},{"teal":1043,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[1035]},{"teal":1044,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[1036]},{"teal":1045,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[1037]},{"teal":1046,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[1038]},{"teal":1047,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[1039]},{"teal":1048,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[1040,1041,1042]},{"teal":1053,"source":"contracts/BalancedPoolV2.algo.ts:182","pc":[1043,1044]},{"teal":1054,"source":"contracts/BalancedPoolV2.algo.ts:182","pc":[1045,1046]},{"teal":1055,"source":"contracts/BalancedPoolV2.algo.ts:182","pc":[1047]},{"teal":1056,"source":"contracts/BalancedPoolV2.algo.ts:182","pc":[1048]},{"teal":1057,"source":"contracts/BalancedPoolV2.algo.ts:182","pc":[1049]},{"teal":1058,"source":"contracts/BalancedPoolV2.algo.ts:182","pc":[1050]},{"teal":1059,"source":"contracts/BalancedPoolV2.algo.ts:182","pc":[1051]},{"teal":1065,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[1052]},{"teal":1066,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[1053,1054]},{"teal":1067,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[1055]},{"teal":1068,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[1056]},{"teal":1069,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[1057]},{"teal":1070,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[1058]},{"teal":1071,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[1059]},{"teal":1072,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[1060]},{"teal":1073,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[1061,1062,1063]},{"teal":1078,"source":"contracts/BalancedPoolV2.algo.ts:186","pc":[1064]},{"teal":1079,"source":"contracts/BalancedPoolV2.algo.ts:186","pc":[1065,1066]},{"teal":1080,"source":"contracts/BalancedPoolV2.algo.ts:186","pc":[1067]},{"teal":1081,"source":"contracts/BalancedPoolV2.algo.ts:186","pc":[1068]},{"teal":1082,"source":"contracts/BalancedPoolV2.algo.ts:186","pc":[1069]},{"teal":1083,"source":"contracts/BalancedPoolV2.algo.ts:186","pc":[1070]},{"teal":1084,"source":"contracts/BalancedPoolV2.algo.ts:186","pc":[1071]},{"teal":1089,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[1072,1073]},{"teal":1090,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[1074,1075]},{"teal":1091,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[1076]},{"teal":1092,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[1077]},{"teal":1093,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[1078,1079]},{"teal":1094,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[1080]},{"teal":1095,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[1081]},{"teal":1099,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1082]},{"teal":1100,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1083,1084]},{"teal":1101,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1085]},{"teal":1102,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1086]},{"teal":1103,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1087,1088]},{"teal":1104,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1089]},{"teal":1105,"source":"contracts/BalancedPoolV2.algo.ts:180","pc":[1090]},{"teal":1111,"source":"contracts/BalancedPoolV2.algo.ts:196","pc":[1091,1092,1093]},{"teal":1116,"source":"contracts/BalancedPoolV2.algo.ts:197","pc":[1094]},{"teal":1117,"source":"contracts/BalancedPoolV2.algo.ts:197","pc":[1095]},{"teal":1118,"source":"contracts/BalancedPoolV2.algo.ts:197","pc":[1096]},{"teal":1119,"source":"contracts/BalancedPoolV2.algo.ts:197","pc":[1097]},{"teal":1120,"source":"contracts/BalancedPoolV2.algo.ts:197","pc":[1098,1099,1100]},{"teal":1135,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1101]},{"teal":1136,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1102]},{"teal":1137,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1103,1104]},{"teal":1138,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1105,1106]},{"teal":1142,"source":"contracts/BalancedPoolV2.algo.ts:3","pc":[1107,1108]},{"teal":1143,"source":"contracts/BalancedPoolV2.algo.ts:3","pc":[1109,1110]},{"teal":1144,"source":"contracts/BalancedPoolV2.algo.ts:3","pc":[1111]},{"teal":1145,"source":"contracts/BalancedPoolV2.algo.ts:199","pc":[1112,1113]},{"teal":1149,"source":"contracts/BalancedPoolV2.algo.ts:200","pc":[1114,1115]},{"teal":1150,"source":"contracts/BalancedPoolV2.algo.ts:200","pc":[1116,1117]},{"teal":1154,"source":"contracts/BalancedPoolV2.algo.ts:201","pc":[1118,1119]},{"teal":1155,"source":"contracts/BalancedPoolV2.algo.ts:201","pc":[1120,1121]},{"teal":1159,"source":"contracts/BalancedPoolV2.algo.ts:202","pc":[1122,1123]},{"teal":1160,"source":"contracts/BalancedPoolV2.algo.ts:202","pc":[1124,1125]},{"teal":1164,"source":"contracts/BalancedPoolV2.algo.ts:203","pc":[1126,1127]},{"teal":1165,"source":"contracts/BalancedPoolV2.algo.ts:203","pc":[1128,1129]},{"teal":1169,"source":"contracts/BalancedPoolV2.algo.ts:204","pc":[1130,1131]},{"teal":1170,"source":"contracts/BalancedPoolV2.algo.ts:204","pc":[1132,1133]},{"teal":1174,"source":"contracts/BalancedPoolV2.algo.ts:205","pc":[1134]},{"teal":1175,"source":"contracts/BalancedPoolV2.algo.ts:205","pc":[1135,1136]},{"teal":1179,"source":"contracts/BalancedPoolV2.algo.ts:206","pc":[1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151]},{"teal":1180,"source":"contracts/BalancedPoolV2.algo.ts:206","pc":[1152,1153,1154]},{"teal":1181,"source":"contracts/BalancedPoolV2.algo.ts:206","pc":[1155,1156,1157]},{"teal":1182,"source":"contracts/BalancedPoolV2.algo.ts:206","pc":[1158]},{"teal":1183,"source":"contracts/BalancedPoolV2.algo.ts:206","pc":[1159,1160]},{"teal":1187,"source":"contracts/BalancedPoolV2.algo.ts:207","pc":[1161,1162,1163,1164]},{"teal":1188,"source":"contracts/BalancedPoolV2.algo.ts:207","pc":[1165,1166]},{"teal":1191,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1167]},{"teal":1192,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1168,1169]},{"teal":1195,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1170]},{"teal":1196,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1171,1172]},{"teal":1197,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1173]},{"teal":1200,"source":"contracts/BalancedPoolV2.algo.ts:196","pc":[1174]},{"teal":1206,"source":"contracts/BalancedPoolV2.algo.ts:215","pc":[1175,1176,1177]},{"teal":1210,"source":"contracts/BalancedPoolV2.algo.ts:216","pc":[1178,1179]},{"teal":1211,"source":"contracts/BalancedPoolV2.algo.ts:216","pc":[1180,1181]},{"teal":1212,"source":"contracts/BalancedPoolV2.algo.ts:216","pc":[1182]},{"teal":1213,"source":"contracts/BalancedPoolV2.algo.ts:216","pc":[1183]},{"teal":1216,"source":"contracts/BalancedPoolV2.algo.ts:216","errorMessage":"only the manager can call this method","pc":[1184]},{"teal":1217,"source":"contracts/BalancedPoolV2.algo.ts:215","pc":[1185]},{"teal":1221,"source":"contracts/BalancedPoolV2.algo.ts:219","pc":[1186,1187,1188]},{"teal":1224,"source":"contracts/BalancedPoolV2.algo.ts:219","pc":[1189]},{"teal":1225,"source":"contracts/BalancedPoolV2.algo.ts:219","pc":[1190,1191]},{"teal":1229,"source":"contracts/BalancedPoolV2.algo.ts:220","pc":[1192,1193]},{"teal":1230,"source":"contracts/BalancedPoolV2.algo.ts:220","pc":[1194]},{"teal":1231,"source":"contracts/BalancedPoolV2.algo.ts:220","pc":[1195]},{"teal":1234,"source":"contracts/BalancedPoolV2.algo.ts:220","errorMessage":"log undefined for x ≤ 0","pc":[1196]},{"teal":1238,"source":"contracts/BalancedPoolV2.algo.ts:222","pc":[1197]},{"teal":1239,"source":"contracts/BalancedPoolV2.algo.ts:222","pc":[1198,1199]},{"teal":1244,"source":"contracts/BalancedPoolV2.algo.ts:225","pc":[1200,1201]},{"teal":1245,"source":"contracts/BalancedPoolV2.algo.ts:225","pc":[1202]},{"teal":1246,"source":"contracts/BalancedPoolV2.algo.ts:225","pc":[1203]},{"teal":1247,"source":"contracts/BalancedPoolV2.algo.ts:225","pc":[1204,1205,1206]},{"teal":1252,"source":"contracts/BalancedPoolV2.algo.ts:226","pc":[1207]},{"teal":1253,"source":"contracts/BalancedPoolV2.algo.ts:226","pc":[1208,1209]},{"teal":1257,"source":"contracts/BalancedPoolV2.algo.ts:227","pc":[1210]},{"teal":1258,"source":"contracts/BalancedPoolV2.algo.ts:227","pc":[1211]},{"teal":1259,"source":"contracts/BalancedPoolV2.algo.ts:227","pc":[1212]},{"teal":1260,"source":"contracts/BalancedPoolV2.algo.ts:227","pc":[1213]},{"teal":1261,"source":"contracts/BalancedPoolV2.algo.ts:227","pc":[1214,1215]},{"teal":1262,"source":"contracts/BalancedPoolV2.algo.ts:227","pc":[1216]},{"teal":1263,"source":"contracts/BalancedPoolV2.algo.ts:227","pc":[1217]},{"teal":1264,"source":"contracts/BalancedPoolV2.algo.ts:227","pc":[1218]},{"teal":1265,"source":"contracts/BalancedPoolV2.algo.ts:227","pc":[1219]},{"teal":1266,"source":"contracts/BalancedPoolV2.algo.ts:227","pc":[1220]},{"teal":1269,"source":"contracts/BalancedPoolV2.algo.ts:227","errorMessage":"wideRatio failed","pc":[1221]},{"teal":1270,"source":"contracts/BalancedPoolV2.algo.ts:227","pc":[1222,1223]},{"teal":1274,"source":"contracts/BalancedPoolV2.algo.ts:228","pc":[1224,1225]},{"teal":1275,"source":"contracts/BalancedPoolV2.algo.ts:228","pc":[1226]},{"teal":1276,"source":"contracts/BalancedPoolV2.algo.ts:228","pc":[1227]},{"teal":1277,"source":"contracts/BalancedPoolV2.algo.ts:228","pc":[1228]},{"teal":1278,"source":"contracts/BalancedPoolV2.algo.ts:228","pc":[1229]},{"teal":1279,"source":"contracts/BalancedPoolV2.algo.ts:228","pc":[1230]},{"teal":1280,"source":"contracts/BalancedPoolV2.algo.ts:228","pc":[1231,1232]},{"teal":1281,"source":"contracts/BalancedPoolV2.algo.ts:228","pc":[1233]},{"teal":1282,"source":"contracts/BalancedPoolV2.algo.ts:228","pc":[1234]},{"teal":1283,"source":"contracts/BalancedPoolV2.algo.ts:228","pc":[1235]},{"teal":1284,"source":"contracts/BalancedPoolV2.algo.ts:228","pc":[1236]},{"teal":1285,"source":"contracts/BalancedPoolV2.algo.ts:228","pc":[1237]},{"teal":1288,"source":"contracts/BalancedPoolV2.algo.ts:228","errorMessage":"wideRatio failed","pc":[1238]},{"teal":1289,"source":"contracts/BalancedPoolV2.algo.ts:228","pc":[1239,1240]},{"teal":1290,"source":"contracts/BalancedPoolV2.algo.ts:225","pc":[1241,1242,1243]},{"teal":1295,"source":"contracts/BalancedPoolV2.algo.ts:230","pc":[1244,1245]},{"teal":1296,"source":"contracts/BalancedPoolV2.algo.ts:230","pc":[1246]},{"teal":1297,"source":"contracts/BalancedPoolV2.algo.ts:230","pc":[1247]},{"teal":1298,"source":"contracts/BalancedPoolV2.algo.ts:230","pc":[1248]},{"teal":1299,"source":"contracts/BalancedPoolV2.algo.ts:230","pc":[1249]},{"teal":1300,"source":"contracts/BalancedPoolV2.algo.ts:230","pc":[1250]},{"teal":1301,"source":"contracts/BalancedPoolV2.algo.ts:230","pc":[1251,1252]},{"teal":1302,"source":"contracts/BalancedPoolV2.algo.ts:230","pc":[1253]},{"teal":1303,"source":"contracts/BalancedPoolV2.algo.ts:230","pc":[1254]},{"teal":1304,"source":"contracts/BalancedPoolV2.algo.ts:230","pc":[1255]},{"teal":1305,"source":"contracts/BalancedPoolV2.algo.ts:230","pc":[1256]},{"teal":1306,"source":"contracts/BalancedPoolV2.algo.ts:230","pc":[1257]},{"teal":1309,"source":"contracts/BalancedPoolV2.algo.ts:230","errorMessage":"wideRatio failed","pc":[1258]},{"teal":1310,"source":"contracts/BalancedPoolV2.algo.ts:230","pc":[1259,1260]},{"teal":1315,"source":"contracts/BalancedPoolV2.algo.ts:233","pc":[1261,1262]},{"teal":1316,"source":"contracts/BalancedPoolV2.algo.ts:233","pc":[1263,1264]},{"teal":1320,"source":"contracts/BalancedPoolV2.algo.ts:234","pc":[1265,1266]},{"teal":1321,"source":"contracts/BalancedPoolV2.algo.ts:234","pc":[1267,1268]},{"teal":1325,"source":"contracts/BalancedPoolV2.algo.ts:235","pc":[1269]},{"teal":1326,"source":"contracts/BalancedPoolV2.algo.ts:235","pc":[1270,1271]},{"teal":1330,"source":"contracts/BalancedPoolV2.algo.ts:237","pc":[1272,1273]},{"teal":1331,"source":"contracts/BalancedPoolV2.algo.ts:237","pc":[1274,1275]},{"teal":1336,"source":"contracts/BalancedPoolV2.algo.ts:237","pc":[1276,1277]},{"teal":1337,"source":"contracts/BalancedPoolV2.algo.ts:237","pc":[1278,1279]},{"teal":1338,"source":"contracts/BalancedPoolV2.algo.ts:237","pc":[1280]},{"teal":1339,"source":"contracts/BalancedPoolV2.algo.ts:237","pc":[1281,1282,1283]},{"teal":1343,"source":"contracts/BalancedPoolV2.algo.ts:238","pc":[1284,1285]},{"teal":1344,"source":"contracts/BalancedPoolV2.algo.ts:238","pc":[1286,1287]},{"teal":1345,"source":"contracts/BalancedPoolV2.algo.ts:238","pc":[1288]},{"teal":1346,"source":"contracts/BalancedPoolV2.algo.ts:238","pc":[1289]},{"teal":1347,"source":"contracts/BalancedPoolV2.algo.ts:238","pc":[1290]},{"teal":1348,"source":"contracts/BalancedPoolV2.algo.ts:238","pc":[1291]},{"teal":1349,"source":"contracts/BalancedPoolV2.algo.ts:238","pc":[1292]},{"teal":1350,"source":"contracts/BalancedPoolV2.algo.ts:238","pc":[1293]},{"teal":1351,"source":"contracts/BalancedPoolV2.algo.ts:238","pc":[1294]},{"teal":1352,"source":"contracts/BalancedPoolV2.algo.ts:238","pc":[1295]},{"teal":1355,"source":"contracts/BalancedPoolV2.algo.ts:238","errorMessage":"wideRatio failed","pc":[1296]},{"teal":1356,"source":"contracts/BalancedPoolV2.algo.ts:238","pc":[1297,1298]},{"teal":1360,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1299]},{"teal":1361,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1300,1301]},{"teal":1362,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1302]},{"teal":1363,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1303,1304]},{"teal":1364,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1305]},{"teal":1365,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1306]},{"teal":1366,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1307]},{"teal":1367,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1308]},{"teal":1368,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1309]},{"teal":1371,"source":"contracts/BalancedPoolV2.algo.ts:239","errorMessage":"wideRatio failed","pc":[1310]},{"teal":1372,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1311,1312]},{"teal":1376,"source":"contracts/BalancedPoolV2.algo.ts:240","pc":[1313,1314]},{"teal":1377,"source":"contracts/BalancedPoolV2.algo.ts:240","pc":[1315,1316,1317]},{"teal":1378,"source":"contracts/BalancedPoolV2.algo.ts:240","pc":[1318,1319]},{"teal":1379,"source":"contracts/BalancedPoolV2.algo.ts:240","pc":[1320,1321]},{"teal":1380,"source":"contracts/BalancedPoolV2.algo.ts:240","pc":[1322]},{"teal":1381,"source":"contracts/BalancedPoolV2.algo.ts:240","pc":[1323,1324,1325]},{"teal":1384,"source":"contracts/BalancedPoolV2.algo.ts:240","pc":[1326,1327]},{"teal":1385,"source":"contracts/BalancedPoolV2.algo.ts:240","pc":[1328,1329]},{"teal":1386,"source":"contracts/BalancedPoolV2.algo.ts:240","pc":[1330]},{"teal":1389,"source":"contracts/BalancedPoolV2.algo.ts:240","pc":[1331,1332]},{"teal":1393,"source":"contracts/BalancedPoolV2.algo.ts:241","pc":[1333,1334]},{"teal":1394,"source":"contracts/BalancedPoolV2.algo.ts:241","pc":[1335]},{"teal":1395,"source":"contracts/BalancedPoolV2.algo.ts:241","pc":[1336,1337]},{"teal":1400,"source":"contracts/BalancedPoolV2.algo.ts:237","pc":[1338,1339]},{"teal":1401,"source":"contracts/BalancedPoolV2.algo.ts:237","pc":[1340]},{"teal":1402,"source":"contracts/BalancedPoolV2.algo.ts:237","pc":[1341]},{"teal":1403,"source":"contracts/BalancedPoolV2.algo.ts:237","pc":[1342,1343]},{"teal":1404,"source":"contracts/BalancedPoolV2.algo.ts:237","pc":[1344,1345,1346]},{"teal":1409,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1347,1348]},{"teal":1410,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1349]},{"teal":1411,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1350,1351]},{"teal":1412,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1352]},{"teal":1413,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1353]},{"teal":1416,"source":"contracts/BalancedPoolV2.algo.ts:219","pc":[1354,1355]},{"teal":1419,"source":"contracts/BalancedPoolV2.algo.ts:219","pc":[1356,1357]},{"teal":1420,"source":"contracts/BalancedPoolV2.algo.ts:219","pc":[1358]},{"teal":1424,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1359,1360,1361]},{"teal":1427,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1362]},{"teal":1428,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1363,1364]},{"teal":1432,"source":"contracts/BalancedPoolV2.algo.ts:248","pc":[1365]},{"teal":1433,"source":"contracts/BalancedPoolV2.algo.ts:248","pc":[1366,1367]},{"teal":1437,"source":"contracts/BalancedPoolV2.algo.ts:249","pc":[1368]},{"teal":1438,"source":"contracts/BalancedPoolV2.algo.ts:249","pc":[1369,1370]},{"teal":1442,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1371]},{"teal":1443,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1372,1373]},{"teal":1448,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1374,1375]},{"teal":1449,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1376,1377]},{"teal":1450,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1378]},{"teal":1451,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1379,1380,1381]},{"teal":1455,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1382,1383]},{"teal":1456,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1384,1385]},{"teal":1457,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1386]},{"teal":1458,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1387]},{"teal":1459,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1388,1389]},{"teal":1460,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1390]},{"teal":1461,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1391]},{"teal":1462,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1392]},{"teal":1463,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1393]},{"teal":1464,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1394]},{"teal":1465,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1395]},{"teal":1466,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1396]},{"teal":1469,"source":"contracts/BalancedPoolV2.algo.ts:252","errorMessage":"wideRatio failed","pc":[1397]},{"teal":1470,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1398,1399]},{"teal":1474,"source":"contracts/BalancedPoolV2.algo.ts:253","pc":[1400,1401]},{"teal":1475,"source":"contracts/BalancedPoolV2.algo.ts:253","pc":[1402,1403]},{"teal":1476,"source":"contracts/BalancedPoolV2.algo.ts:253","pc":[1404]},{"teal":1477,"source":"contracts/BalancedPoolV2.algo.ts:253","pc":[1405,1406]},{"teal":1482,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1407,1408]},{"teal":1483,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1409]},{"teal":1484,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1410]},{"teal":1485,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1411,1412]},{"teal":1486,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1413,1414,1415]},{"teal":1491,"source":"contracts/BalancedPoolV2.algo.ts:256","pc":[1416,1417]},{"teal":1494,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1418,1419]},{"teal":1497,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1420,1421]},{"teal":1498,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1422]},{"teal":1502,"source":"contracts/BalancedPoolV2.algo.ts:259","pc":[1423,1424,1425]},{"teal":1505,"source":"contracts/BalancedPoolV2.algo.ts:259","pc":[1426]},{"teal":1506,"source":"contracts/BalancedPoolV2.algo.ts:259","pc":[1427,1428]},{"teal":1511,"source":"contracts/BalancedPoolV2.algo.ts:260","pc":[1429,1430]},{"teal":1512,"source":"contracts/BalancedPoolV2.algo.ts:260","pc":[1431]},{"teal":1513,"source":"contracts/BalancedPoolV2.algo.ts:260","pc":[1432]},{"teal":1514,"source":"contracts/BalancedPoolV2.algo.ts:260","pc":[1433,1434,1435]},{"teal":1519,"source":"contracts/BalancedPoolV2.algo.ts:260","pc":[1436]},{"teal":1520,"source":"contracts/BalancedPoolV2.algo.ts:260","pc":[1437,1438,1439]},{"teal":1525,"source":"contracts/BalancedPoolV2.algo.ts:262","pc":[1440,1441]},{"teal":1526,"source":"contracts/BalancedPoolV2.algo.ts:262","pc":[1442,1443,1444]},{"teal":1527,"source":"contracts/BalancedPoolV2.algo.ts:262","pc":[1445,1446]},{"teal":1531,"source":"contracts/BalancedPoolV2.algo.ts:263","pc":[1447,1448]},{"teal":1532,"source":"contracts/BalancedPoolV2.algo.ts:263","pc":[1449,1450]},{"teal":1533,"source":"contracts/BalancedPoolV2.algo.ts:263","pc":[1451,1452]},{"teal":1534,"source":"contracts/BalancedPoolV2.algo.ts:263","pc":[1453,1454,1455]},{"teal":1535,"source":"contracts/BalancedPoolV2.algo.ts:263","pc":[1456]},{"teal":1536,"source":"contracts/BalancedPoolV2.algo.ts:263","pc":[1457,1458]},{"teal":1540,"source":"contracts/BalancedPoolV2.algo.ts:264","pc":[1459,1460]},{"teal":1541,"source":"contracts/BalancedPoolV2.algo.ts:264","pc":[1461,1462]},{"teal":1542,"source":"contracts/BalancedPoolV2.algo.ts:264","pc":[1463,1464]},{"teal":1543,"source":"contracts/BalancedPoolV2.algo.ts:264","pc":[1465,1466,1467]},{"teal":1544,"source":"contracts/BalancedPoolV2.algo.ts:264","pc":[1468]},{"teal":1545,"source":"contracts/BalancedPoolV2.algo.ts:264","pc":[1469,1470]},{"teal":1549,"source":"contracts/BalancedPoolV2.algo.ts:266","pc":[1471,1472]},{"teal":1550,"source":"contracts/BalancedPoolV2.algo.ts:266","pc":[1473,1474]},{"teal":1551,"source":"contracts/BalancedPoolV2.algo.ts:266","pc":[1475]},{"teal":1552,"source":"contracts/BalancedPoolV2.algo.ts:266","pc":[1476]},{"teal":1553,"source":"contracts/BalancedPoolV2.algo.ts:266","pc":[1477]},{"teal":1554,"source":"contracts/BalancedPoolV2.algo.ts:266","pc":[1478]},{"teal":1555,"source":"contracts/BalancedPoolV2.algo.ts:266","pc":[1479]},{"teal":1556,"source":"contracts/BalancedPoolV2.algo.ts:266","pc":[1480]},{"teal":1557,"source":"contracts/BalancedPoolV2.algo.ts:266","pc":[1481]},{"teal":1558,"source":"contracts/BalancedPoolV2.algo.ts:266","pc":[1482]},{"teal":1561,"source":"contracts/BalancedPoolV2.algo.ts:266","errorMessage":"wideRatio failed","pc":[1483]},{"teal":1562,"source":"contracts/BalancedPoolV2.algo.ts:266","pc":[1484,1485]},{"teal":1566,"source":"contracts/BalancedPoolV2.algo.ts:268","pc":[1486,1487]},{"teal":1567,"source":"contracts/BalancedPoolV2.algo.ts:268","pc":[1488,1489,1490]},{"teal":1568,"source":"contracts/BalancedPoolV2.algo.ts:268","pc":[1491,1492]},{"teal":1573,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1493,1494]},{"teal":1574,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1495]},{"teal":1575,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1496]},{"teal":1576,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1497,1498,1499]},{"teal":1581,"source":"contracts/BalancedPoolV2.algo.ts:272","pc":[1500]},{"teal":1582,"source":"contracts/BalancedPoolV2.algo.ts:272","pc":[1501]},{"teal":1583,"source":"contracts/BalancedPoolV2.algo.ts:272","pc":[1502]},{"teal":1584,"source":"contracts/BalancedPoolV2.algo.ts:272","pc":[1503]},{"teal":1585,"source":"contracts/BalancedPoolV2.algo.ts:272","pc":[1504,1505]},{"teal":1586,"source":"contracts/BalancedPoolV2.algo.ts:272","pc":[1506]},{"teal":1587,"source":"contracts/BalancedPoolV2.algo.ts:272","pc":[1507]},{"teal":1588,"source":"contracts/BalancedPoolV2.algo.ts:272","pc":[1508]},{"teal":1589,"source":"contracts/BalancedPoolV2.algo.ts:272","pc":[1509]},{"teal":1590,"source":"contracts/BalancedPoolV2.algo.ts:272","pc":[1510]},{"teal":1593,"source":"contracts/BalancedPoolV2.algo.ts:272","errorMessage":"wideRatio failed","pc":[1511]},{"teal":1594,"source":"contracts/BalancedPoolV2.algo.ts:272","pc":[1512,1513,1514]},{"teal":1599,"source":"contracts/BalancedPoolV2.algo.ts:274","pc":[1515,1516]},{"teal":1603,"source":"contracts/BalancedPoolV2.algo.ts:259","pc":[1517,1518]},{"teal":1606,"source":"contracts/BalancedPoolV2.algo.ts:259","pc":[1519,1520]},{"teal":1607,"source":"contracts/BalancedPoolV2.algo.ts:259","pc":[1521]},{"teal":1613,"source":"contracts/BalancedPoolV2.algo.ts:280","pc":[1522,1523,1524]},{"teal":1616,"source":"contracts/BalancedPoolV2.algo.ts:280","pc":[1525]},{"teal":1617,"source":"contracts/BalancedPoolV2.algo.ts:280","pc":[1526,1527]},{"teal":1621,"source":"contracts/BalancedPoolV2.algo.ts:281","pc":[1528,1529]},{"teal":1622,"source":"contracts/BalancedPoolV2.algo.ts:281","pc":[1530]},{"teal":1623,"source":"contracts/BalancedPoolV2.algo.ts:281","pc":[1531,1532,1533]},{"teal":1624,"source":"contracts/BalancedPoolV2.algo.ts:281","pc":[1534,1535]},{"teal":1625,"source":"contracts/BalancedPoolV2.algo.ts:281","pc":[1536]},{"teal":1626,"source":"contracts/BalancedPoolV2.algo.ts:281","pc":[1537,1538]},{"teal":1627,"source":"contracts/BalancedPoolV2.algo.ts:281","pc":[1539]},{"teal":1628,"source":"contracts/BalancedPoolV2.algo.ts:281","pc":[1540]},{"teal":1629,"source":"contracts/BalancedPoolV2.algo.ts:281","pc":[1541]},{"teal":1630,"source":"contracts/BalancedPoolV2.algo.ts:281","pc":[1542,1543]},{"teal":1631,"source":"contracts/BalancedPoolV2.algo.ts:281","pc":[1544]},{"teal":1632,"source":"contracts/BalancedPoolV2.algo.ts:281","pc":[1545]},{"teal":1633,"source":"contracts/BalancedPoolV2.algo.ts:281","pc":[1546]},{"teal":1634,"source":"contracts/BalancedPoolV2.algo.ts:281","pc":[1547]},{"teal":1635,"source":"contracts/BalancedPoolV2.algo.ts:281","pc":[1548,1549]},{"teal":1639,"source":"contracts/BalancedPoolV2.algo.ts:282","pc":[1550,1551]},{"teal":1640,"source":"contracts/BalancedPoolV2.algo.ts:282","pc":[1552,1553]},{"teal":1641,"source":"contracts/BalancedPoolV2.algo.ts:282","pc":[1554]},{"teal":1642,"source":"contracts/BalancedPoolV2.algo.ts:282","pc":[1555]},{"teal":1643,"source":"contracts/BalancedPoolV2.algo.ts:282","pc":[1556]},{"teal":1646,"source":"contracts/BalancedPoolV2.algo.ts:282","errorMessage":"box value does not exist: this.weights(index).value","pc":[1557]},{"teal":1647,"source":"contracts/BalancedPoolV2.algo.ts:282","pc":[1558]},{"teal":1648,"source":"contracts/BalancedPoolV2.algo.ts:282","pc":[1559,1560]},{"teal":1652,"source":"contracts/BalancedPoolV2.algo.ts:283","pc":[1561]},{"teal":1653,"source":"contracts/BalancedPoolV2.algo.ts:283","pc":[1562,1563]},{"teal":1654,"source":"contracts/BalancedPoolV2.algo.ts:283","pc":[1564]},{"teal":1655,"source":"contracts/BalancedPoolV2.algo.ts:283","pc":[1565]},{"teal":1656,"source":"contracts/BalancedPoolV2.algo.ts:283","pc":[1566]},{"teal":1659,"source":"contracts/BalancedPoolV2.algo.ts:283","errorMessage":"box value does not exist: this.balances(assetId).value","pc":[1567]},{"teal":1660,"source":"contracts/BalancedPoolV2.algo.ts:283","pc":[1568]},{"teal":1661,"source":"contracts/BalancedPoolV2.algo.ts:283","pc":[1569,1570]},{"teal":1665,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1571]},{"teal":1666,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1572,1573]},{"teal":1667,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1574]},{"teal":1668,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1575]},{"teal":1671,"source":"contracts/BalancedPoolV2.algo.ts:284","errorMessage":"box value does not exist: this.provided(sender).value","pc":[1576]},{"teal":1672,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1577,1578,1579]},{"teal":1673,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1580,1581]},{"teal":1674,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1582]},{"teal":1675,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1583,1584]},{"teal":1676,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1585]},{"teal":1677,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1586]},{"teal":1678,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1587]},{"teal":1679,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1588,1589]},{"teal":1680,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1590]},{"teal":1681,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1591]},{"teal":1682,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1592]},{"teal":1683,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1593]},{"teal":1684,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1594,1595]},{"teal":1689,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1596,1597]},{"teal":1690,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1598]},{"teal":1691,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1599]},{"teal":1692,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1600,1601,1602]},{"teal":1697,"source":"contracts/BalancedPoolV2.algo.ts:287","pc":[1603]},{"teal":1698,"source":"contracts/BalancedPoolV2.algo.ts:287","pc":[1604,1605,1606]},{"teal":1703,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1607,1608]},{"teal":1704,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1609]},{"teal":1705,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1610]},{"teal":1706,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1611]},{"teal":1707,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1612,1613]},{"teal":1708,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1614]},{"teal":1709,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1615]},{"teal":1710,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1616]},{"teal":1711,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1617]},{"teal":1712,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1618]},{"teal":1715,"source":"contracts/BalancedPoolV2.algo.ts:290","errorMessage":"wideRatio failed","pc":[1619]},{"teal":1716,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1620,1621]},{"teal":1720,"source":"contracts/BalancedPoolV2.algo.ts:291","pc":[1622,1623]},{"teal":1721,"source":"contracts/BalancedPoolV2.algo.ts:291","pc":[1624,1625]},{"teal":1722,"source":"contracts/BalancedPoolV2.algo.ts:291","pc":[1626]},{"teal":1723,"source":"contracts/BalancedPoolV2.algo.ts:291","pc":[1627]},{"teal":1724,"source":"contracts/BalancedPoolV2.algo.ts:291","pc":[1628]},{"teal":1725,"source":"contracts/BalancedPoolV2.algo.ts:291","pc":[1629]},{"teal":1726,"source":"contracts/BalancedPoolV2.algo.ts:291","pc":[1630]},{"teal":1727,"source":"contracts/BalancedPoolV2.algo.ts:291","pc":[1631]},{"teal":1728,"source":"contracts/BalancedPoolV2.algo.ts:291","pc":[1632]},{"teal":1729,"source":"contracts/BalancedPoolV2.algo.ts:291","pc":[1633]},{"teal":1732,"source":"contracts/BalancedPoolV2.algo.ts:291","errorMessage":"wideRatio failed","pc":[1634]},{"teal":1736,"source":"contracts/BalancedPoolV2.algo.ts:280","pc":[1635,1636]},{"teal":1739,"source":"contracts/BalancedPoolV2.algo.ts:280","pc":[1637,1638]},{"teal":1740,"source":"contracts/BalancedPoolV2.algo.ts:280","pc":[1639]},{"teal":1744,"source":"contracts/BalancedPoolV2.algo.ts:294","pc":[1640,1641,1642]},{"teal":1747,"source":"contracts/BalancedPoolV2.algo.ts:294","pc":[1643]},{"teal":1748,"source":"contracts/BalancedPoolV2.algo.ts:294","pc":[1644,1645]},{"teal":1752,"source":"contracts/BalancedPoolV2.algo.ts:303","pc":[1646,1647]},{"teal":1753,"source":"contracts/BalancedPoolV2.algo.ts:303","pc":[1648,1649,1650,1651]},{"teal":1754,"source":"contracts/BalancedPoolV2.algo.ts:303","pc":[1652]},{"teal":1755,"source":"contracts/BalancedPoolV2.algo.ts:303","pc":[1653]},{"teal":1756,"source":"contracts/BalancedPoolV2.algo.ts:303","pc":[1654]},{"teal":1757,"source":"contracts/BalancedPoolV2.algo.ts:303","pc":[1655]},{"teal":1758,"source":"contracts/BalancedPoolV2.algo.ts:303","pc":[1656]},{"teal":1759,"source":"contracts/BalancedPoolV2.algo.ts:303","pc":[1657]},{"teal":1760,"source":"contracts/BalancedPoolV2.algo.ts:303","pc":[1658]},{"teal":1761,"source":"contracts/BalancedPoolV2.algo.ts:303","pc":[1659]},{"teal":1764,"source":"contracts/BalancedPoolV2.algo.ts:303","errorMessage":"wideRatio failed","pc":[1660]},{"teal":1765,"source":"contracts/BalancedPoolV2.algo.ts:303","pc":[1661,1662]},{"teal":1769,"source":"contracts/BalancedPoolV2.algo.ts:306","pc":[1663,1664]},{"teal":1770,"source":"contracts/BalancedPoolV2.algo.ts:306","pc":[1665]},{"teal":1771,"source":"contracts/BalancedPoolV2.algo.ts:306","pc":[1666]},{"teal":1772,"source":"contracts/BalancedPoolV2.algo.ts:306","pc":[1667]},{"teal":1773,"source":"contracts/BalancedPoolV2.algo.ts:306","pc":[1668,1669]},{"teal":1774,"source":"contracts/BalancedPoolV2.algo.ts:306","pc":[1670,1671]},{"teal":1775,"source":"contracts/BalancedPoolV2.algo.ts:306","pc":[1672]},{"teal":1776,"source":"contracts/BalancedPoolV2.algo.ts:306","pc":[1673]},{"teal":1777,"source":"contracts/BalancedPoolV2.algo.ts:306","pc":[1674]},{"teal":1778,"source":"contracts/BalancedPoolV2.algo.ts:306","pc":[1675]},{"teal":1779,"source":"contracts/BalancedPoolV2.algo.ts:306","pc":[1676]},{"teal":1780,"source":"contracts/BalancedPoolV2.algo.ts:306","pc":[1677]},{"teal":1783,"source":"contracts/BalancedPoolV2.algo.ts:306","errorMessage":"wideRatio failed","pc":[1678]},{"teal":1784,"source":"contracts/BalancedPoolV2.algo.ts:306","pc":[1679,1680]},{"teal":1788,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1681,1682]},{"teal":1789,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1683]},{"teal":1790,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1684]},{"teal":1791,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1685]},{"teal":1792,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1686,1687]},{"teal":1793,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1688]},{"teal":1794,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1689]},{"teal":1795,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1690]},{"teal":1796,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1691]},{"teal":1797,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1692]},{"teal":1800,"source":"contracts/BalancedPoolV2.algo.ts:308","errorMessage":"wideRatio failed","pc":[1693]},{"teal":1801,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1694,1695]},{"teal":1805,"source":"contracts/BalancedPoolV2.algo.ts:310","pc":[1696,1697]},{"teal":1806,"source":"contracts/BalancedPoolV2.algo.ts:310","pc":[1698]},{"teal":1807,"source":"contracts/BalancedPoolV2.algo.ts:310","pc":[1699]},{"teal":1811,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1700,1701]},{"teal":1812,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1702]},{"teal":1813,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1703]},{"teal":1817,"source":"contracts/BalancedPoolV2.algo.ts:314","pc":[1704,1705]},{"teal":1818,"source":"contracts/BalancedPoolV2.algo.ts:314","pc":[1706,1707]},{"teal":1819,"source":"contracts/BalancedPoolV2.algo.ts:314","pc":[1708,1709,1710]},{"teal":1820,"source":"contracts/BalancedPoolV2.algo.ts:314","pc":[1711,1712]},{"teal":1824,"source":"contracts/BalancedPoolV2.algo.ts:316","pc":[1713,1714]},{"teal":1825,"source":"contracts/BalancedPoolV2.algo.ts:316","pc":[1715]},{"teal":1826,"source":"contracts/BalancedPoolV2.algo.ts:316","pc":[1716,1717]},{"teal":1827,"source":"contracts/BalancedPoolV2.algo.ts:316","pc":[1718]},{"teal":1828,"source":"contracts/BalancedPoolV2.algo.ts:316","pc":[1719]},{"teal":1829,"source":"contracts/BalancedPoolV2.algo.ts:316","pc":[1720]},{"teal":1830,"source":"contracts/BalancedPoolV2.algo.ts:316","pc":[1721]},{"teal":1831,"source":"contracts/BalancedPoolV2.algo.ts:316","pc":[1722]},{"teal":1832,"source":"contracts/BalancedPoolV2.algo.ts:316","pc":[1723]},{"teal":1833,"source":"contracts/BalancedPoolV2.algo.ts:316","pc":[1724]},{"teal":1834,"source":"contracts/BalancedPoolV2.algo.ts:316","pc":[1725]},{"teal":1835,"source":"contracts/BalancedPoolV2.algo.ts:316","pc":[1726]},{"teal":1838,"source":"contracts/BalancedPoolV2.algo.ts:316","errorMessage":"wideRatio failed","pc":[1727]},{"teal":1841,"source":"contracts/BalancedPoolV2.algo.ts:294","pc":[1728,1729]},{"teal":1844,"source":"contracts/BalancedPoolV2.algo.ts:294","pc":[1730,1731]},{"teal":1845,"source":"contracts/BalancedPoolV2.algo.ts:294","pc":[1732]},{"teal":1848,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1733,1734]},{"teal":1849,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1735,1736,1737]},{"teal":1850,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1738,1739,1740,1741,1742,1743]},{"teal":1851,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1744,1745,1746]},{"teal":1852,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1747,1748,1749,1750]},{"teal":1855,"source":"contracts/BalancedPoolV2.algo.ts:9","errorMessage":"this contract does not implement the given ABI method for create NoOp","pc":[1751]},{"teal":1858,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1752,1753,1754,1755,1756,1757]},{"teal":1859,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1758,1759,1760,1761,1762,1763]},{"teal":1860,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1764,1765,1766,1767,1768,1769]},{"teal":1861,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1770,1771,1772,1773,1774,1775]},{"teal":1862,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1776,1777,1778,1779,1780,1781]},{"teal":1863,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1782,1783,1784]},{"teal":1864,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1785,1786,1787,1788,1789,1790,1791,1792,1793,1794,1795,1796]},{"teal":1867,"source":"contracts/BalancedPoolV2.algo.ts:9","errorMessage":"this contract does not implement the given ABI method for call NoOp","pc":[1797]},{"teal":1870,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1798,1799,1800]},{"teal":1871,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1801,1802,1803,1804,1805,1806,1807,1808,1809,1810,1811,1812]},{"teal":1872,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1813,1814]},{"teal":1873,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1815]},{"teal":1874,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1816]},{"teal":1875,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1817]},{"teal":1879,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1818,1819,1820]},{"teal":1880,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1821,1822]},{"teal":1881,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1823]},{"teal":1882,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1824]},{"teal":1883,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1825,1826,1827]},{"teal":1884,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1828,1829,1830]},{"teal":1885,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1831]},{"teal":1888,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1832,1833]},{"teal":1889,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1834,1835]},{"teal":1890,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1836]},{"teal":1891,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1837]},{"teal":1892,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1838]},{"teal":1893,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1839,1840,1841]},{"teal":1894,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1842,1843]},{"teal":1895,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1844,1845]},{"teal":1896,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1846]},{"teal":1897,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1847,1848,1849]},{"teal":1898,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1850,1851,1852]},{"teal":1901,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1853]},{"teal":1904,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1854,1855]},{"teal":1905,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1856,1857]},{"teal":1906,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1858]},{"teal":1907,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1859,1860,1861]},{"teal":1908,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1862]},{"teal":1909,"source":"contracts/BalancedPoolV2.algo.ts:9","pc":[1863]}],"pcOffsetMethod":"none"},"clear":{"sourceInfo":[],"pcOffsetMethod":"none"}},"source":{"approval":"","clear":"I3ByYWdtYSB2ZXJzaW9uIDEw"},"byteCode":{"approval":"CiAJAAjAhD0BCgQGIBAmCQAFdG9rZW4JYmFsYW5jZXNfCXByb3ZpZGVkXwltaW5yYXRpb18Id2VpZ2h0c18GYXNzZXRzCAAAAAAAAAAAB21hbmFnZXIxGBQhBgsxGQiNDAZfAAAAAAAAAAAAAAZMAAAAAAAAAAAAAACIAAIlQ4oAACcINjIAcgdIZ4mABBUffHU2GgJXAgA2GgFXAgCIAAUWULAlQ4oCAShJiAPpIowAIowBiwGL/xUjCgxBAEOL/jX/IosBIwsINP9MI1gXi/81/yKLASMLCDT/TCNYF4sBiAMfiwCL/jX/IosBIwsINP9MI1gXCIwAiwElCIwBQv+yJwaL/0kVIwoWVwYCTFBniwAkEkSIAyopZIwARgGJNhoDSRUhBxJENhoCFzYaAReIAAIlQ4oDAChHAogDWClkIhNEJwZkVwIANf8ii/8jCwg0/0wjWBeMAIAMQXNzZXQgSUQgPT4giwAWULCLAIgCbSqLABZQvkQXi/4IKosAFlBMFr8ri/1QvUxIFEEACCuL/VCBQLlIK4v9UL5EVwIANf8ii/8jCwg0/0wri/1QvkRXAgA1/yKL/yMLCDT/TCNYF4v+CBZdK4v9UEm8SExJFSMKFlcGAkxQv4v/i/2IBBCMAScEi/1QvUxIFEEAFCcEi/1QI7lIJwSL/VCLARa/QgA0JwSL/VC+RBciEkEADCcEi/1QiwEWv0IAGycEi/1QvkQXjAKLAYsCDEEACScEi/1QiwEWv4k2GgFJFSEHEkSIAAIlQ4oBAChHA4gCRycEi/9QvkQXjACLACINRIHAhD0hBCEGlAuMASlkcQhIKWRwAEghBCEIlBNBACEpZHEASClkcQhIKWRwAEgJjAKLAosAHSIkH0hITBREjAGLASINRCcEi/9QJwe/IowDiwMri/9QvkRXAgAVIwoMQQAzK4v/UL5EVwIANf8iiwMjCwg0/0wnB10ri/9QSbxITEkVIwoWVwYCTFC/iwMlCIwDQv+7sSEFshCL/7IUiwGyEilkshEisgGziTYaBBc2GgMXNhoCFzYaAUkVIQcSRIgAAiVDigQAKEcGKWQiE0QnBmRXAgA1/yKL/iMLCDT/TCNYF4wAJwZkVwIANf8ii/0jCwg0/0wjWBeMASqLABZQvkQXjAIqiwEWUL5EF4wDJwWL/hZQvkQXjAQnBYv9FlC+RBeMBYsCFrCLAxawiwQWsIsFFrCL/IsFiwOLBIsCiALGjAaLBhawKosAFlCLAov8CBa/KosBFlCLA4sGCRa/sSEFshCL/7IUiwayEosBshEisgGziTYaAReIAAIlQ4oBADIKi/9wAExIQQABibEhBbIQMgqyFIv/shEishIisgGziYoDACcFi/8WUL1MSBRBAAknBYv/FlAjuUgqi/4WUL1MSBRBAAgqi/4WUCO5SCcFi/8WUIv9Fr8qi/4WUCcHv4mKAAApZCISQQBJKbGBA7IQIQQhCJSyIiEGsiMyCrIqMgqyKTIDsiwyA7IrIrIkgA1CYWxhbmNlZFBvb2wtNjIAiAKUULImgAJMULIlIrIBs7Q8Z4mKAAAxACcIZBJEiYoBAShHB4v/Ig1EIowAi/8kDEEAJSWMACRJHSKL/x9ISEwURIwCiwIkCSQdIosCH0hITBREjAFCABGL/yQJJB0ii/8fSEhMFESMAYsBjAOLAYwEIowFgQKMBosGgQUOQQA/iwSLAR0iJB9ISEwURIwEIosEIosGH0hITBREjAeLBUEACIsDiwcJQgAFiwOLBwiMA4sFFIwFiwYlCIwGQv+5iwAWiwMWUIwARgeJigEBKEcCJIwAJIwBJYwCiwIhBA5BACKLAYv/HSKLAiQLH0hITBREjAGLAIsBCIwAiwIlCIwCQv/WiwCMAEYCiYoCAShHBIv/IhJBAAQiQgBNi/+I/v2MAIsANf80/1cACBeMAYsANf80/1cICBeMAov+iwIdIiQfSEhMFESMA4sDiP98jASLASUSQQAPJEkdIosEH0hITBREQgACiwSMAEYEiYoCAShHBCcGZFcCADX/Iov+IwsINP9MI1gXjAAnBYv+FlC+RBeMASqLABZQvkQXjAIri/9QvkRXAgA1/yKL/iMLCDT/TCNYF4wDiwMiDkEABCJCAByLAyQdIosCH0hITBREjASLBIsBHSIkH0hITBREjABGBImKBQEoRwOL+4HY/DwdIiQfSEhMFESMAIv/JB0ii/+LAAgfSEhMFESMAYv+JB0ii/wfSEhMFESMAosBFrCLAhawiwKLAYj+4IwDi/0kiwMJHSIkH0hITBREjABGA4kxG0H5sIAEuER7NjYaAI4B+aMAgATmNf21gASr334VgATDXw8ZgAQEqlx+gAQfxMPjNhoAjgX5h/ob+zT8BfzRAIoBAYAKMDEyMzQ1Njc4OYv/JViJigEBi/8iEkEABIABMImL/yEECiINQQALi/8hBAqI/+BCAAEoi/8hBBiI/8BQiQ==","clear":"Cg=="},"compilerInfo":{"compiler":"algod","compilerVersion":{"major":4,"minor":0,"patch":2,"commitHash":"6b940281"}}} as unknown as Arc56Contract

/**
 * A state record containing binary data
 */
export interface BinaryState {
  /**
   * Gets the state value as a Uint8Array
   */
  asByteArray(): Uint8Array | undefined
  /**
   * Gets the state value as a string
   */
  asString(): string | undefined
}

class BinaryStateValue implements BinaryState {
  constructor(private value: Uint8Array | undefined) {}

  asByteArray(): Uint8Array | undefined {
    return this.value
  }

  asString(): string | undefined {
    return this.value !== undefined ? Buffer.from(this.value).toString('utf-8') : undefined
  }
}

/**
 * Expands types for IntelliSense so they are more human readable
 * See https://stackoverflow.com/a/69288824
 */
export type Expand<T> = T extends (...args: infer A) => infer R
  ? (...args: Expand<A>) => Expand<R>
  : T extends infer O
    ? { [K in keyof O]: O[K] }
    : never


/**
 * The argument types for the BalancedPoolV2 contract
 */
export type BalancedPoolV2Args = {
  /**
   * The object representation of the arguments for each method
   */
  obj: {
    'createApplication()void': Record<string, never>
    'bootstrap(uint64[],uint64[])uint64': {
      /**
       * assets of the pool
       */
      assetIds: bigint[] | number[]
      /**
      * weights of the pool
      uint64 - LP Token created ID

       */
      weights: bigint[] | number[]
    }
    'addLiquidity(uint64,uint64,address)void': {
      /**
       * index of the token in the pool
       */
      index: bigint | number
      /**
       * amount of token sent
       */
      amount: bigint | number
      /**
       * the sender
       */
      sender: string
    }
    'computeLiquidity(address)void': {
      /**
       * the sender
       */
      sender: string
    }
    'swap(address,uint64,uint64,uint64)void': {
      sender: string
      from: bigint | number
      to: bigint | number
      amount: bigint | number
    }
    'optIn(uint64)void': {
      /**
      * asset to opt-in
      why?

       */
      assetId: bigint | number
    }
  }
  /**
   * The tuple representation of the arguments for each method
   */
  tuple: {
    'createApplication()void': []
    'bootstrap(uint64[],uint64[])uint64': [assetIds: bigint[] | number[], weights: bigint[] | number[]]
    'addLiquidity(uint64,uint64,address)void': [index: bigint | number, amount: bigint | number, sender: string]
    'computeLiquidity(address)void': [sender: string]
    'swap(address,uint64,uint64,uint64)void': [sender: string, from: bigint | number, to: bigint | number, amount: bigint | number]
    'optIn(uint64)void': [assetId: bigint | number]
  }
}

/**
 * The return type for each method
 */
export type BalancedPoolV2Returns = {
  'createApplication()void': void
  'bootstrap(uint64[],uint64[])uint64': bigint
  'addLiquidity(uint64,uint64,address)void': void
  'computeLiquidity(address)void': void
  'swap(address,uint64,uint64,uint64)void': void
  'optIn(uint64)void': void
}

/**
 * Defines the types of available calls and state of the BalancedPoolV2 smart contract.
 */
export type BalancedPoolV2Types = {
  /**
   * Maps method signatures / names to their argument and return types.
   */
  methods:
    & Record<'createApplication()void' | 'createApplication', {
      argsObj: BalancedPoolV2Args['obj']['createApplication()void']
      argsTuple: BalancedPoolV2Args['tuple']['createApplication()void']
      returns: BalancedPoolV2Returns['createApplication()void']
    }>
    & Record<'bootstrap(uint64[],uint64[])uint64' | 'bootstrap', {
      argsObj: BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64']
      argsTuple: BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']
      returns: BalancedPoolV2Returns['bootstrap(uint64[],uint64[])uint64']
    }>
    & Record<'addLiquidity(uint64,uint64,address)void' | 'addLiquidity', {
      argsObj: BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void']
      argsTuple: BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']
      returns: BalancedPoolV2Returns['addLiquidity(uint64,uint64,address)void']
    }>
    & Record<'computeLiquidity(address)void' | 'computeLiquidity', {
      argsObj: BalancedPoolV2Args['obj']['computeLiquidity(address)void']
      argsTuple: BalancedPoolV2Args['tuple']['computeLiquidity(address)void']
      returns: BalancedPoolV2Returns['computeLiquidity(address)void']
    }>
    & Record<'swap(address,uint64,uint64,uint64)void' | 'swap', {
      argsObj: BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)void']
      argsTuple: BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)void']
      returns: BalancedPoolV2Returns['swap(address,uint64,uint64,uint64)void']
    }>
    & Record<'optIn(uint64)void' | 'optIn', {
      argsObj: BalancedPoolV2Args['obj']['optIn(uint64)void']
      argsTuple: BalancedPoolV2Args['tuple']['optIn(uint64)void']
      returns: BalancedPoolV2Returns['optIn(uint64)void']
    }>
  /**
   * Defines the shape of the state of the application.
   */
  state: {
    global: {
      keys: {
        manager: string
        token: bigint
        assets: bigint[]
      }
      maps: {}
    }
    box: {
      keys: {}
      maps: {
        weights: Map<bigint | number, bigint>
        balances: Map<bigint | number, bigint>
        provided: Map<string, bigint[]>
        minRatios: Map<string, bigint>
      }
    }
  }
}

/**
 * Defines the possible abi call signatures.
 */
export type BalancedPoolV2Signatures = keyof BalancedPoolV2Types['methods']
/**
 * Defines the possible abi call signatures for methods that return a non-void value.
 */
export type BalancedPoolV2NonVoidMethodSignatures = keyof BalancedPoolV2Types['methods'] extends infer T ? T extends keyof BalancedPoolV2Types['methods'] ? MethodReturn<T> extends void ? never : T  : never : never
/**
 * Defines an object containing all relevant parameters for a single call to the contract.
 */
export type CallParams<TArgs> = Expand<
  Omit<AppClientMethodCallParams, 'method' | 'args' | 'onComplete'> &
    {
      /** The args for the ABI method call, either as an ordered array or an object */
      args: Expand<TArgs>
    }
>
/**
 * Maps a method signature from the BalancedPoolV2 smart contract to the method's arguments in either tuple or struct form
 */
export type MethodArgs<TSignature extends BalancedPoolV2Signatures> = BalancedPoolV2Types['methods'][TSignature]['argsObj' | 'argsTuple']
/**
 * Maps a method signature from the BalancedPoolV2 smart contract to the method's return type
 */
export type MethodReturn<TSignature extends BalancedPoolV2Signatures> = BalancedPoolV2Types['methods'][TSignature]['returns']

/**
 * Defines the shape of the keyed global state of the application.
 */
export type GlobalKeysState = BalancedPoolV2Types['state']['global']['keys']

/**
 * Defines the shape of the keyed box state of the application.
 */
export type BoxKeysState = BalancedPoolV2Types['state']['box']['keys']


/**
 * Defines supported create method params for this smart contract
 */
export type BalancedPoolV2CreateCallParams =
  | Expand<CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & {method: 'createApplication'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
  | Expand<CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & {method: 'createApplication()void'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
/**
 * Defines arguments required for the deploy method.
 */
export type BalancedPoolV2DeployParams = Expand<Omit<AppFactoryDeployParams, 'createParams' | 'updateParams' | 'deleteParams'> & {
  /**
   * Create transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  createParams?: BalancedPoolV2CreateCallParams
}>


/**
 * Exposes methods for constructing `AppClient` params objects for ABI calls to the BalancedPoolV2 smart contract
 */
export abstract class BalancedPoolV2ParamsFactory {
  /**
   * Gets available create ABI call param factories
   */
  static get create() {
    return {
      _resolveByMethod<TParams extends BalancedPoolV2CreateCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'createApplication':
          case 'createApplication()void':
            return BalancedPoolV2ParamsFactory.create.createApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs create ABI call params for the BalancedPoolV2 smart contract using the createApplication()void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      createApplication(params: CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC}): AppClientMethodCallParams & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC} {
        return {
          ...params,
          method: 'createApplication()void' as const,
          args: Array.isArray(params.args) ? params.args : [],
        }
      },
    }
  }

  /**
   * Constructs a no op call for the bootstrap(uint64[],uint64[])uint64 ABI method
   *
   * Bootstrap the pool by assigning assets and weights, create the LP tokens
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static bootstrap(params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'bootstrap(uint64[],uint64[])uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.assetIds, params.args.weights],
    }
  }
  /**
   * Constructs a no op call for the addLiquidity(uint64,uint64,address)void ABI method
   *
   * Provide one token liquidity to the pool
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static addLiquidity(params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'addLiquidity(uint64,uint64,address)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.index, params.args.amount, params.args.sender],
    }
  }
  /**
   * Constructs a no op call for the computeLiquidity(address)void ABI method
   *
  * Compute the liquidity for the given sender based on the state
  in the contract

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static computeLiquidity(params: CallParams<BalancedPoolV2Args['obj']['computeLiquidity(address)void'] | BalancedPoolV2Args['tuple']['computeLiquidity(address)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'computeLiquidity(address)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.sender],
    }
  }
  /**
   * Constructs a no op call for the swap(address,uint64,uint64,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static swap(params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)void'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'swap(address,uint64,uint64,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.sender, params.args.from, params.args.to, params.args.amount],
    }
  }
  /**
   * Constructs a no op call for the optIn(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static optIn(params: CallParams<BalancedPoolV2Args['obj']['optIn(uint64)void'] | BalancedPoolV2Args['tuple']['optIn(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'optIn(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.assetId],
    }
  }
}

/**
 * A factory to create and deploy one or more instance of the BalancedPoolV2 smart contract and to create one or more app clients to interact with those (or other) app instances
 */
export class BalancedPoolV2Factory {
  /**
   * The underlying `AppFactory` for when you want to have more flexibility
   */
  public readonly appFactory: _AppFactory

  /**
   * Creates a new instance of `BalancedPoolV2Factory`
   *
   * @param params The parameters to initialise the app factory with
   */
  constructor(params: Omit<AppFactoryParams, 'appSpec'>) {
    this.appFactory = new _AppFactory({
      ...params,
      appSpec: APP_SPEC,
    })
  }
  
  /** The name of the app (from the ARC-32 / ARC-56 app spec or override). */
  public get appName() {
    return this.appFactory.appName
  }
  
  /** The ARC-56 app spec being used */
  get appSpec() {
    return APP_SPEC
  }
  
  /** A reference to the underlying `AlgorandClient` this app factory is using. */
  public get algorand(): AlgorandClientInterface {
    return this.appFactory.algorand
  }
  
  /**
   * Returns a new `AppClient` client for an app instance of the given ID.
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public getAppClientById(params: AppFactoryAppClientParams) {
    return new BalancedPoolV2Client(this.appFactory.getAppClientById(params))
  }
  
  /**
   * Returns a new `AppClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public async getAppClientByCreatorAndName(
    params: AppFactoryResolveAppClientByCreatorAndNameParams,
  ) {
    return new BalancedPoolV2Client(await this.appFactory.getAppClientByCreatorAndName(params))
  }

  /**
   * Idempotently deploys the BalancedPoolV2 smart contract.
   *
   * @param params The arguments for the contract calls and any additional parameters for the call
   * @returns The deployment result
   */
  public async deploy(params: BalancedPoolV2DeployParams = {}) {
    const result = await this.appFactory.deploy({
      ...params,
      createParams: params.createParams?.method ? BalancedPoolV2ParamsFactory.create._resolveByMethod(params.createParams) : params.createParams ? params.createParams as (BalancedPoolV2CreateCallParams & { args: Uint8Array[] }) : undefined,
    })
    return { result: result.result, appClient: new BalancedPoolV2Client(result.appClient) }
  }

  /**
   * Get parameters to create transactions (create and deploy related calls) for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the BalancedPoolV2 smart contract using the createApplication()void ABI method.
       *
       * createApplication method called at creation
       *
       * @param params The params for the smart contract call
       * @returns The create params
       */
      createApplication: (params: CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.params.create(BalancedPoolV2ParamsFactory.create.createApplication(params))
      },
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the BalancedPoolV2 smart contract using the createApplication()void ABI method.
       *
       * createApplication method called at creation
       *
       * @param params The params for the smart contract call
       * @returns The create transaction
       */
      createApplication: (params: CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.createTransaction.create(BalancedPoolV2ParamsFactory.create.createApplication(params))
      },
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the BalancedPoolV2 smart contract using an ABI method call using the createApplication()void ABI method.
       *
       * createApplication method called at creation
       *
       * @param params The params for the smart contract call
       * @returns The create result
       */
      createApplication: async (params: CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        const result = await this.appFactory.send.create(BalancedPoolV2ParamsFactory.create.createApplication(params))
        return { result: { ...result.result, return: result.result.return as unknown as (undefined | BalancedPoolV2Returns['createApplication()void']) }, appClient: new BalancedPoolV2Client(result.appClient) }
      },
    },

  }

}
/**
 * A client to make calls to the BalancedPoolV2 smart contract
 */
export class BalancedPoolV2Client {
  /**
   * The underlying `AppClient` for when you want to have more flexibility
   */
  public readonly appClient: _AppClient

  /**
   * Creates a new instance of `BalancedPoolV2Client`
   *
   * @param appClient An `AppClient` instance which has been created with the BalancedPoolV2 app spec
   */
  constructor(appClient: _AppClient)
  /**
   * Creates a new instance of `BalancedPoolV2Client`
   *
   * @param params The parameters to initialise the app client with
   */
  constructor(params: Omit<AppClientParams, 'appSpec'>)
  constructor(appClientOrParams: _AppClient | Omit<AppClientParams, 'appSpec'>) {
    this.appClient = appClientOrParams instanceof _AppClient ? appClientOrParams : new _AppClient({
      ...appClientOrParams,
      appSpec: APP_SPEC,
    })
  }
  
  /**
   * Checks for decode errors on the given return value and maps the return value to the return type for the given method
   * @returns The typed return value or undefined if there was no value
   */
  decodeReturnValue<TSignature extends BalancedPoolV2NonVoidMethodSignatures>(method: TSignature, returnValue: ABIReturn | undefined) {
    return returnValue !== undefined ? getArc56ReturnValue<MethodReturn<TSignature>>(returnValue, this.appClient.getABIMethod(method), APP_SPEC.structs) : undefined
  }
  
  /**
   * Returns a new `BalancedPoolV2Client` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   * @param params The parameters to create the app client
   */
  public static async fromCreatorAndName(params: Omit<ResolveAppClientByCreatorAndName, 'appSpec'>): Promise<BalancedPoolV2Client> {
    return new BalancedPoolV2Client(await _AppClient.fromCreatorAndName({...params, appSpec: APP_SPEC}))
  }
  
  /**
   * Returns an `BalancedPoolV2Client` instance for the current network based on
   * pre-determined network-specific app IDs specified in the ARC-56 app spec.
   *
   * If no IDs are in the app spec or the network isn't recognised, an error is thrown.
   * @param params The parameters to create the app client
   */
  static async fromNetwork(
    params: Omit<ResolveAppClientByNetwork, 'appSpec'>
  ): Promise<BalancedPoolV2Client> {
    return new BalancedPoolV2Client(await _AppClient.fromNetwork({...params, appSpec: APP_SPEC}))
  }
  
  /** The ID of the app instance this client is linked to. */
  public get appId() {
    return this.appClient.appId
  }
  
  /** The app address of the app instance this client is linked to. */
  public get appAddress() {
    return this.appClient.appAddress
  }
  
  /** The name of the app. */
  public get appName() {
    return this.appClient.appName
  }
  
  /** The ARC-56 app spec being used */
  public get appSpec() {
    return this.appClient.appSpec
  }
  
  /** A reference to the underlying `AlgorandClient` this app client is using. */
  public get algorand(): AlgorandClientInterface {
    return this.appClient.algorand
  }

  /**
   * Get parameters to create transactions for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Makes a clear_state call to an existing instance of the BalancedPoolV2 smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.params.bare.clearState(params)
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `bootstrap(uint64[],uint64[])uint64` ABI method.
     *
     * Bootstrap the pool by assigning assets and weights, create the LP tokens
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    bootstrap: (params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.bootstrap(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `addLiquidity(uint64,uint64,address)void` ABI method.
     *
     * Provide one token liquidity to the pool
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    addLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.addLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `computeLiquidity(address)void` ABI method.
     *
    * Compute the liquidity for the given sender based on the state
    in the contract

     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    computeLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['computeLiquidity(address)void'] | BalancedPoolV2Args['tuple']['computeLiquidity(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.computeLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `swap(address,uint64,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    swap: (params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)void'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.swap(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `optIn(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    optIn: (params: CallParams<BalancedPoolV2Args['obj']['optIn(uint64)void'] | BalancedPoolV2Args['tuple']['optIn(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.optIn(params))
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Makes a clear_state call to an existing instance of the BalancedPoolV2 smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.createTransaction.bare.clearState(params)
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `bootstrap(uint64[],uint64[])uint64` ABI method.
     *
     * Bootstrap the pool by assigning assets and weights, create the LP tokens
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    bootstrap: (params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.bootstrap(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `addLiquidity(uint64,uint64,address)void` ABI method.
     *
     * Provide one token liquidity to the pool
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    addLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.addLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `computeLiquidity(address)void` ABI method.
     *
    * Compute the liquidity for the given sender based on the state
    in the contract

     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    computeLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['computeLiquidity(address)void'] | BalancedPoolV2Args['tuple']['computeLiquidity(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.computeLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `swap(address,uint64,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    swap: (params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)void'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.swap(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `optIn(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    optIn: (params: CallParams<BalancedPoolV2Args['obj']['optIn(uint64)void'] | BalancedPoolV2Args['tuple']['optIn(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.optIn(params))
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Makes a clear_state call to an existing instance of the BalancedPoolV2 smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams & SendParams>) => {
      return this.appClient.send.bare.clearState(params)
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `bootstrap(uint64[],uint64[])uint64` ABI method.
     *
     * Bootstrap the pool by assigning assets and weights, create the LP tokens
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    bootstrap: async (params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.bootstrap(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['bootstrap(uint64[],uint64[])uint64'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `addLiquidity(uint64,uint64,address)void` ABI method.
     *
     * Provide one token liquidity to the pool
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    addLiquidity: async (params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.addLiquidity(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['addLiquidity(uint64,uint64,address)void'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `computeLiquidity(address)void` ABI method.
     *
    * Compute the liquidity for the given sender based on the state
    in the contract

     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    computeLiquidity: async (params: CallParams<BalancedPoolV2Args['obj']['computeLiquidity(address)void'] | BalancedPoolV2Args['tuple']['computeLiquidity(address)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.computeLiquidity(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['computeLiquidity(address)void'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `swap(address,uint64,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    swap: async (params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)void'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.swap(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['swap(address,uint64,uint64,uint64)void'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `optIn(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    optIn: async (params: CallParams<BalancedPoolV2Args['obj']['optIn(uint64)void'] | BalancedPoolV2Args['tuple']['optIn(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.optIn(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['optIn(uint64)void'])}
    },

  }

  /**
   * Clone this app client with different params
   *
   * @param params The params to use for the the cloned app client. Omit a param to keep the original value. Set a param to override the original value. Setting to undefined will clear the original value.
   * @returns A new app client with the altered params
   */
  public clone(params: CloneAppClientParams) {
    return new BalancedPoolV2Client(this.appClient.clone(params))
  }

  /**
   * Methods to access state for the current BalancedPoolV2 app
   */
  state = {
    /**
     * Methods to access global state for the current BalancedPoolV2 app
     */
    global: {
      /**
       * Get all current keyed values from global state
       */
      getAll: async (): Promise<Partial<Expand<GlobalKeysState>>> => {
        const result = await this.appClient.state.global.getAll()
        return {
          manager: result.manager,
          token: result.token,
          assets: result.assets,
        }
      },
      /**
       * Get the current value of the manager key in global state
       */
      manager: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("manager")) as string | undefined },
      /**
       * Get the current value of the token key in global state
       */
      token: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("token")) as bigint | undefined },
      /**
       * Get the current value of the assets key in global state
       */
      assets: async (): Promise<bigint[] | undefined> => { return (await this.appClient.state.global.getValue("assets")) as bigint[] | undefined },
    },
    /**
     * Methods to access box state for the current BalancedPoolV2 app
     */
    box: {
      /**
       * Get all current keyed values from box state
       */
      getAll: async (): Promise<Partial<Expand<BoxKeysState>>> => {
        const result = await this.appClient.state.box.getAll()
        return {
        }
      },
      /**
       * Get values from the weights map in box state
       */
      weights: {
        /**
         * Get all current values of the weights map in box state
         */
        getMap: async (): Promise<Map<bigint, bigint>> => { return (await this.appClient.state.box.getMap("weights")) as Map<bigint, bigint> },
        /**
         * Get a current value of the weights map by key from box state
         */
        value: async (key: bigint | number): Promise<bigint | undefined> => { return await this.appClient.state.box.getMapValue("weights", key) as bigint | undefined },
      },
      /**
       * Get values from the balances map in box state
       */
      balances: {
        /**
         * Get all current values of the balances map in box state
         */
        getMap: async (): Promise<Map<bigint, bigint>> => { return (await this.appClient.state.box.getMap("balances")) as Map<bigint, bigint> },
        /**
         * Get a current value of the balances map by key from box state
         */
        value: async (key: bigint | number): Promise<bigint | undefined> => { return await this.appClient.state.box.getMapValue("balances", key) as bigint | undefined },
      },
      /**
       * Get values from the provided map in box state
       */
      provided: {
        /**
         * Get all current values of the provided map in box state
         */
        getMap: async (): Promise<Map<string, bigint[]>> => { return (await this.appClient.state.box.getMap("provided")) as Map<string, bigint[]> },
        /**
         * Get a current value of the provided map by key from box state
         */
        value: async (key: string): Promise<bigint[] | undefined> => { return await this.appClient.state.box.getMapValue("provided", key) as bigint[] | undefined },
      },
      /**
       * Get values from the minRatios map in box state
       */
      minRatios: {
        /**
         * Get all current values of the minRatios map in box state
         */
        getMap: async (): Promise<Map<string, bigint>> => { return (await this.appClient.state.box.getMap("minRatios")) as Map<string, bigint> },
        /**
         * Get a current value of the minRatios map by key from box state
         */
        value: async (key: string): Promise<bigint | undefined> => { return await this.appClient.state.box.getMapValue("minRatios", key) as bigint | undefined },
      },
    },
  }

  public newGroup(): BalancedPoolV2Composer {
    const client = this
    const composer = this.algorand.newGroup()
    let promiseChain:Promise<unknown> = Promise.resolve()
    const resultMappers: Array<undefined | ((x: ABIReturn | undefined) => any)> = []
    return {
      /**
       * Add a bootstrap(uint64[],uint64[])uint64 method call against the BalancedPoolV2 contract
       */
      bootstrap(params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.bootstrap(params)))
        resultMappers.push((v) => client.decodeReturnValue('bootstrap(uint64[],uint64[])uint64', v))
        return this
      },
      /**
       * Add a addLiquidity(uint64,uint64,address)void method call against the BalancedPoolV2 contract
       */
      addLiquidity(params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.addLiquidity(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a computeLiquidity(address)void method call against the BalancedPoolV2 contract
       */
      computeLiquidity(params: CallParams<BalancedPoolV2Args['obj']['computeLiquidity(address)void'] | BalancedPoolV2Args['tuple']['computeLiquidity(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.computeLiquidity(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a swap(address,uint64,uint64,uint64)void method call against the BalancedPoolV2 contract
       */
      swap(params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)void'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.swap(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a optIn(uint64)void method call against the BalancedPoolV2 contract
       */
      optIn(params: CallParams<BalancedPoolV2Args['obj']['optIn(uint64)void'] | BalancedPoolV2Args['tuple']['optIn(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.optIn(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a clear state call to the BalancedPoolV2 contract
       */
      clearState(params: AppClientBareCallParams) {
        promiseChain = promiseChain.then(() => composer.addAppCall(client.params.clearState(params)))
        return this
      },
      addTransaction(txn: Transaction, signer?: TransactionSigner) {
        promiseChain = promiseChain.then(() => composer.addTransaction(txn, signer))
        return this
      },
      async composer() {
        await promiseChain
        return composer
      },
      async simulate(options?: SimulateOptions) {
        await promiseChain
        const result = await (!options ? composer.simulate() : composer.simulate(options))
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      },
      async send(params?: SendParams) {
        await promiseChain
        const result = await composer.send(params)
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      }
    } as unknown as BalancedPoolV2Composer
  }
}
export type BalancedPoolV2Composer<TReturns extends [...any[]] = []> = {
  /**
   * Calls the bootstrap(uint64[],uint64[])uint64 ABI method.
   *
   * Bootstrap the pool by assigning assets and weights, create the LP tokens
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  bootstrap(params?: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['bootstrap(uint64[],uint64[])uint64'] | undefined]>

  /**
   * Calls the addLiquidity(uint64,uint64,address)void ABI method.
   *
   * Provide one token liquidity to the pool
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  addLiquidity(params?: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['addLiquidity(uint64,uint64,address)void'] | undefined]>

  /**
   * Calls the computeLiquidity(address)void ABI method.
   *
  * Compute the liquidity for the given sender based on the state
  in the contract

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  computeLiquidity(params?: CallParams<BalancedPoolV2Args['obj']['computeLiquidity(address)void'] | BalancedPoolV2Args['tuple']['computeLiquidity(address)void']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['computeLiquidity(address)void'] | undefined]>

  /**
   * Calls the swap(address,uint64,uint64,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  swap(params?: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)void'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)void']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['swap(address,uint64,uint64,uint64)void'] | undefined]>

  /**
   * Calls the optIn(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  optIn(params?: CallParams<BalancedPoolV2Args['obj']['optIn(uint64)void'] | BalancedPoolV2Args['tuple']['optIn(uint64)void']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['optIn(uint64)void'] | undefined]>

  /**
   * Makes a clear_state call to an existing instance of the BalancedPoolV2 smart contract.
   *
   * @param args The arguments for the bare call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  clearState(params?: AppClientBareCallParams): BalancedPoolV2Composer<[...TReturns, undefined]>

  /**
   * Adds a transaction to the composer
   *
   * @param txn A transaction to add to the transaction group
   * @param signer The optional signer to use when signing this transaction.
   */
  addTransaction(txn: Transaction, signer?: TransactionSigner): BalancedPoolV2Composer<TReturns>
  /**
   * Returns the underlying AtomicTransactionComposer instance
   */
  composer(): Promise<TransactionComposer>
  /**
   * Simulates the transaction group and returns the result
   */
  simulate(): Promise<BalancedPoolV2ComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: SkipSignaturesSimulateOptions): Promise<BalancedPoolV2ComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: RawSimulateOptions): Promise<BalancedPoolV2ComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  /**
   * Sends the transaction group to the network and returns the results
   */
  send(params?: SendParams): Promise<BalancedPoolV2ComposerResults<TReturns>>
}
export type BalancedPoolV2ComposerResults<TReturns extends [...any[]]> = Expand<SendAtomicTransactionComposerResults & {
  returns: TReturns
}>

