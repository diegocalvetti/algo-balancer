/* eslint-disable */
/**
 * This file was automatically generated by @algorandfoundation/algokit-client-generator.
 * DO NOT MODIFY IT BY HAND.
 * requires: @algorandfoundation/algokit-utils: ^7
 */
import { AlgorandClientInterface } from '@algorandfoundation/algokit-utils/types/algorand-client-interface'
import { ABIReturn, AppReturn, SendAppTransactionResult } from '@algorandfoundation/algokit-utils/types/app'
import { Arc56Contract, getArc56ReturnValue, getABIStructFromABITuple } from '@algorandfoundation/algokit-utils/types/app-arc56'
import {
  AppClient as _AppClient,
  AppClientMethodCallParams,
  AppClientParams,
  AppClientBareCallParams,
  CallOnComplete,
  AppClientCompilationParams,
  ResolveAppClientByCreatorAndName,
  ResolveAppClientByNetwork,
  CloneAppClientParams,
} from '@algorandfoundation/algokit-utils/types/app-client'
import { AppFactory as _AppFactory, AppFactoryAppClientParams, AppFactoryResolveAppClientByCreatorAndNameParams, AppFactoryDeployParams, AppFactoryParams, CreateSchema } from '@algorandfoundation/algokit-utils/types/app-factory'
import { TransactionComposer, AppCallMethodCall, AppMethodCallTransactionArgument, SimulateOptions, RawSimulateOptions, SkipSignaturesSimulateOptions } from '@algorandfoundation/algokit-utils/types/composer'
import { SendParams, SendSingleTransactionResult, SendAtomicTransactionComposerResults } from '@algorandfoundation/algokit-utils/types/transaction'
import { Address, encodeAddress, modelsv2, OnApplicationComplete, Transaction, TransactionSigner } from 'algosdk'
import SimulateResponse = modelsv2.SimulateResponse

export const APP_SPEC: Arc56Contract = {"name":"BalancedPoolV2","desc":"","methods":[{"name":"createApplication","desc":"createApplication method called at creation","args":[],"returns":{"type":"void"},"actions":{"create":["NoOp"],"call":[]}},{"name":"bootstrap","desc":"Bootstrap the pool by assigning assets and weights, create the LP tokens","args":[{"name":"assetIds","type":"uint64[]","desc":"assets of the pool"},{"name":"weights","type":"uint64[]","desc":"weights of the pool\n uint64 - LP Token created ID"}],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"addLiquidity","desc":"Provide one token liquidity to the pool","args":[{"name":"index","type":"uint64","desc":"index of the token in the pool"},{"name":"amount","type":"uint64","desc":"amount of token sent"},{"name":"sender","type":"address","desc":"the sender"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"getLiquidity","desc":"Compute the liquidity for the given sender based on the state\nin the contract","args":[{"name":"sender","type":"address","desc":"the sender"}],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"burnLiquidity","args":[{"name":"sender","type":"address"},{"name":"amountLP","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"swap","desc":"Swap the token from for the token to","args":[{"name":"sender","type":"address"},{"name":"from","type":"uint64"},{"name":"to","type":"uint64"},{"name":"amount","type":"uint64"}],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"getTotalAssets","readonly":true,"args":[],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"getToken","readonly":true,"args":[],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"getBalance","readonly":true,"args":[{"name":"index","type":"uint64"}],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"estimateSwap","readonly":true,"args":[{"name":"from","type":"uint64"},{"name":"to","type":"uint64"},{"name":"amount","type":"uint64"}],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}}],"arcs":[4,56],"structs":{},"state":{"schema":{"global":{"bytes":2,"ints":2},"local":{"bytes":0,"ints":0}},"keys":{"global":{"manager":{"key":"bWFuYWdlcg==","keyType":"AVMBytes","valueType":"address"},"token":{"key":"dG9rZW4=","keyType":"AVMBytes","valueType":"uint64"},"burned":{"key":"YnVybmVk","keyType":"AVMBytes","valueType":"uint64"},"assets":{"key":"YXNzZXRz","keyType":"AVMBytes","valueType":"uint64[]"}},"local":{},"box":{}},"maps":{"global":{},"local":{},"box":{"weights":{"keyType":"uint64","valueType":"uint64","prefix":"weights_"},"balances":{"keyType":"uint64","valueType":"uint64","prefix":"balances_"},"provided":{"keyType":"address","valueType":"uint64[]","prefix":"provided_"}}}},"bareActions":{"create":[],"call":[]},"sourceInfo":{"approval":{"sourceInfo":[{"teal":1,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[0]},{"teal":2,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[1,2,3,4,5,6,7,8,9,10,11,12,13,14]},{"teal":3,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92]},{"teal":15,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[93,94]},{"teal":16,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[95]},{"teal":17,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[96,97]},{"teal":18,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[98]},{"teal":19,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[99,100]},{"teal":20,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[101]},{"teal":21,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127]},{"teal":25,"source":"contracts/BalancedPoolV2.algo.ts:7","errorMessage":"The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?","pc":[128]},{"teal":30,"source":"contracts/BalancedPoolV2.algo.ts:25","pc":[129,130,131]},{"teal":31,"source":"contracts/BalancedPoolV2.algo.ts:25","pc":[132]},{"teal":32,"source":"contracts/BalancedPoolV2.algo.ts:25","pc":[133]},{"teal":38,"source":"contracts/BalancedPoolV2.algo.ts:25","pc":[134,135,136]},{"teal":42,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[137,138]},{"teal":43,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[139,140,141]},{"teal":44,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[142,143]},{"teal":45,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[144]},{"teal":46,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[145]},{"teal":50,"source":"contracts/BalancedPoolV2.algo.ts:28","pc":[146,147]},{"teal":51,"source":"contracts/BalancedPoolV2.algo.ts:28","pc":[148]},{"teal":52,"source":"contracts/BalancedPoolV2.algo.ts:28","pc":[149]},{"teal":53,"source":"contracts/BalancedPoolV2.algo.ts:25","pc":[150]},{"teal":58,"source":"contracts/BalancedPoolV2.algo.ts:37","pc":[151,152]},{"teal":61,"source":"contracts/BalancedPoolV2.algo.ts:37","pc":[153,154,155]},{"teal":62,"source":"contracts/BalancedPoolV2.algo.ts:37","pc":[156,157,158]},{"teal":65,"source":"contracts/BalancedPoolV2.algo.ts:37","pc":[159,160,161]},{"teal":66,"source":"contracts/BalancedPoolV2.algo.ts:37","pc":[162,163,164]},{"teal":69,"source":"contracts/BalancedPoolV2.algo.ts:37","pc":[165,166,167]},{"teal":70,"source":"contracts/BalancedPoolV2.algo.ts:37","pc":[168]},{"teal":71,"source":"contracts/BalancedPoolV2.algo.ts:37","pc":[169]},{"teal":72,"source":"contracts/BalancedPoolV2.algo.ts:37","pc":[170]},{"teal":73,"source":"contracts/BalancedPoolV2.algo.ts:37","pc":[171]},{"teal":74,"source":"contracts/BalancedPoolV2.algo.ts:37","pc":[172]},{"teal":83,"source":"contracts/BalancedPoolV2.algo.ts:37","pc":[173,174,175]},{"teal":86,"source":"contracts/BalancedPoolV2.algo.ts:37","pc":[176]},{"teal":87,"source":"contracts/BalancedPoolV2.algo.ts:37","pc":[177]},{"teal":91,"source":"contracts/BalancedPoolV2.algo.ts:38","pc":[178,179,180]},{"teal":95,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[181,182]},{"teal":96,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[183]},{"teal":97,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[184]},{"teal":98,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[185]},{"teal":99,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[186,187]},{"teal":100,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[188]},{"teal":103,"source":"contracts/BalancedPoolV2.algo.ts:39","errorMessage":"At least 2 tokens needed","pc":[189]},{"teal":107,"source":"contracts/BalancedPoolV2.algo.ts:40","pc":[190,191]},{"teal":108,"source":"contracts/BalancedPoolV2.algo.ts:40","pc":[192]},{"teal":109,"source":"contracts/BalancedPoolV2.algo.ts:40","pc":[193]},{"teal":110,"source":"contracts/BalancedPoolV2.algo.ts:40","pc":[194]},{"teal":111,"source":"contracts/BalancedPoolV2.algo.ts:40","pc":[195,196]},{"teal":112,"source":"contracts/BalancedPoolV2.algo.ts:40","pc":[197]},{"teal":113,"source":"contracts/BalancedPoolV2.algo.ts:40","pc":[198]},{"teal":114,"source":"contracts/BalancedPoolV2.algo.ts:40","pc":[199]},{"teal":115,"source":"contracts/BalancedPoolV2.algo.ts:40","pc":[200]},{"teal":118,"source":"contracts/BalancedPoolV2.algo.ts:40","errorMessage":"Weights and Assets length must be the same","pc":[201]},{"teal":122,"source":"contracts/BalancedPoolV2.algo.ts:41","pc":[202]},{"teal":123,"source":"contracts/BalancedPoolV2.algo.ts:41","pc":[203,204]},{"teal":127,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[205]},{"teal":128,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[206,207]},{"teal":133,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[208,209]},{"teal":134,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[210,211]},{"teal":135,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[212]},{"teal":136,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[213]},{"teal":137,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[214]},{"teal":138,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[215]},{"teal":139,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[216,217,218]},{"teal":143,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[219,220]},{"teal":144,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[221,222]},{"teal":145,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[223]},{"teal":146,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[224,225]},{"teal":147,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[226]},{"teal":148,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[227]},{"teal":149,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[228]},{"teal":150,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[229,230]},{"teal":151,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[231]},{"teal":152,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[232]},{"teal":153,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[233]},{"teal":154,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[234]},{"teal":155,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[235,236,237]},{"teal":159,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[238,239]},{"teal":160,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[240,241]},{"teal":161,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[242]},{"teal":162,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[243,244]},{"teal":163,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[245]},{"teal":164,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[246]},{"teal":165,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[247]},{"teal":166,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[248,249]},{"teal":167,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[250]},{"teal":168,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[251]},{"teal":169,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[252]},{"teal":170,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[253]},{"teal":171,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[254,255]},{"teal":172,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[256,257]},{"teal":173,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[258]},{"teal":174,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[259,260]},{"teal":175,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[261]},{"teal":176,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[262]},{"teal":177,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[263]},{"teal":178,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[264,265]},{"teal":179,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[266]},{"teal":180,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[267]},{"teal":181,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[268]},{"teal":182,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[269]},{"teal":183,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[270,271]},{"teal":184,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[272,273,274]},{"teal":188,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[275,276]},{"teal":189,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[277,278]},{"teal":190,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[279,280]},{"teal":191,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[281]},{"teal":192,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[282,283]},{"teal":193,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[284]},{"teal":194,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[285]},{"teal":195,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[286]},{"teal":196,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[287,288]},{"teal":197,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[289]},{"teal":198,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[290]},{"teal":199,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[291]},{"teal":200,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[292]},{"teal":201,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[293]},{"teal":202,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[294,295]},{"teal":207,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[296,297]},{"teal":208,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[298]},{"teal":209,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[299]},{"teal":210,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[300,301]},{"teal":211,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[302,303,304]},{"teal":216,"source":"contracts/BalancedPoolV2.algo.ts:49","pc":[305]},{"teal":217,"source":"contracts/BalancedPoolV2.algo.ts:49","pc":[306,307]},{"teal":218,"source":"contracts/BalancedPoolV2.algo.ts:49","pc":[308]},{"teal":219,"source":"contracts/BalancedPoolV2.algo.ts:49","pc":[309]},{"teal":220,"source":"contracts/BalancedPoolV2.algo.ts:49","pc":[310]},{"teal":221,"source":"contracts/BalancedPoolV2.algo.ts:49","pc":[311]},{"teal":222,"source":"contracts/BalancedPoolV2.algo.ts:49","pc":[312]},{"teal":223,"source":"contracts/BalancedPoolV2.algo.ts:49","pc":[313,314,315]},{"teal":224,"source":"contracts/BalancedPoolV2.algo.ts:49","pc":[316]},{"teal":225,"source":"contracts/BalancedPoolV2.algo.ts:49","pc":[317]},{"teal":226,"source":"contracts/BalancedPoolV2.algo.ts:49","pc":[318]},{"teal":230,"source":"contracts/BalancedPoolV2.algo.ts:51","pc":[319]},{"teal":231,"source":"contracts/BalancedPoolV2.algo.ts:51","pc":[320,321]},{"teal":232,"source":"contracts/BalancedPoolV2.algo.ts:51","pc":[322,323,324]},{"teal":233,"source":"contracts/BalancedPoolV2.algo.ts:51","pc":[325]},{"teal":234,"source":"contracts/BalancedPoolV2.algo.ts:51","pc":[326]},{"teal":237,"source":"contracts/BalancedPoolV2.algo.ts:51","errorMessage":"Weights must sum to 1","pc":[327]},{"teal":241,"source":"contracts/BalancedPoolV2.algo.ts:52","pc":[328,329,330]},{"teal":245,"source":"contracts/BalancedPoolV2.algo.ts:54","pc":[331,332]},{"teal":246,"source":"contracts/BalancedPoolV2.algo.ts:54","pc":[333]},{"teal":249,"source":"contracts/BalancedPoolV2.algo.ts:37","pc":[334,335]},{"teal":252,"source":"contracts/BalancedPoolV2.algo.ts:37","pc":[336,337]},{"teal":253,"source":"contracts/BalancedPoolV2.algo.ts:37","pc":[338]},{"teal":258,"source":"contracts/BalancedPoolV2.algo.ts:63","pc":[339,340,341]},{"teal":259,"source":"contracts/BalancedPoolV2.algo.ts:63","pc":[342]},{"teal":260,"source":"contracts/BalancedPoolV2.algo.ts:63","pc":[343]},{"teal":261,"source":"contracts/BalancedPoolV2.algo.ts:63","pc":[344,345]},{"teal":262,"source":"contracts/BalancedPoolV2.algo.ts:63","pc":[346]},{"teal":265,"source":"contracts/BalancedPoolV2.algo.ts:63","errorMessage":"argument 0 (sender) for addLiquidity must be a address","pc":[347]},{"teal":268,"source":"contracts/BalancedPoolV2.algo.ts:63","pc":[348,349,350]},{"teal":269,"source":"contracts/BalancedPoolV2.algo.ts:63","pc":[351]},{"teal":272,"source":"contracts/BalancedPoolV2.algo.ts:63","pc":[352,353,354]},{"teal":273,"source":"contracts/BalancedPoolV2.algo.ts:63","pc":[355]},{"teal":276,"source":"contracts/BalancedPoolV2.algo.ts:63","pc":[356,357,358]},{"teal":277,"source":"contracts/BalancedPoolV2.algo.ts:63","pc":[359]},{"teal":278,"source":"contracts/BalancedPoolV2.algo.ts:63","pc":[360]},{"teal":287,"source":"contracts/BalancedPoolV2.algo.ts:63","pc":[361,362,363]},{"teal":290,"source":"contracts/BalancedPoolV2.algo.ts:63","pc":[364]},{"teal":294,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[365,366,367]},{"teal":298,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[368,369,370]},{"teal":302,"source":"contracts/BalancedPoolV2.algo.ts:67","pc":[371]},{"teal":303,"source":"contracts/BalancedPoolV2.algo.ts:67","pc":[372]},{"teal":304,"source":"contracts/BalancedPoolV2.algo.ts:67","pc":[373,374,375]},{"teal":305,"source":"contracts/BalancedPoolV2.algo.ts:67","pc":[376,377]},{"teal":306,"source":"contracts/BalancedPoolV2.algo.ts:67","pc":[378]},{"teal":307,"source":"contracts/BalancedPoolV2.algo.ts:67","pc":[379,380]},{"teal":308,"source":"contracts/BalancedPoolV2.algo.ts:67","pc":[381]},{"teal":309,"source":"contracts/BalancedPoolV2.algo.ts:67","pc":[382]},{"teal":310,"source":"contracts/BalancedPoolV2.algo.ts:67","pc":[383]},{"teal":311,"source":"contracts/BalancedPoolV2.algo.ts:67","pc":[384,385]},{"teal":312,"source":"contracts/BalancedPoolV2.algo.ts:67","pc":[386]},{"teal":313,"source":"contracts/BalancedPoolV2.algo.ts:67","pc":[387]},{"teal":314,"source":"contracts/BalancedPoolV2.algo.ts:67","pc":[388]},{"teal":315,"source":"contracts/BalancedPoolV2.algo.ts:67","pc":[389]},{"teal":316,"source":"contracts/BalancedPoolV2.algo.ts:67","pc":[390,391]},{"teal":320,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[392,393,394,395,396,397,398,399,400,401,402,403,404,405]},{"teal":321,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[406,407]},{"teal":322,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[408]},{"teal":323,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[409]},{"teal":324,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[410]},{"teal":328,"source":"contracts/BalancedPoolV2.algo.ts:70","pc":[411,412]},{"teal":329,"source":"contracts/BalancedPoolV2.algo.ts:70","pc":[413,414,415]},{"teal":333,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[416]},{"teal":334,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[417,418]},{"teal":335,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[419]},{"teal":336,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[420]},{"teal":337,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[421]},{"teal":340,"source":"contracts/BalancedPoolV2.algo.ts:71","errorMessage":"box value does not exist: this.balances(assetId).value","pc":[422]},{"teal":341,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[423]},{"teal":342,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[424,425]},{"teal":343,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[426]},{"teal":344,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[427]},{"teal":345,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[428,429]},{"teal":346,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[430]},{"teal":347,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[431]},{"teal":348,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[432]},{"teal":349,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[433]},{"teal":350,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[434]},{"teal":355,"source":"contracts/BalancedPoolV2.algo.ts:73","pc":[435]},{"teal":356,"source":"contracts/BalancedPoolV2.algo.ts:73","pc":[436,437]},{"teal":357,"source":"contracts/BalancedPoolV2.algo.ts:73","pc":[438]},{"teal":358,"source":"contracts/BalancedPoolV2.algo.ts:73","pc":[439]},{"teal":359,"source":"contracts/BalancedPoolV2.algo.ts:73","pc":[440]},{"teal":360,"source":"contracts/BalancedPoolV2.algo.ts:73","pc":[441]},{"teal":361,"source":"contracts/BalancedPoolV2.algo.ts:73","pc":[442]},{"teal":362,"source":"contracts/BalancedPoolV2.algo.ts:73","pc":[443,444,445]},{"teal":367,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[446]},{"teal":368,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[447,448]},{"teal":369,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[449]},{"teal":370,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[450]},{"teal":371,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[451]},{"teal":372,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[452,453,454]},{"teal":373,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[455]},{"teal":374,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[456]},{"teal":375,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[457]},{"teal":376,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[458]},{"teal":377,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[459]},{"teal":378,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[460]},{"teal":379,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[461]},{"teal":380,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[462]},{"teal":381,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[463]},{"teal":386,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[464]},{"teal":387,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[465,466]},{"teal":388,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[467]},{"teal":389,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[468]},{"teal":392,"source":"contracts/BalancedPoolV2.algo.ts:77","errorMessage":"box value does not exist: this.provided(sender).value","pc":[469]},{"teal":393,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[470,471,472]},{"teal":394,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[473,474]},{"teal":395,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[475]},{"teal":396,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[476,477]},{"teal":397,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[478]},{"teal":398,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[479]},{"teal":399,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[480]},{"teal":400,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[481,482]},{"teal":401,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[483]},{"teal":402,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[484]},{"teal":403,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[485,486]},{"teal":404,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[487]},{"teal":405,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[488]},{"teal":408,"source":"contracts/BalancedPoolV2.algo.ts:77","errorMessage":"box value does not exist: this.provided(sender).value","pc":[489]},{"teal":409,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[490,491,492]},{"teal":410,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[493,494]},{"teal":411,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[495]},{"teal":412,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[496,497]},{"teal":413,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[498]},{"teal":414,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[499]},{"teal":415,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[500]},{"teal":416,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[501,502]},{"teal":417,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[503]},{"teal":418,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[504]},{"teal":419,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[505]},{"teal":420,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[506]},{"teal":421,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[507,508]},{"teal":422,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[509]},{"teal":423,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[510]},{"teal":424,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[511]},{"teal":425,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[512]},{"teal":426,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[513,514]},{"teal":427,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[515]},{"teal":428,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[516]},{"teal":429,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[517]},{"teal":430,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[518]},{"teal":431,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[519]},{"teal":432,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[520]},{"teal":433,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[521]},{"teal":434,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[522]},{"teal":435,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[523]},{"teal":436,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[524]},{"teal":437,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[525,526,527]},{"teal":438,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[528]},{"teal":439,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[529]},{"teal":440,"source":"contracts/BalancedPoolV2.algo.ts:77","pc":[530]},{"teal":441,"source":"contracts/BalancedPoolV2.algo.ts:63","pc":[531]},{"teal":446,"source":"contracts/BalancedPoolV2.algo.ts:85","pc":[532,533]},{"teal":449,"source":"contracts/BalancedPoolV2.algo.ts:85","pc":[534,535,536]},{"teal":450,"source":"contracts/BalancedPoolV2.algo.ts:85","pc":[537]},{"teal":451,"source":"contracts/BalancedPoolV2.algo.ts:85","pc":[538]},{"teal":452,"source":"contracts/BalancedPoolV2.algo.ts:85","pc":[539,540]},{"teal":453,"source":"contracts/BalancedPoolV2.algo.ts:85","pc":[541]},{"teal":456,"source":"contracts/BalancedPoolV2.algo.ts:85","errorMessage":"argument 0 (sender) for getLiquidity must be a address","pc":[542]},{"teal":459,"source":"contracts/BalancedPoolV2.algo.ts:85","pc":[543,544,545]},{"teal":460,"source":"contracts/BalancedPoolV2.algo.ts:85","pc":[546]},{"teal":461,"source":"contracts/BalancedPoolV2.algo.ts:85","pc":[547]},{"teal":462,"source":"contracts/BalancedPoolV2.algo.ts:85","pc":[548]},{"teal":463,"source":"contracts/BalancedPoolV2.algo.ts:85","pc":[549]},{"teal":464,"source":"contracts/BalancedPoolV2.algo.ts:85","pc":[550]},{"teal":472,"source":"contracts/BalancedPoolV2.algo.ts:85","pc":[551,552,553]},{"teal":475,"source":"contracts/BalancedPoolV2.algo.ts:85","pc":[554]},{"teal":476,"source":"contracts/BalancedPoolV2.algo.ts:85","pc":[555]},{"teal":480,"source":"contracts/BalancedPoolV2.algo.ts:86","pc":[556,557,558]},{"teal":484,"source":"contracts/BalancedPoolV2.algo.ts:87","pc":[559,560,561]},{"teal":488,"source":"contracts/BalancedPoolV2.algo.ts:89","pc":[562]},{"teal":489,"source":"contracts/BalancedPoolV2.algo.ts:89","pc":[563,564]},{"teal":494,"source":"contracts/BalancedPoolV2.algo.ts:91","pc":[565,566,567]},{"teal":495,"source":"contracts/BalancedPoolV2.algo.ts:91","pc":[568]},{"teal":496,"source":"contracts/BalancedPoolV2.algo.ts:91","pc":[569]},{"teal":497,"source":"contracts/BalancedPoolV2.algo.ts:91","pc":[570,571,572]},{"teal":502,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[573,574,575,576]},{"teal":503,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[577,578]},{"teal":504,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[579,580]},{"teal":505,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[581]},{"teal":506,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[582]},{"teal":507,"source":"contracts/BalancedPoolV2.algo.ts:93","pc":[583,584]},{"teal":508,"source":"contracts/BalancedPoolV2.algo.ts:91","pc":[585,586,587]},{"teal":513,"source":"contracts/BalancedPoolV2.algo.ts:95","pc":[588,589]},{"teal":514,"source":"contracts/BalancedPoolV2.algo.ts:95","pc":[590,591,592]},{"teal":515,"source":"contracts/BalancedPoolV2.algo.ts:95","pc":[593,594]},{"teal":520,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[595]},{"teal":521,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[596,597]},{"teal":526,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[598,599]},{"teal":527,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[600]},{"teal":528,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[601,602]},{"teal":529,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[603]},{"teal":530,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[604]},{"teal":533,"source":"contracts/BalancedPoolV2.algo.ts:98","errorMessage":"box value does not exist: this.provided(sender).value","pc":[605]},{"teal":534,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[606,607,608]},{"teal":535,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[609]},{"teal":536,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[610]},{"teal":537,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[611]},{"teal":538,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[612]},{"teal":539,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[613,614,615]},{"teal":543,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[616]},{"teal":544,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[617,618]},{"teal":545,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[619]},{"teal":546,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[620]},{"teal":549,"source":"contracts/BalancedPoolV2.algo.ts:99","errorMessage":"box value does not exist: this.provided(sender).value","pc":[621]},{"teal":550,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[622,623,624]},{"teal":551,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[625,626]},{"teal":552,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[627]},{"teal":553,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[628,629]},{"teal":554,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[630]},{"teal":555,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[631]},{"teal":556,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[632]},{"teal":557,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[633,634]},{"teal":558,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[635]},{"teal":559,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[636,637]},{"teal":560,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[638]},{"teal":561,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[639]},{"teal":562,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[640,641]},{"teal":563,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[642]},{"teal":564,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[643]},{"teal":565,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[644]},{"teal":566,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[645]},{"teal":567,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[646]},{"teal":568,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[647]},{"teal":569,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[648]},{"teal":570,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[649]},{"teal":571,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[650]},{"teal":572,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[651]},{"teal":573,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[652,653,654]},{"teal":574,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[655]},{"teal":575,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[656]},{"teal":576,"source":"contracts/BalancedPoolV2.algo.ts:99","pc":[657]},{"teal":581,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[658,659]},{"teal":582,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[660]},{"teal":583,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[661]},{"teal":584,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[662,663]},{"teal":585,"source":"contracts/BalancedPoolV2.algo.ts:98","pc":[664,665,666]},{"teal":594,"source":"contracts/BalancedPoolV2.algo.ts:102","pc":[667]},{"teal":595,"source":"contracts/BalancedPoolV2.algo.ts:102","pc":[668,669]},{"teal":596,"source":"contracts/BalancedPoolV2.algo.ts:102","pc":[670,671]},{"teal":600,"source":"contracts/BalancedPoolV2.algo.ts:103","pc":[672,673]},{"teal":601,"source":"contracts/BalancedPoolV2.algo.ts:103","pc":[674,675]},{"teal":605,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[676,677]},{"teal":606,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[678,679]},{"teal":610,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[680,681]},{"teal":611,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[682]},{"teal":612,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[683,684]},{"teal":615,"source":"contracts/BalancedPoolV2.algo.ts:102","pc":[685]},{"teal":616,"source":"contracts/BalancedPoolV2.algo.ts:102","pc":[686,687]},{"teal":619,"source":"contracts/BalancedPoolV2.algo.ts:102","pc":[688]},{"teal":623,"source":"contracts/BalancedPoolV2.algo.ts:108","pc":[689,690]},{"teal":626,"source":"contracts/BalancedPoolV2.algo.ts:85","pc":[691,692]},{"teal":629,"source":"contracts/BalancedPoolV2.algo.ts:85","pc":[693,694]},{"teal":630,"source":"contracts/BalancedPoolV2.algo.ts:85","pc":[695]},{"teal":635,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[696,697,698]},{"teal":636,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[699]},{"teal":639,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[700,701,702]},{"teal":640,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[703]},{"teal":641,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[704]},{"teal":642,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[705,706]},{"teal":643,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[707]},{"teal":646,"source":"contracts/BalancedPoolV2.algo.ts:111","errorMessage":"argument 1 (sender) for burnLiquidity must be a address","pc":[708]},{"teal":649,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[709,710,711]},{"teal":650,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[712]},{"teal":651,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[713]},{"teal":655,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[714,715,716]},{"teal":658,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[717]},{"teal":659,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[718,719]},{"teal":663,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[720,721,722]},{"teal":667,"source":"contracts/BalancedPoolV2.algo.ts:113","pc":[723,724,725]},{"teal":671,"source":"contracts/BalancedPoolV2.algo.ts:114","pc":[726,727]},{"teal":672,"source":"contracts/BalancedPoolV2.algo.ts:114","pc":[728]},{"teal":673,"source":"contracts/BalancedPoolV2.algo.ts:114","pc":[729]},{"teal":676,"source":"contracts/BalancedPoolV2.algo.ts:114","errorMessage":"Must burn positive amount","pc":[730]},{"teal":680,"source":"contracts/BalancedPoolV2.algo.ts:116","pc":[731,732,733]},{"teal":681,"source":"contracts/BalancedPoolV2.algo.ts:116","pc":[734,735]},{"teal":685,"source":"contracts/BalancedPoolV2.algo.ts:117","pc":[736]},{"teal":686,"source":"contracts/BalancedPoolV2.algo.ts:117","pc":[737]},{"teal":687,"source":"contracts/BalancedPoolV2.algo.ts:117","pc":[738,739,740]},{"teal":688,"source":"contracts/BalancedPoolV2.algo.ts:117","pc":[741]},{"teal":689,"source":"contracts/BalancedPoolV2.algo.ts:117","pc":[742]},{"teal":690,"source":"contracts/BalancedPoolV2.algo.ts:117","pc":[743]},{"teal":691,"source":"contracts/BalancedPoolV2.algo.ts:117","pc":[744,745]},{"teal":695,"source":"contracts/BalancedPoolV2.algo.ts:119","pc":[746]},{"teal":696,"source":"contracts/BalancedPoolV2.algo.ts:119","pc":[747,748]},{"teal":701,"source":"contracts/BalancedPoolV2.algo.ts:119","pc":[749,750]},{"teal":702,"source":"contracts/BalancedPoolV2.algo.ts:119","pc":[751,752]},{"teal":703,"source":"contracts/BalancedPoolV2.algo.ts:119","pc":[753]},{"teal":704,"source":"contracts/BalancedPoolV2.algo.ts:119","pc":[754,755,756]},{"teal":708,"source":"contracts/BalancedPoolV2.algo.ts:120","pc":[757]},{"teal":709,"source":"contracts/BalancedPoolV2.algo.ts:120","pc":[758]},{"teal":710,"source":"contracts/BalancedPoolV2.algo.ts:120","pc":[759,760,761]},{"teal":711,"source":"contracts/BalancedPoolV2.algo.ts:120","pc":[762,763]},{"teal":712,"source":"contracts/BalancedPoolV2.algo.ts:120","pc":[764]},{"teal":713,"source":"contracts/BalancedPoolV2.algo.ts:120","pc":[765,766]},{"teal":714,"source":"contracts/BalancedPoolV2.algo.ts:120","pc":[767]},{"teal":715,"source":"contracts/BalancedPoolV2.algo.ts:120","pc":[768]},{"teal":716,"source":"contracts/BalancedPoolV2.algo.ts:120","pc":[769]},{"teal":717,"source":"contracts/BalancedPoolV2.algo.ts:120","pc":[770,771]},{"teal":718,"source":"contracts/BalancedPoolV2.algo.ts:120","pc":[772]},{"teal":719,"source":"contracts/BalancedPoolV2.algo.ts:120","pc":[773]},{"teal":720,"source":"contracts/BalancedPoolV2.algo.ts:120","pc":[774]},{"teal":721,"source":"contracts/BalancedPoolV2.algo.ts:120","pc":[775]},{"teal":722,"source":"contracts/BalancedPoolV2.algo.ts:120","pc":[776,777]},{"teal":726,"source":"contracts/BalancedPoolV2.algo.ts:121","pc":[778]},{"teal":727,"source":"contracts/BalancedPoolV2.algo.ts:121","pc":[779,780]},{"teal":728,"source":"contracts/BalancedPoolV2.algo.ts:121","pc":[781]},{"teal":729,"source":"contracts/BalancedPoolV2.algo.ts:121","pc":[782]},{"teal":730,"source":"contracts/BalancedPoolV2.algo.ts:121","pc":[783]},{"teal":733,"source":"contracts/BalancedPoolV2.algo.ts:121","errorMessage":"box value does not exist: this.balances(assetId).value","pc":[784]},{"teal":734,"source":"contracts/BalancedPoolV2.algo.ts:121","pc":[785]},{"teal":735,"source":"contracts/BalancedPoolV2.algo.ts:121","pc":[786,787]},{"teal":739,"source":"contracts/BalancedPoolV2.algo.ts:123","pc":[788,789]},{"teal":740,"source":"contracts/BalancedPoolV2.algo.ts:123","pc":[790,791]},{"teal":741,"source":"contracts/BalancedPoolV2.algo.ts:123","pc":[792]},{"teal":742,"source":"contracts/BalancedPoolV2.algo.ts:123","pc":[793]},{"teal":743,"source":"contracts/BalancedPoolV2.algo.ts:123","pc":[794,795]},{"teal":744,"source":"contracts/BalancedPoolV2.algo.ts:123","pc":[796]},{"teal":745,"source":"contracts/BalancedPoolV2.algo.ts:123","pc":[797]},{"teal":746,"source":"contracts/BalancedPoolV2.algo.ts:123","pc":[798]},{"teal":747,"source":"contracts/BalancedPoolV2.algo.ts:123","pc":[799]},{"teal":748,"source":"contracts/BalancedPoolV2.algo.ts:123","pc":[800]},{"teal":751,"source":"contracts/BalancedPoolV2.algo.ts:123","errorMessage":"wideRatio failed","pc":[801]},{"teal":752,"source":"contracts/BalancedPoolV2.algo.ts:123","pc":[802,803]},{"teal":756,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[804]},{"teal":757,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[805,806]},{"teal":758,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[807]},{"teal":759,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[808]},{"teal":760,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[809,810]},{"teal":761,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[811,812]},{"teal":762,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[813]},{"teal":763,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[814]},{"teal":764,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[815]},{"teal":772,"source":"contracts/BalancedPoolV2.algo.ts:127","pc":[816]},{"teal":773,"source":"contracts/BalancedPoolV2.algo.ts:127","pc":[817,818]},{"teal":774,"source":"contracts/BalancedPoolV2.algo.ts:127","pc":[819,820]},{"teal":778,"source":"contracts/BalancedPoolV2.algo.ts:128","pc":[821,822]},{"teal":779,"source":"contracts/BalancedPoolV2.algo.ts:128","pc":[823,824]},{"teal":783,"source":"contracts/BalancedPoolV2.algo.ts:129","pc":[825,826]},{"teal":784,"source":"contracts/BalancedPoolV2.algo.ts:129","pc":[827,828]},{"teal":788,"source":"contracts/BalancedPoolV2.algo.ts:130","pc":[829,830]},{"teal":789,"source":"contracts/BalancedPoolV2.algo.ts:130","pc":[831,832]},{"teal":792,"source":"contracts/BalancedPoolV2.algo.ts:127","pc":[833]},{"teal":793,"source":"contracts/BalancedPoolV2.algo.ts:127","pc":[834,835]},{"teal":796,"source":"contracts/BalancedPoolV2.algo.ts:127","pc":[836]},{"teal":801,"source":"contracts/BalancedPoolV2.algo.ts:119","pc":[837,838]},{"teal":802,"source":"contracts/BalancedPoolV2.algo.ts:119","pc":[839]},{"teal":803,"source":"contracts/BalancedPoolV2.algo.ts:119","pc":[840]},{"teal":804,"source":"contracts/BalancedPoolV2.algo.ts:119","pc":[841,842]},{"teal":805,"source":"contracts/BalancedPoolV2.algo.ts:119","pc":[843,844,845]},{"teal":810,"source":"contracts/BalancedPoolV2.algo.ts:134","pc":[846,847]},{"teal":811,"source":"contracts/BalancedPoolV2.algo.ts:134","pc":[848]},{"teal":812,"source":"contracts/BalancedPoolV2.algo.ts:134","pc":[849,850]},{"teal":813,"source":"contracts/BalancedPoolV2.algo.ts:134","pc":[851]},{"teal":814,"source":"contracts/BalancedPoolV2.algo.ts:134","pc":[852,853]},{"teal":815,"source":"contracts/BalancedPoolV2.algo.ts:134","pc":[854]},{"teal":816,"source":"contracts/BalancedPoolV2.algo.ts:134","pc":[855]},{"teal":817,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[856]},{"teal":822,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[857,858]},{"teal":825,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[859,860,861]},{"teal":826,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[862]},{"teal":829,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[863,864,865]},{"teal":830,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[866]},{"teal":833,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[867,868,869]},{"teal":834,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[870]},{"teal":837,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[871,872,873]},{"teal":838,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[874]},{"teal":839,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[875]},{"teal":840,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[876,877]},{"teal":841,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[878]},{"teal":844,"source":"contracts/BalancedPoolV2.algo.ts:144","errorMessage":"argument 3 (sender) for swap must be a address","pc":[879]},{"teal":847,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[880,881,882]},{"teal":848,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[883]},{"teal":849,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[884]},{"teal":850,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[885]},{"teal":851,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[886]},{"teal":852,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[887]},{"teal":862,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[888,889,890]},{"teal":865,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[891]},{"teal":866,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[892,893]},{"teal":870,"source":"contracts/BalancedPoolV2.algo.ts:145","pc":[894,895,896]},{"teal":874,"source":"contracts/BalancedPoolV2.algo.ts:146","pc":[897,898,899]},{"teal":878,"source":"contracts/BalancedPoolV2.algo.ts:148","pc":[900]},{"teal":879,"source":"contracts/BalancedPoolV2.algo.ts:148","pc":[901]},{"teal":880,"source":"contracts/BalancedPoolV2.algo.ts:148","pc":[902,903,904]},{"teal":881,"source":"contracts/BalancedPoolV2.algo.ts:148","pc":[905,906]},{"teal":882,"source":"contracts/BalancedPoolV2.algo.ts:148","pc":[907]},{"teal":883,"source":"contracts/BalancedPoolV2.algo.ts:148","pc":[908,909]},{"teal":884,"source":"contracts/BalancedPoolV2.algo.ts:148","pc":[910]},{"teal":885,"source":"contracts/BalancedPoolV2.algo.ts:148","pc":[911]},{"teal":886,"source":"contracts/BalancedPoolV2.algo.ts:148","pc":[912]},{"teal":887,"source":"contracts/BalancedPoolV2.algo.ts:148","pc":[913,914]},{"teal":888,"source":"contracts/BalancedPoolV2.algo.ts:148","pc":[915]},{"teal":889,"source":"contracts/BalancedPoolV2.algo.ts:148","pc":[916]},{"teal":890,"source":"contracts/BalancedPoolV2.algo.ts:148","pc":[917]},{"teal":891,"source":"contracts/BalancedPoolV2.algo.ts:148","pc":[918]},{"teal":892,"source":"contracts/BalancedPoolV2.algo.ts:148","pc":[919,920]},{"teal":896,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[921]},{"teal":897,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[922]},{"teal":898,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[923,924,925]},{"teal":899,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[926,927]},{"teal":900,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[928]},{"teal":901,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[929,930]},{"teal":902,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[931]},{"teal":903,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[932]},{"teal":904,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[933]},{"teal":905,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[934,935]},{"teal":906,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[936]},{"teal":907,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[937]},{"teal":908,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[938]},{"teal":909,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[939]},{"teal":910,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[940,941]},{"teal":914,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[942]},{"teal":915,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[943,944]},{"teal":916,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[945]},{"teal":917,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[946]},{"teal":918,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[947]},{"teal":921,"source":"contracts/BalancedPoolV2.algo.ts:151","errorMessage":"box value does not exist: this.balances(assetIn).value","pc":[948]},{"teal":922,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[949]},{"teal":923,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[950,951]},{"teal":927,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[952]},{"teal":928,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[953,954]},{"teal":929,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[955]},{"teal":930,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[956]},{"teal":931,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[957]},{"teal":934,"source":"contracts/BalancedPoolV2.algo.ts:152","errorMessage":"box value does not exist: this.balances(assetOut).value","pc":[958]},{"teal":935,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[959]},{"teal":936,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[960,961]},{"teal":940,"source":"contracts/BalancedPoolV2.algo.ts:154","pc":[962,963]},{"teal":941,"source":"contracts/BalancedPoolV2.algo.ts:154","pc":[964,965]},{"teal":942,"source":"contracts/BalancedPoolV2.algo.ts:154","pc":[966]},{"teal":943,"source":"contracts/BalancedPoolV2.algo.ts:154","pc":[967]},{"teal":944,"source":"contracts/BalancedPoolV2.algo.ts:154","pc":[968]},{"teal":947,"source":"contracts/BalancedPoolV2.algo.ts:154","errorMessage":"box value does not exist: this.weights(from).value","pc":[969]},{"teal":948,"source":"contracts/BalancedPoolV2.algo.ts:154","pc":[970]},{"teal":949,"source":"contracts/BalancedPoolV2.algo.ts:154","pc":[971,972]},{"teal":953,"source":"contracts/BalancedPoolV2.algo.ts:155","pc":[973,974]},{"teal":954,"source":"contracts/BalancedPoolV2.algo.ts:155","pc":[975,976]},{"teal":955,"source":"contracts/BalancedPoolV2.algo.ts:155","pc":[977]},{"teal":956,"source":"contracts/BalancedPoolV2.algo.ts:155","pc":[978]},{"teal":957,"source":"contracts/BalancedPoolV2.algo.ts:155","pc":[979]},{"teal":960,"source":"contracts/BalancedPoolV2.algo.ts:155","errorMessage":"box value does not exist: this.weights(to).value","pc":[980]},{"teal":961,"source":"contracts/BalancedPoolV2.algo.ts:155","pc":[981]},{"teal":962,"source":"contracts/BalancedPoolV2.algo.ts:155","pc":[982,983]},{"teal":966,"source":"contracts/BalancedPoolV2.algo.ts:157","pc":[984,985]},{"teal":967,"source":"contracts/BalancedPoolV2.algo.ts:157","pc":[986,987]},{"teal":968,"source":"contracts/BalancedPoolV2.algo.ts:157","pc":[988,989]},{"teal":969,"source":"contracts/BalancedPoolV2.algo.ts:157","pc":[990,991]},{"teal":970,"source":"contracts/BalancedPoolV2.algo.ts:157","pc":[992,993]},{"teal":971,"source":"contracts/BalancedPoolV2.algo.ts:157","pc":[994,995,996]},{"teal":972,"source":"contracts/BalancedPoolV2.algo.ts:157","pc":[997,998]},{"teal":976,"source":"contracts/BalancedPoolV2.algo.ts:159","pc":[999,1000]},{"teal":977,"source":"contracts/BalancedPoolV2.algo.ts:159","pc":[1001]},{"teal":978,"source":"contracts/BalancedPoolV2.algo.ts:159","pc":[1002]},{"teal":982,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[1003]},{"teal":983,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[1004,1005]},{"teal":984,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[1006]},{"teal":985,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[1007]},{"teal":986,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[1008,1009]},{"teal":987,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[1010,1011]},{"teal":988,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[1012]},{"teal":989,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[1013]},{"teal":990,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[1014]},{"teal":994,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[1015]},{"teal":995,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[1016,1017]},{"teal":996,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[1018]},{"teal":997,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[1019]},{"teal":998,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[1020,1021]},{"teal":999,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[1022,1023]},{"teal":1000,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[1024]},{"teal":1001,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[1025]},{"teal":1002,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[1026]},{"teal":1010,"source":"contracts/BalancedPoolV2.algo.ts:164","pc":[1027]},{"teal":1011,"source":"contracts/BalancedPoolV2.algo.ts:164","pc":[1028,1029]},{"teal":1012,"source":"contracts/BalancedPoolV2.algo.ts:164","pc":[1030,1031]},{"teal":1016,"source":"contracts/BalancedPoolV2.algo.ts:165","pc":[1032,1033]},{"teal":1017,"source":"contracts/BalancedPoolV2.algo.ts:165","pc":[1034,1035]},{"teal":1021,"source":"contracts/BalancedPoolV2.algo.ts:166","pc":[1036,1037]},{"teal":1022,"source":"contracts/BalancedPoolV2.algo.ts:166","pc":[1038,1039]},{"teal":1026,"source":"contracts/BalancedPoolV2.algo.ts:167","pc":[1040,1041]},{"teal":1027,"source":"contracts/BalancedPoolV2.algo.ts:167","pc":[1042,1043]},{"teal":1030,"source":"contracts/BalancedPoolV2.algo.ts:164","pc":[1044]},{"teal":1031,"source":"contracts/BalancedPoolV2.algo.ts:164","pc":[1045,1046]},{"teal":1034,"source":"contracts/BalancedPoolV2.algo.ts:164","pc":[1047]},{"teal":1038,"source":"contracts/BalancedPoolV2.algo.ts:170","pc":[1048,1049]},{"teal":1041,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[1050,1051]},{"teal":1044,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[1052,1053]},{"teal":1045,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[1054]},{"teal":1049,"source":"contracts/BalancedPoolV2.algo.ts:173","pc":[1055,1056,1057]},{"teal":1054,"source":"contracts/BalancedPoolV2.algo.ts:174","pc":[1058,1059]},{"teal":1055,"source":"contracts/BalancedPoolV2.algo.ts:174","pc":[1060,1061]},{"teal":1056,"source":"contracts/BalancedPoolV2.algo.ts:174","pc":[1062,1063]},{"teal":1057,"source":"contracts/BalancedPoolV2.algo.ts:174","pc":[1064]},{"teal":1058,"source":"contracts/BalancedPoolV2.algo.ts:174","pc":[1065]},{"teal":1059,"source":"contracts/BalancedPoolV2.algo.ts:174","pc":[1066,1067,1068]},{"teal":1064,"source":"contracts/BalancedPoolV2.algo.ts:175","pc":[1069]},{"teal":1073,"source":"contracts/BalancedPoolV2.algo.ts:178","pc":[1070]},{"teal":1074,"source":"contracts/BalancedPoolV2.algo.ts:178","pc":[1071,1072]},{"teal":1075,"source":"contracts/BalancedPoolV2.algo.ts:178","pc":[1073,1074]},{"teal":1079,"source":"contracts/BalancedPoolV2.algo.ts:179","pc":[1075,1076]},{"teal":1080,"source":"contracts/BalancedPoolV2.algo.ts:179","pc":[1077,1078]},{"teal":1084,"source":"contracts/BalancedPoolV2.algo.ts:180","pc":[1079,1080]},{"teal":1085,"source":"contracts/BalancedPoolV2.algo.ts:180","pc":[1081,1082]},{"teal":1089,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[1083]},{"teal":1090,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[1084,1085]},{"teal":1093,"source":"contracts/BalancedPoolV2.algo.ts:178","pc":[1086]},{"teal":1094,"source":"contracts/BalancedPoolV2.algo.ts:178","pc":[1087,1088]},{"teal":1097,"source":"contracts/BalancedPoolV2.algo.ts:178","pc":[1089]},{"teal":1098,"source":"contracts/BalancedPoolV2.algo.ts:173","pc":[1090]},{"teal":1109,"source":"contracts/BalancedPoolV2.algo.ts:193","pc":[1091,1092,1093]},{"teal":1114,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1094,1095]},{"teal":1115,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1096,1097]},{"teal":1116,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1098]},{"teal":1117,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1099]},{"teal":1118,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1100]},{"teal":1119,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1101]},{"teal":1120,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1102]},{"teal":1121,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1103]},{"teal":1122,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1104,1105,1106]},{"teal":1127,"source":"contracts/BalancedPoolV2.algo.ts:195","pc":[1107,1108]},{"teal":1128,"source":"contracts/BalancedPoolV2.algo.ts:195","pc":[1109,1110]},{"teal":1129,"source":"contracts/BalancedPoolV2.algo.ts:195","pc":[1111]},{"teal":1130,"source":"contracts/BalancedPoolV2.algo.ts:195","pc":[1112]},{"teal":1131,"source":"contracts/BalancedPoolV2.algo.ts:195","pc":[1113]},{"teal":1132,"source":"contracts/BalancedPoolV2.algo.ts:195","pc":[1114]},{"teal":1133,"source":"contracts/BalancedPoolV2.algo.ts:195","pc":[1115]},{"teal":1139,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1116]},{"teal":1140,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1117,1118]},{"teal":1141,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1119]},{"teal":1142,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1120]},{"teal":1143,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1121]},{"teal":1144,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1122]},{"teal":1145,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1123]},{"teal":1146,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1124]},{"teal":1147,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1125,1126,1127]},{"teal":1152,"source":"contracts/BalancedPoolV2.algo.ts:199","pc":[1128]},{"teal":1153,"source":"contracts/BalancedPoolV2.algo.ts:199","pc":[1129,1130]},{"teal":1154,"source":"contracts/BalancedPoolV2.algo.ts:199","pc":[1131]},{"teal":1155,"source":"contracts/BalancedPoolV2.algo.ts:199","pc":[1132]},{"teal":1156,"source":"contracts/BalancedPoolV2.algo.ts:199","pc":[1133]},{"teal":1157,"source":"contracts/BalancedPoolV2.algo.ts:199","pc":[1134]},{"teal":1158,"source":"contracts/BalancedPoolV2.algo.ts:199","pc":[1135]},{"teal":1163,"source":"contracts/BalancedPoolV2.algo.ts:202","pc":[1136,1137]},{"teal":1164,"source":"contracts/BalancedPoolV2.algo.ts:202","pc":[1138,1139]},{"teal":1165,"source":"contracts/BalancedPoolV2.algo.ts:202","pc":[1140]},{"teal":1166,"source":"contracts/BalancedPoolV2.algo.ts:202","pc":[1141]},{"teal":1167,"source":"contracts/BalancedPoolV2.algo.ts:202","pc":[1142,1143]},{"teal":1168,"source":"contracts/BalancedPoolV2.algo.ts:202","pc":[1144]},{"teal":1169,"source":"contracts/BalancedPoolV2.algo.ts:202","pc":[1145]},{"teal":1173,"source":"contracts/BalancedPoolV2.algo.ts:203","pc":[1146]},{"teal":1174,"source":"contracts/BalancedPoolV2.algo.ts:203","pc":[1147,1148]},{"teal":1175,"source":"contracts/BalancedPoolV2.algo.ts:203","pc":[1149]},{"teal":1176,"source":"contracts/BalancedPoolV2.algo.ts:203","pc":[1150]},{"teal":1177,"source":"contracts/BalancedPoolV2.algo.ts:203","pc":[1151,1152]},{"teal":1178,"source":"contracts/BalancedPoolV2.algo.ts:203","pc":[1153]},{"teal":1179,"source":"contracts/BalancedPoolV2.algo.ts:193","pc":[1154]},{"teal":1185,"source":"contracts/BalancedPoolV2.algo.ts:209","pc":[1155,1156,1157]},{"teal":1190,"source":"contracts/BalancedPoolV2.algo.ts:210","pc":[1158,1159]},{"teal":1191,"source":"contracts/BalancedPoolV2.algo.ts:210","pc":[1160]},{"teal":1192,"source":"contracts/BalancedPoolV2.algo.ts:210","pc":[1161]},{"teal":1193,"source":"contracts/BalancedPoolV2.algo.ts:210","pc":[1162]},{"teal":1194,"source":"contracts/BalancedPoolV2.algo.ts:210","pc":[1163,1164,1165]},{"teal":1209,"source":"contracts/BalancedPoolV2.algo.ts:211","pc":[1166,1167]},{"teal":1210,"source":"contracts/BalancedPoolV2.algo.ts:211","pc":[1168]},{"teal":1211,"source":"contracts/BalancedPoolV2.algo.ts:211","pc":[1169,1170]},{"teal":1212,"source":"contracts/BalancedPoolV2.algo.ts:211","pc":[1171,1172]},{"teal":1216,"source":"contracts/BalancedPoolV2.algo.ts:3","pc":[1173,1174]},{"teal":1217,"source":"contracts/BalancedPoolV2.algo.ts:3","pc":[1175,1176]},{"teal":1218,"source":"contracts/BalancedPoolV2.algo.ts:3","pc":[1177]},{"teal":1219,"source":"contracts/BalancedPoolV2.algo.ts:212","pc":[1178,1179]},{"teal":1223,"source":"contracts/BalancedPoolV2.algo.ts:213","pc":[1180,1181]},{"teal":1224,"source":"contracts/BalancedPoolV2.algo.ts:213","pc":[1182,1183]},{"teal":1228,"source":"contracts/BalancedPoolV2.algo.ts:214","pc":[1184,1185]},{"teal":1229,"source":"contracts/BalancedPoolV2.algo.ts:214","pc":[1186,1187]},{"teal":1233,"source":"contracts/BalancedPoolV2.algo.ts:215","pc":[1188,1189]},{"teal":1234,"source":"contracts/BalancedPoolV2.algo.ts:215","pc":[1190,1191]},{"teal":1238,"source":"contracts/BalancedPoolV2.algo.ts:216","pc":[1192,1193]},{"teal":1239,"source":"contracts/BalancedPoolV2.algo.ts:216","pc":[1194,1195]},{"teal":1243,"source":"contracts/BalancedPoolV2.algo.ts:217","pc":[1196,1197]},{"teal":1244,"source":"contracts/BalancedPoolV2.algo.ts:217","pc":[1198,1199]},{"teal":1248,"source":"contracts/BalancedPoolV2.algo.ts:218","pc":[1200]},{"teal":1249,"source":"contracts/BalancedPoolV2.algo.ts:218","pc":[1201,1202]},{"teal":1253,"source":"contracts/BalancedPoolV2.algo.ts:219","pc":[1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217]},{"teal":1254,"source":"contracts/BalancedPoolV2.algo.ts:219","pc":[1218,1219,1220]},{"teal":1255,"source":"contracts/BalancedPoolV2.algo.ts:219","pc":[1221,1222,1223]},{"teal":1256,"source":"contracts/BalancedPoolV2.algo.ts:219","pc":[1224]},{"teal":1257,"source":"contracts/BalancedPoolV2.algo.ts:219","pc":[1225,1226]},{"teal":1261,"source":"contracts/BalancedPoolV2.algo.ts:220","pc":[1227,1228,1229,1230]},{"teal":1262,"source":"contracts/BalancedPoolV2.algo.ts:220","pc":[1231,1232]},{"teal":1265,"source":"contracts/BalancedPoolV2.algo.ts:211","pc":[1233]},{"teal":1266,"source":"contracts/BalancedPoolV2.algo.ts:211","pc":[1234,1235]},{"teal":1269,"source":"contracts/BalancedPoolV2.algo.ts:211","pc":[1236]},{"teal":1270,"source":"contracts/BalancedPoolV2.algo.ts:211","pc":[1237,1238]},{"teal":1271,"source":"contracts/BalancedPoolV2.algo.ts:211","pc":[1239]},{"teal":1274,"source":"contracts/BalancedPoolV2.algo.ts:209","pc":[1240]},{"teal":1280,"source":"contracts/BalancedPoolV2.algo.ts:228","pc":[1241,1242,1243]},{"teal":1284,"source":"contracts/BalancedPoolV2.algo.ts:229","pc":[1244,1245]},{"teal":1285,"source":"contracts/BalancedPoolV2.algo.ts:229","pc":[1246,1247]},{"teal":1286,"source":"contracts/BalancedPoolV2.algo.ts:229","pc":[1248]},{"teal":1287,"source":"contracts/BalancedPoolV2.algo.ts:229","pc":[1249]},{"teal":1290,"source":"contracts/BalancedPoolV2.algo.ts:229","errorMessage":"only the manager can call this method","pc":[1250]},{"teal":1291,"source":"contracts/BalancedPoolV2.algo.ts:228","pc":[1251]},{"teal":1295,"source":"contracts/BalancedPoolV2.algo.ts:232","pc":[1252,1253,1254]},{"teal":1299,"source":"contracts/BalancedPoolV2.algo.ts:233","pc":[1255,1256]},{"teal":1300,"source":"contracts/BalancedPoolV2.algo.ts:233","pc":[1257]},{"teal":1301,"source":"contracts/BalancedPoolV2.algo.ts:233","pc":[1258]},{"teal":1302,"source":"contracts/BalancedPoolV2.algo.ts:233","pc":[1259]},{"teal":1305,"source":"contracts/BalancedPoolV2.algo.ts:233","errorMessage":"pool not bootstrapped","pc":[1260]},{"teal":1306,"source":"contracts/BalancedPoolV2.algo.ts:232","pc":[1261]},{"teal":1310,"source":"contracts/BalancedPoolV2.algo.ts:236","pc":[1262,1263,1264]},{"teal":1313,"source":"contracts/BalancedPoolV2.algo.ts:236","pc":[1265]},{"teal":1314,"source":"contracts/BalancedPoolV2.algo.ts:236","pc":[1266,1267]},{"teal":1318,"source":"contracts/BalancedPoolV2.algo.ts:237","pc":[1268,1269]},{"teal":1319,"source":"contracts/BalancedPoolV2.algo.ts:237","pc":[1270]},{"teal":1320,"source":"contracts/BalancedPoolV2.algo.ts:237","pc":[1271]},{"teal":1323,"source":"contracts/BalancedPoolV2.algo.ts:237","errorMessage":"log undefined for x ≤ 0","pc":[1272]},{"teal":1327,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1273]},{"teal":1328,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1274,1275]},{"teal":1333,"source":"contracts/BalancedPoolV2.algo.ts:242","pc":[1276,1277]},{"teal":1334,"source":"contracts/BalancedPoolV2.algo.ts:242","pc":[1278]},{"teal":1335,"source":"contracts/BalancedPoolV2.algo.ts:242","pc":[1279]},{"teal":1336,"source":"contracts/BalancedPoolV2.algo.ts:242","pc":[1280,1281,1282]},{"teal":1341,"source":"contracts/BalancedPoolV2.algo.ts:243","pc":[1283]},{"teal":1342,"source":"contracts/BalancedPoolV2.algo.ts:243","pc":[1284,1285]},{"teal":1346,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1286]},{"teal":1347,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1287]},{"teal":1348,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1288]},{"teal":1349,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1289]},{"teal":1350,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1290,1291]},{"teal":1351,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1292]},{"teal":1352,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1293]},{"teal":1353,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1294]},{"teal":1354,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1295]},{"teal":1355,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1296]},{"teal":1358,"source":"contracts/BalancedPoolV2.algo.ts:244","errorMessage":"wideRatio failed","pc":[1297]},{"teal":1359,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1298,1299]},{"teal":1363,"source":"contracts/BalancedPoolV2.algo.ts:245","pc":[1300,1301]},{"teal":1364,"source":"contracts/BalancedPoolV2.algo.ts:245","pc":[1302]},{"teal":1365,"source":"contracts/BalancedPoolV2.algo.ts:245","pc":[1303]},{"teal":1366,"source":"contracts/BalancedPoolV2.algo.ts:245","pc":[1304]},{"teal":1367,"source":"contracts/BalancedPoolV2.algo.ts:245","pc":[1305]},{"teal":1368,"source":"contracts/BalancedPoolV2.algo.ts:245","pc":[1306]},{"teal":1369,"source":"contracts/BalancedPoolV2.algo.ts:245","pc":[1307,1308]},{"teal":1370,"source":"contracts/BalancedPoolV2.algo.ts:245","pc":[1309]},{"teal":1371,"source":"contracts/BalancedPoolV2.algo.ts:245","pc":[1310]},{"teal":1372,"source":"contracts/BalancedPoolV2.algo.ts:245","pc":[1311]},{"teal":1373,"source":"contracts/BalancedPoolV2.algo.ts:245","pc":[1312]},{"teal":1374,"source":"contracts/BalancedPoolV2.algo.ts:245","pc":[1313]},{"teal":1377,"source":"contracts/BalancedPoolV2.algo.ts:245","errorMessage":"wideRatio failed","pc":[1314]},{"teal":1378,"source":"contracts/BalancedPoolV2.algo.ts:245","pc":[1315,1316]},{"teal":1379,"source":"contracts/BalancedPoolV2.algo.ts:242","pc":[1317,1318,1319]},{"teal":1384,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1320,1321]},{"teal":1385,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1322]},{"teal":1386,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1323]},{"teal":1387,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1324]},{"teal":1388,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1325]},{"teal":1389,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1326]},{"teal":1390,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1327,1328]},{"teal":1391,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1329]},{"teal":1392,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1330]},{"teal":1393,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1331]},{"teal":1394,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1332]},{"teal":1395,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1333]},{"teal":1398,"source":"contracts/BalancedPoolV2.algo.ts:247","errorMessage":"wideRatio failed","pc":[1334]},{"teal":1399,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1335,1336]},{"teal":1404,"source":"contracts/BalancedPoolV2.algo.ts:250","pc":[1337,1338]},{"teal":1405,"source":"contracts/BalancedPoolV2.algo.ts:250","pc":[1339,1340]},{"teal":1409,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1341,1342]},{"teal":1410,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1343,1344]},{"teal":1414,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1345]},{"teal":1415,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1346,1347]},{"teal":1419,"source":"contracts/BalancedPoolV2.algo.ts:254","pc":[1348]},{"teal":1420,"source":"contracts/BalancedPoolV2.algo.ts:254","pc":[1349,1350]},{"teal":1421,"source":"contracts/BalancedPoolV2.algo.ts:254","pc":[1351,1352]},{"teal":1422,"source":"contracts/BalancedPoolV2.algo.ts:254","pc":[1353]},{"teal":1423,"source":"contracts/BalancedPoolV2.algo.ts:254","pc":[1354,1355]},{"teal":1424,"source":"contracts/BalancedPoolV2.algo.ts:254","pc":[1356,1357]},{"teal":1425,"source":"contracts/BalancedPoolV2.algo.ts:254","pc":[1358]},{"teal":1426,"source":"contracts/BalancedPoolV2.algo.ts:254","pc":[1359,1360]},{"teal":1427,"source":"contracts/BalancedPoolV2.algo.ts:254","pc":[1361,1362]},{"teal":1428,"source":"contracts/BalancedPoolV2.algo.ts:254","pc":[1363,1364]},{"teal":1429,"source":"contracts/BalancedPoolV2.algo.ts:254","pc":[1365,1366]},{"teal":1430,"source":"contracts/BalancedPoolV2.algo.ts:254","pc":[1367]},{"teal":1434,"source":"contracts/BalancedPoolV2.algo.ts:256","pc":[1368,1369]},{"teal":1435,"source":"contracts/BalancedPoolV2.algo.ts:256","pc":[1370,1371]},{"teal":1440,"source":"contracts/BalancedPoolV2.algo.ts:256","pc":[1372,1373]},{"teal":1441,"source":"contracts/BalancedPoolV2.algo.ts:256","pc":[1374,1375]},{"teal":1442,"source":"contracts/BalancedPoolV2.algo.ts:256","pc":[1376]},{"teal":1443,"source":"contracts/BalancedPoolV2.algo.ts:256","pc":[1377,1378,1379]},{"teal":1447,"source":"contracts/BalancedPoolV2.algo.ts:257","pc":[1380,1381]},{"teal":1448,"source":"contracts/BalancedPoolV2.algo.ts:257","pc":[1382,1383]},{"teal":1449,"source":"contracts/BalancedPoolV2.algo.ts:257","pc":[1384]},{"teal":1450,"source":"contracts/BalancedPoolV2.algo.ts:257","pc":[1385]},{"teal":1451,"source":"contracts/BalancedPoolV2.algo.ts:257","pc":[1386]},{"teal":1452,"source":"contracts/BalancedPoolV2.algo.ts:257","pc":[1387]},{"teal":1453,"source":"contracts/BalancedPoolV2.algo.ts:257","pc":[1388]},{"teal":1454,"source":"contracts/BalancedPoolV2.algo.ts:257","pc":[1389]},{"teal":1455,"source":"contracts/BalancedPoolV2.algo.ts:257","pc":[1390]},{"teal":1456,"source":"contracts/BalancedPoolV2.algo.ts:257","pc":[1391]},{"teal":1459,"source":"contracts/BalancedPoolV2.algo.ts:257","errorMessage":"wideRatio failed","pc":[1392]},{"teal":1460,"source":"contracts/BalancedPoolV2.algo.ts:257","pc":[1393,1394]},{"teal":1464,"source":"contracts/BalancedPoolV2.algo.ts:258","pc":[1395]},{"teal":1465,"source":"contracts/BalancedPoolV2.algo.ts:258","pc":[1396,1397]},{"teal":1466,"source":"contracts/BalancedPoolV2.algo.ts:258","pc":[1398]},{"teal":1467,"source":"contracts/BalancedPoolV2.algo.ts:258","pc":[1399,1400]},{"teal":1468,"source":"contracts/BalancedPoolV2.algo.ts:258","pc":[1401]},{"teal":1469,"source":"contracts/BalancedPoolV2.algo.ts:258","pc":[1402]},{"teal":1470,"source":"contracts/BalancedPoolV2.algo.ts:258","pc":[1403]},{"teal":1471,"source":"contracts/BalancedPoolV2.algo.ts:258","pc":[1404]},{"teal":1472,"source":"contracts/BalancedPoolV2.algo.ts:258","pc":[1405]},{"teal":1475,"source":"contracts/BalancedPoolV2.algo.ts:258","errorMessage":"wideRatio failed","pc":[1406]},{"teal":1476,"source":"contracts/BalancedPoolV2.algo.ts:258","pc":[1407,1408]},{"teal":1480,"source":"contracts/BalancedPoolV2.algo.ts:259","pc":[1409,1410]},{"teal":1481,"source":"contracts/BalancedPoolV2.algo.ts:259","pc":[1411,1412,1413]},{"teal":1482,"source":"contracts/BalancedPoolV2.algo.ts:259","pc":[1414,1415]},{"teal":1483,"source":"contracts/BalancedPoolV2.algo.ts:259","pc":[1416,1417]},{"teal":1484,"source":"contracts/BalancedPoolV2.algo.ts:259","pc":[1418]},{"teal":1485,"source":"contracts/BalancedPoolV2.algo.ts:259","pc":[1419,1420,1421]},{"teal":1488,"source":"contracts/BalancedPoolV2.algo.ts:259","pc":[1422,1423]},{"teal":1489,"source":"contracts/BalancedPoolV2.algo.ts:259","pc":[1424,1425]},{"teal":1490,"source":"contracts/BalancedPoolV2.algo.ts:259","pc":[1426]},{"teal":1493,"source":"contracts/BalancedPoolV2.algo.ts:259","pc":[1427,1428]},{"teal":1497,"source":"contracts/BalancedPoolV2.algo.ts:260","pc":[1429,1430]},{"teal":1498,"source":"contracts/BalancedPoolV2.algo.ts:260","pc":[1431]},{"teal":1499,"source":"contracts/BalancedPoolV2.algo.ts:260","pc":[1432,1433]},{"teal":1504,"source":"contracts/BalancedPoolV2.algo.ts:256","pc":[1434,1435]},{"teal":1505,"source":"contracts/BalancedPoolV2.algo.ts:256","pc":[1436]},{"teal":1506,"source":"contracts/BalancedPoolV2.algo.ts:256","pc":[1437]},{"teal":1507,"source":"contracts/BalancedPoolV2.algo.ts:256","pc":[1438,1439]},{"teal":1508,"source":"contracts/BalancedPoolV2.algo.ts:256","pc":[1440,1441,1442]},{"teal":1513,"source":"contracts/BalancedPoolV2.algo.ts:263","pc":[1443,1444]},{"teal":1514,"source":"contracts/BalancedPoolV2.algo.ts:263","pc":[1445]},{"teal":1515,"source":"contracts/BalancedPoolV2.algo.ts:263","pc":[1446,1447]},{"teal":1516,"source":"contracts/BalancedPoolV2.algo.ts:263","pc":[1448]},{"teal":1517,"source":"contracts/BalancedPoolV2.algo.ts:263","pc":[1449]},{"teal":1520,"source":"contracts/BalancedPoolV2.algo.ts:236","pc":[1450,1451]},{"teal":1523,"source":"contracts/BalancedPoolV2.algo.ts:236","pc":[1452,1453]},{"teal":1524,"source":"contracts/BalancedPoolV2.algo.ts:236","pc":[1454]},{"teal":1528,"source":"contracts/BalancedPoolV2.algo.ts:266","pc":[1455,1456,1457]},{"teal":1531,"source":"contracts/BalancedPoolV2.algo.ts:266","pc":[1458]},{"teal":1532,"source":"contracts/BalancedPoolV2.algo.ts:266","pc":[1459,1460]},{"teal":1536,"source":"contracts/BalancedPoolV2.algo.ts:267","pc":[1461]},{"teal":1537,"source":"contracts/BalancedPoolV2.algo.ts:267","pc":[1462,1463]},{"teal":1541,"source":"contracts/BalancedPoolV2.algo.ts:268","pc":[1464]},{"teal":1542,"source":"contracts/BalancedPoolV2.algo.ts:268","pc":[1465,1466]},{"teal":1546,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1467]},{"teal":1547,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1468,1469]},{"teal":1552,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1470,1471]},{"teal":1553,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1472,1473]},{"teal":1554,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1474]},{"teal":1555,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1475,1476,1477]},{"teal":1559,"source":"contracts/BalancedPoolV2.algo.ts:271","pc":[1478,1479]},{"teal":1560,"source":"contracts/BalancedPoolV2.algo.ts:271","pc":[1480,1481]},{"teal":1561,"source":"contracts/BalancedPoolV2.algo.ts:271","pc":[1482]},{"teal":1562,"source":"contracts/BalancedPoolV2.algo.ts:271","pc":[1483]},{"teal":1563,"source":"contracts/BalancedPoolV2.algo.ts:271","pc":[1484,1485]},{"teal":1564,"source":"contracts/BalancedPoolV2.algo.ts:271","pc":[1486]},{"teal":1565,"source":"contracts/BalancedPoolV2.algo.ts:271","pc":[1487]},{"teal":1566,"source":"contracts/BalancedPoolV2.algo.ts:271","pc":[1488]},{"teal":1567,"source":"contracts/BalancedPoolV2.algo.ts:271","pc":[1489]},{"teal":1568,"source":"contracts/BalancedPoolV2.algo.ts:271","pc":[1490]},{"teal":1569,"source":"contracts/BalancedPoolV2.algo.ts:271","pc":[1491]},{"teal":1570,"source":"contracts/BalancedPoolV2.algo.ts:271","pc":[1492]},{"teal":1573,"source":"contracts/BalancedPoolV2.algo.ts:271","errorMessage":"wideRatio failed","pc":[1493]},{"teal":1574,"source":"contracts/BalancedPoolV2.algo.ts:271","pc":[1494,1495]},{"teal":1578,"source":"contracts/BalancedPoolV2.algo.ts:272","pc":[1496,1497]},{"teal":1579,"source":"contracts/BalancedPoolV2.algo.ts:272","pc":[1498,1499]},{"teal":1580,"source":"contracts/BalancedPoolV2.algo.ts:272","pc":[1500]},{"teal":1581,"source":"contracts/BalancedPoolV2.algo.ts:272","pc":[1501,1502]},{"teal":1586,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1503,1504]},{"teal":1587,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1505]},{"teal":1588,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1506]},{"teal":1589,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1507,1508]},{"teal":1590,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1509,1510,1511]},{"teal":1595,"source":"contracts/BalancedPoolV2.algo.ts:275","pc":[1512,1513]},{"teal":1598,"source":"contracts/BalancedPoolV2.algo.ts:266","pc":[1514,1515]},{"teal":1601,"source":"contracts/BalancedPoolV2.algo.ts:266","pc":[1516,1517]},{"teal":1602,"source":"contracts/BalancedPoolV2.algo.ts:266","pc":[1518]},{"teal":1606,"source":"contracts/BalancedPoolV2.algo.ts:278","pc":[1519,1520,1521]},{"teal":1609,"source":"contracts/BalancedPoolV2.algo.ts:278","pc":[1522]},{"teal":1610,"source":"contracts/BalancedPoolV2.algo.ts:278","pc":[1523,1524]},{"teal":1615,"source":"contracts/BalancedPoolV2.algo.ts:279","pc":[1525,1526]},{"teal":1616,"source":"contracts/BalancedPoolV2.algo.ts:279","pc":[1527]},{"teal":1617,"source":"contracts/BalancedPoolV2.algo.ts:279","pc":[1528]},{"teal":1618,"source":"contracts/BalancedPoolV2.algo.ts:279","pc":[1529,1530,1531]},{"teal":1623,"source":"contracts/BalancedPoolV2.algo.ts:279","pc":[1532]},{"teal":1624,"source":"contracts/BalancedPoolV2.algo.ts:279","pc":[1533,1534,1535]},{"teal":1629,"source":"contracts/BalancedPoolV2.algo.ts:281","pc":[1536,1537]},{"teal":1630,"source":"contracts/BalancedPoolV2.algo.ts:281","pc":[1538,1539,1540]},{"teal":1631,"source":"contracts/BalancedPoolV2.algo.ts:281","pc":[1541,1542]},{"teal":1635,"source":"contracts/BalancedPoolV2.algo.ts:282","pc":[1543,1544]},{"teal":1636,"source":"contracts/BalancedPoolV2.algo.ts:282","pc":[1545,1546]},{"teal":1637,"source":"contracts/BalancedPoolV2.algo.ts:282","pc":[1547,1548]},{"teal":1638,"source":"contracts/BalancedPoolV2.algo.ts:282","pc":[1549,1550,1551]},{"teal":1639,"source":"contracts/BalancedPoolV2.algo.ts:282","pc":[1552]},{"teal":1640,"source":"contracts/BalancedPoolV2.algo.ts:282","pc":[1553,1554]},{"teal":1644,"source":"contracts/BalancedPoolV2.algo.ts:283","pc":[1555,1556]},{"teal":1645,"source":"contracts/BalancedPoolV2.algo.ts:283","pc":[1557,1558]},{"teal":1646,"source":"contracts/BalancedPoolV2.algo.ts:283","pc":[1559,1560]},{"teal":1647,"source":"contracts/BalancedPoolV2.algo.ts:283","pc":[1561,1562,1563]},{"teal":1648,"source":"contracts/BalancedPoolV2.algo.ts:283","pc":[1564]},{"teal":1649,"source":"contracts/BalancedPoolV2.algo.ts:283","pc":[1565,1566]},{"teal":1653,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1567,1568]},{"teal":1654,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1569,1570]},{"teal":1655,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1571]},{"teal":1656,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1572]},{"teal":1657,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1573]},{"teal":1658,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1574]},{"teal":1659,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1575]},{"teal":1660,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1576]},{"teal":1661,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1577]},{"teal":1662,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1578]},{"teal":1665,"source":"contracts/BalancedPoolV2.algo.ts:285","errorMessage":"wideRatio failed","pc":[1579]},{"teal":1666,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1580,1581]},{"teal":1670,"source":"contracts/BalancedPoolV2.algo.ts:287","pc":[1582,1583]},{"teal":1671,"source":"contracts/BalancedPoolV2.algo.ts:287","pc":[1584,1585,1586]},{"teal":1672,"source":"contracts/BalancedPoolV2.algo.ts:287","pc":[1587,1588]},{"teal":1677,"source":"contracts/BalancedPoolV2.algo.ts:289","pc":[1589,1590]},{"teal":1678,"source":"contracts/BalancedPoolV2.algo.ts:289","pc":[1591]},{"teal":1679,"source":"contracts/BalancedPoolV2.algo.ts:289","pc":[1592]},{"teal":1680,"source":"contracts/BalancedPoolV2.algo.ts:289","pc":[1593,1594,1595]},{"teal":1685,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1596]},{"teal":1686,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1597]},{"teal":1687,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1598]},{"teal":1688,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1599]},{"teal":1689,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1600,1601]},{"teal":1690,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1602]},{"teal":1691,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1603]},{"teal":1692,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1604]},{"teal":1693,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1605]},{"teal":1694,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1606]},{"teal":1697,"source":"contracts/BalancedPoolV2.algo.ts:290","errorMessage":"wideRatio failed","pc":[1607]},{"teal":1698,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1608,1609,1610]},{"teal":1703,"source":"contracts/BalancedPoolV2.algo.ts:293","pc":[1611,1612]},{"teal":1707,"source":"contracts/BalancedPoolV2.algo.ts:278","pc":[1613,1614]},{"teal":1710,"source":"contracts/BalancedPoolV2.algo.ts:278","pc":[1615,1616]},{"teal":1711,"source":"contracts/BalancedPoolV2.algo.ts:278","pc":[1617]},{"teal":1715,"source":"contracts/BalancedPoolV2.algo.ts:296","pc":[1618,1619,1620]},{"teal":1718,"source":"contracts/BalancedPoolV2.algo.ts:296","pc":[1621]},{"teal":1719,"source":"contracts/BalancedPoolV2.algo.ts:296","pc":[1622,1623]},{"teal":1723,"source":"contracts/BalancedPoolV2.algo.ts:305","pc":[1624,1625]},{"teal":1724,"source":"contracts/BalancedPoolV2.algo.ts:305","pc":[1626,1627,1628,1629]},{"teal":1725,"source":"contracts/BalancedPoolV2.algo.ts:305","pc":[1630]},{"teal":1726,"source":"contracts/BalancedPoolV2.algo.ts:305","pc":[1631]},{"teal":1727,"source":"contracts/BalancedPoolV2.algo.ts:305","pc":[1632]},{"teal":1728,"source":"contracts/BalancedPoolV2.algo.ts:305","pc":[1633]},{"teal":1729,"source":"contracts/BalancedPoolV2.algo.ts:305","pc":[1634]},{"teal":1730,"source":"contracts/BalancedPoolV2.algo.ts:305","pc":[1635]},{"teal":1731,"source":"contracts/BalancedPoolV2.algo.ts:305","pc":[1636]},{"teal":1732,"source":"contracts/BalancedPoolV2.algo.ts:305","pc":[1637]},{"teal":1735,"source":"contracts/BalancedPoolV2.algo.ts:305","errorMessage":"wideRatio failed","pc":[1638]},{"teal":1736,"source":"contracts/BalancedPoolV2.algo.ts:305","pc":[1639,1640]},{"teal":1740,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1641,1642]},{"teal":1741,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1643]},{"teal":1742,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1644]},{"teal":1743,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1645]},{"teal":1744,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1646,1647]},{"teal":1745,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1648,1649]},{"teal":1746,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1650]},{"teal":1747,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1651]},{"teal":1748,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1652]},{"teal":1749,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1653]},{"teal":1750,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1654]},{"teal":1751,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1655]},{"teal":1754,"source":"contracts/BalancedPoolV2.algo.ts:308","errorMessage":"wideRatio failed","pc":[1656]},{"teal":1755,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1657,1658]},{"teal":1759,"source":"contracts/BalancedPoolV2.algo.ts:310","pc":[1659,1660]},{"teal":1760,"source":"contracts/BalancedPoolV2.algo.ts:310","pc":[1661]},{"teal":1761,"source":"contracts/BalancedPoolV2.algo.ts:310","pc":[1662]},{"teal":1762,"source":"contracts/BalancedPoolV2.algo.ts:310","pc":[1663]},{"teal":1763,"source":"contracts/BalancedPoolV2.algo.ts:310","pc":[1664,1665]},{"teal":1764,"source":"contracts/BalancedPoolV2.algo.ts:310","pc":[1666]},{"teal":1765,"source":"contracts/BalancedPoolV2.algo.ts:310","pc":[1667]},{"teal":1766,"source":"contracts/BalancedPoolV2.algo.ts:310","pc":[1668]},{"teal":1767,"source":"contracts/BalancedPoolV2.algo.ts:310","pc":[1669]},{"teal":1768,"source":"contracts/BalancedPoolV2.algo.ts:310","pc":[1670]},{"teal":1771,"source":"contracts/BalancedPoolV2.algo.ts:310","errorMessage":"wideRatio failed","pc":[1671]},{"teal":1772,"source":"contracts/BalancedPoolV2.algo.ts:310","pc":[1672,1673]},{"teal":1776,"source":"contracts/BalancedPoolV2.algo.ts:313","pc":[1674,1675]},{"teal":1777,"source":"contracts/BalancedPoolV2.algo.ts:313","pc":[1676,1677]},{"teal":1778,"source":"contracts/BalancedPoolV2.algo.ts:313","pc":[1678,1679,1680]},{"teal":1779,"source":"contracts/BalancedPoolV2.algo.ts:313","pc":[1681,1682]},{"teal":1783,"source":"contracts/BalancedPoolV2.algo.ts:315","pc":[1683,1684]},{"teal":1784,"source":"contracts/BalancedPoolV2.algo.ts:315","pc":[1685]},{"teal":1785,"source":"contracts/BalancedPoolV2.algo.ts:315","pc":[1686]},{"teal":1789,"source":"contracts/BalancedPoolV2.algo.ts:316","pc":[1687,1688]},{"teal":1790,"source":"contracts/BalancedPoolV2.algo.ts:316","pc":[1689]},{"teal":1791,"source":"contracts/BalancedPoolV2.algo.ts:316","pc":[1690]},{"teal":1795,"source":"contracts/BalancedPoolV2.algo.ts:317","pc":[1691,1692]},{"teal":1796,"source":"contracts/BalancedPoolV2.algo.ts:317","pc":[1693]},{"teal":1797,"source":"contracts/BalancedPoolV2.algo.ts:317","pc":[1694]},{"teal":1801,"source":"contracts/BalancedPoolV2.algo.ts:318","pc":[1695,1696]},{"teal":1802,"source":"contracts/BalancedPoolV2.algo.ts:318","pc":[1697]},{"teal":1803,"source":"contracts/BalancedPoolV2.algo.ts:318","pc":[1698]},{"teal":1807,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1699,1700]},{"teal":1808,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1701]},{"teal":1809,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1702]},{"teal":1813,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1703,1704]},{"teal":1814,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1705]},{"teal":1815,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1706,1707]},{"teal":1816,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1708]},{"teal":1817,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1709]},{"teal":1818,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1710]},{"teal":1819,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1711]},{"teal":1820,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1712]},{"teal":1821,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1713]},{"teal":1822,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1714]},{"teal":1823,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1715]},{"teal":1824,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1716]},{"teal":1827,"source":"contracts/BalancedPoolV2.algo.ts:320","errorMessage":"wideRatio failed","pc":[1717]},{"teal":1828,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1718]},{"teal":1829,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1719]},{"teal":1833,"source":"contracts/BalancedPoolV2.algo.ts:322","pc":[1720,1721]},{"teal":1834,"source":"contracts/BalancedPoolV2.algo.ts:322","pc":[1722]},{"teal":1835,"source":"contracts/BalancedPoolV2.algo.ts:322","pc":[1723,1724]},{"teal":1836,"source":"contracts/BalancedPoolV2.algo.ts:322","pc":[1725]},{"teal":1837,"source":"contracts/BalancedPoolV2.algo.ts:322","pc":[1726]},{"teal":1838,"source":"contracts/BalancedPoolV2.algo.ts:322","pc":[1727]},{"teal":1839,"source":"contracts/BalancedPoolV2.algo.ts:322","pc":[1728]},{"teal":1840,"source":"contracts/BalancedPoolV2.algo.ts:322","pc":[1729]},{"teal":1841,"source":"contracts/BalancedPoolV2.algo.ts:322","pc":[1730]},{"teal":1842,"source":"contracts/BalancedPoolV2.algo.ts:322","pc":[1731]},{"teal":1843,"source":"contracts/BalancedPoolV2.algo.ts:322","pc":[1732]},{"teal":1844,"source":"contracts/BalancedPoolV2.algo.ts:322","pc":[1733]},{"teal":1847,"source":"contracts/BalancedPoolV2.algo.ts:322","errorMessage":"wideRatio failed","pc":[1734]},{"teal":1850,"source":"contracts/BalancedPoolV2.algo.ts:296","pc":[1735,1736]},{"teal":1853,"source":"contracts/BalancedPoolV2.algo.ts:296","pc":[1737,1738]},{"teal":1854,"source":"contracts/BalancedPoolV2.algo.ts:296","pc":[1739]},{"teal":1858,"source":"contracts/BalancedPoolV2.algo.ts:325","pc":[1740,1741,1742]},{"teal":1861,"source":"contracts/BalancedPoolV2.algo.ts:325","pc":[1743]},{"teal":1862,"source":"contracts/BalancedPoolV2.algo.ts:325","pc":[1744,1745]},{"teal":1866,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1746]},{"teal":1867,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1747]},{"teal":1868,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1748,1749,1750]},{"teal":1869,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1751]},{"teal":1870,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1752]},{"teal":1871,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1753]},{"teal":1872,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1754,1755]},{"teal":1876,"source":"contracts/BalancedPoolV2.algo.ts:327","pc":[1756,1757]},{"teal":1877,"source":"contracts/BalancedPoolV2.algo.ts:327","pc":[1758]},{"teal":1878,"source":"contracts/BalancedPoolV2.algo.ts:327","pc":[1759]},{"teal":1881,"source":"contracts/BalancedPoolV2.algo.ts:327","errorMessage":"Please provide at least one asset","pc":[1760]},{"teal":1885,"source":"contracts/BalancedPoolV2.algo.ts:329","pc":[1761]},{"teal":1886,"source":"contracts/BalancedPoolV2.algo.ts:329","pc":[1762,1763]},{"teal":1890,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1764]},{"teal":1891,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1765,1766]},{"teal":1896,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1767,1768]},{"teal":1897,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1769,1770]},{"teal":1898,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1771]},{"teal":1899,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1772]},{"teal":1900,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1773]},{"teal":1901,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1774,1775,1776]},{"teal":1905,"source":"contracts/BalancedPoolV2.algo.ts:332","pc":[1777]},{"teal":1906,"source":"contracts/BalancedPoolV2.algo.ts:332","pc":[1778,1779]},{"teal":1907,"source":"contracts/BalancedPoolV2.algo.ts:332","pc":[1780,1781]},{"teal":1908,"source":"contracts/BalancedPoolV2.algo.ts:332","pc":[1782]},{"teal":1909,"source":"contracts/BalancedPoolV2.algo.ts:332","pc":[1783,1784]},{"teal":1910,"source":"contracts/BalancedPoolV2.algo.ts:332","pc":[1785,1786]},{"teal":1911,"source":"contracts/BalancedPoolV2.algo.ts:332","pc":[1787]},{"teal":1912,"source":"contracts/BalancedPoolV2.algo.ts:332","pc":[1788,1789]},{"teal":1913,"source":"contracts/BalancedPoolV2.algo.ts:332","pc":[1790,1791]},{"teal":1914,"source":"contracts/BalancedPoolV2.algo.ts:332","pc":[1792,1793]},{"teal":1915,"source":"contracts/BalancedPoolV2.algo.ts:332","pc":[1794,1795]},{"teal":1916,"source":"contracts/BalancedPoolV2.algo.ts:332","pc":[1796]},{"teal":1921,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1797,1798]},{"teal":1922,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1799]},{"teal":1923,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1800]},{"teal":1924,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1801,1802]},{"teal":1925,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1803,1804,1805]},{"teal":1930,"source":"contracts/BalancedPoolV2.algo.ts:335","pc":[1806]},{"teal":1931,"source":"contracts/BalancedPoolV2.algo.ts:335","pc":[1807,1808]},{"teal":1936,"source":"contracts/BalancedPoolV2.algo.ts:335","pc":[1809,1810]},{"teal":1937,"source":"contracts/BalancedPoolV2.algo.ts:335","pc":[1811,1812]},{"teal":1938,"source":"contracts/BalancedPoolV2.algo.ts:335","pc":[1813]},{"teal":1939,"source":"contracts/BalancedPoolV2.algo.ts:335","pc":[1814,1815,1816]},{"teal":1943,"source":"contracts/BalancedPoolV2.algo.ts:336","pc":[1817]},{"teal":1944,"source":"contracts/BalancedPoolV2.algo.ts:336","pc":[1818]},{"teal":1945,"source":"contracts/BalancedPoolV2.algo.ts:336","pc":[1819,1820,1821]},{"teal":1946,"source":"contracts/BalancedPoolV2.algo.ts:336","pc":[1822,1823]},{"teal":1947,"source":"contracts/BalancedPoolV2.algo.ts:336","pc":[1824]},{"teal":1948,"source":"contracts/BalancedPoolV2.algo.ts:336","pc":[1825,1826]},{"teal":1949,"source":"contracts/BalancedPoolV2.algo.ts:336","pc":[1827]},{"teal":1950,"source":"contracts/BalancedPoolV2.algo.ts:336","pc":[1828]},{"teal":1951,"source":"contracts/BalancedPoolV2.algo.ts:336","pc":[1829]},{"teal":1952,"source":"contracts/BalancedPoolV2.algo.ts:336","pc":[1830,1831]},{"teal":1953,"source":"contracts/BalancedPoolV2.algo.ts:336","pc":[1832]},{"teal":1954,"source":"contracts/BalancedPoolV2.algo.ts:336","pc":[1833]},{"teal":1955,"source":"contracts/BalancedPoolV2.algo.ts:336","pc":[1834]},{"teal":1956,"source":"contracts/BalancedPoolV2.algo.ts:336","pc":[1835]},{"teal":1957,"source":"contracts/BalancedPoolV2.algo.ts:336","pc":[1836,1837]},{"teal":1961,"source":"contracts/BalancedPoolV2.algo.ts:337","pc":[1838]},{"teal":1962,"source":"contracts/BalancedPoolV2.algo.ts:337","pc":[1839,1840]},{"teal":1963,"source":"contracts/BalancedPoolV2.algo.ts:337","pc":[1841]},{"teal":1964,"source":"contracts/BalancedPoolV2.algo.ts:337","pc":[1842]},{"teal":1965,"source":"contracts/BalancedPoolV2.algo.ts:337","pc":[1843]},{"teal":1968,"source":"contracts/BalancedPoolV2.algo.ts:337","errorMessage":"box value does not exist: this.balances(assetId).value","pc":[1844]},{"teal":1969,"source":"contracts/BalancedPoolV2.algo.ts:337","pc":[1845]},{"teal":1970,"source":"contracts/BalancedPoolV2.algo.ts:337","pc":[1846,1847]},{"teal":1974,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1848]},{"teal":1975,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1849,1850]},{"teal":1976,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1851]},{"teal":1977,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1852]},{"teal":1980,"source":"contracts/BalancedPoolV2.algo.ts:338","errorMessage":"box value does not exist: this.provided(sender).value","pc":[1853]},{"teal":1981,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1854,1855,1856]},{"teal":1982,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1857,1858]},{"teal":1983,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1859]},{"teal":1984,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1860,1861]},{"teal":1985,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1862]},{"teal":1986,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1863]},{"teal":1987,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1864]},{"teal":1988,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1865,1866]},{"teal":1989,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1867]},{"teal":1990,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1868]},{"teal":1991,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1869]},{"teal":1992,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1870]},{"teal":1993,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1871,1872]},{"teal":1997,"source":"contracts/BalancedPoolV2.algo.ts:339","pc":[1873,1874]},{"teal":1998,"source":"contracts/BalancedPoolV2.algo.ts:339","pc":[1875,1876]},{"teal":1999,"source":"contracts/BalancedPoolV2.algo.ts:339","pc":[1877]},{"teal":2000,"source":"contracts/BalancedPoolV2.algo.ts:339","pc":[1878]},{"teal":2001,"source":"contracts/BalancedPoolV2.algo.ts:339","pc":[1879]},{"teal":2004,"source":"contracts/BalancedPoolV2.algo.ts:339","errorMessage":"box value does not exist: this.weights(i).value","pc":[1880]},{"teal":2005,"source":"contracts/BalancedPoolV2.algo.ts:339","pc":[1881]},{"teal":2006,"source":"contracts/BalancedPoolV2.algo.ts:339","pc":[1882,1883]},{"teal":2010,"source":"contracts/BalancedPoolV2.algo.ts:341","pc":[1884,1885]},{"teal":2011,"source":"contracts/BalancedPoolV2.algo.ts:341","pc":[1886]},{"teal":2012,"source":"contracts/BalancedPoolV2.algo.ts:341","pc":[1887]},{"teal":2015,"source":"contracts/BalancedPoolV2.algo.ts:341","errorMessage":"Pool balance must be > 0","pc":[1888]},{"teal":2019,"source":"contracts/BalancedPoolV2.algo.ts:343","pc":[1889,1890]},{"teal":2020,"source":"contracts/BalancedPoolV2.algo.ts:343","pc":[1891]},{"teal":2021,"source":"contracts/BalancedPoolV2.algo.ts:343","pc":[1892]},{"teal":2022,"source":"contracts/BalancedPoolV2.algo.ts:343","pc":[1893]},{"teal":2023,"source":"contracts/BalancedPoolV2.algo.ts:343","pc":[1894,1895]},{"teal":2024,"source":"contracts/BalancedPoolV2.algo.ts:343","pc":[1896,1897]},{"teal":2025,"source":"contracts/BalancedPoolV2.algo.ts:343","pc":[1898]},{"teal":2026,"source":"contracts/BalancedPoolV2.algo.ts:343","pc":[1899]},{"teal":2027,"source":"contracts/BalancedPoolV2.algo.ts:343","pc":[1900]},{"teal":2028,"source":"contracts/BalancedPoolV2.algo.ts:343","pc":[1901]},{"teal":2029,"source":"contracts/BalancedPoolV2.algo.ts:343","pc":[1902]},{"teal":2030,"source":"contracts/BalancedPoolV2.algo.ts:343","pc":[1903]},{"teal":2033,"source":"contracts/BalancedPoolV2.algo.ts:343","errorMessage":"wideRatio failed","pc":[1904]},{"teal":2034,"source":"contracts/BalancedPoolV2.algo.ts:343","pc":[1905,1906]},{"teal":2038,"source":"contracts/BalancedPoolV2.algo.ts:344","pc":[1907,1908]},{"teal":2039,"source":"contracts/BalancedPoolV2.algo.ts:344","pc":[1909,1910]},{"teal":2040,"source":"contracts/BalancedPoolV2.algo.ts:344","pc":[1911,1912,1913]},{"teal":2041,"source":"contracts/BalancedPoolV2.algo.ts:344","pc":[1914,1915]},{"teal":2045,"source":"contracts/BalancedPoolV2.algo.ts:345","pc":[1916,1917]},{"teal":2046,"source":"contracts/BalancedPoolV2.algo.ts:345","pc":[1918,1919]},{"teal":2047,"source":"contracts/BalancedPoolV2.algo.ts:345","pc":[1920]},{"teal":2048,"source":"contracts/BalancedPoolV2.algo.ts:345","pc":[1921]},{"teal":2049,"source":"contracts/BalancedPoolV2.algo.ts:345","pc":[1922]},{"teal":2050,"source":"contracts/BalancedPoolV2.algo.ts:345","pc":[1923]},{"teal":2051,"source":"contracts/BalancedPoolV2.algo.ts:345","pc":[1924]},{"teal":2052,"source":"contracts/BalancedPoolV2.algo.ts:345","pc":[1925]},{"teal":2053,"source":"contracts/BalancedPoolV2.algo.ts:345","pc":[1926]},{"teal":2054,"source":"contracts/BalancedPoolV2.algo.ts:345","pc":[1927]},{"teal":2057,"source":"contracts/BalancedPoolV2.algo.ts:345","errorMessage":"wideRatio failed","pc":[1928]},{"teal":2058,"source":"contracts/BalancedPoolV2.algo.ts:345","pc":[1929,1930]},{"teal":2063,"source":"contracts/BalancedPoolV2.algo.ts:335","pc":[1931,1932]},{"teal":2064,"source":"contracts/BalancedPoolV2.algo.ts:335","pc":[1933]},{"teal":2065,"source":"contracts/BalancedPoolV2.algo.ts:335","pc":[1934]},{"teal":2066,"source":"contracts/BalancedPoolV2.algo.ts:335","pc":[1935,1936]},{"teal":2067,"source":"contracts/BalancedPoolV2.algo.ts:335","pc":[1937,1938,1939]},{"teal":2072,"source":"contracts/BalancedPoolV2.algo.ts:348","pc":[1940,1941,1942]},{"teal":2073,"source":"contracts/BalancedPoolV2.algo.ts:348","pc":[1943,1944]},{"teal":2077,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1945,1946]},{"teal":2078,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1947,1948]},{"teal":2079,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1949]},{"teal":2080,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1950]},{"teal":2081,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1951]},{"teal":2082,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1952]},{"teal":2083,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1953]},{"teal":2084,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1954]},{"teal":2085,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1955]},{"teal":2086,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1956]},{"teal":2089,"source":"contracts/BalancedPoolV2.algo.ts:349","errorMessage":"wideRatio failed","pc":[1957]},{"teal":2092,"source":"contracts/BalancedPoolV2.algo.ts:325","pc":[1958,1959]},{"teal":2095,"source":"contracts/BalancedPoolV2.algo.ts:325","pc":[1960,1961]},{"teal":2096,"source":"contracts/BalancedPoolV2.algo.ts:325","pc":[1962]},{"teal":2100,"source":"contracts/BalancedPoolV2.algo.ts:352","pc":[1963,1964,1965]},{"teal":2104,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1966,1967]},{"teal":2105,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1968]},{"teal":2106,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1969,1970]},{"teal":2107,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1971]},{"teal":2108,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1972,1973]},{"teal":2109,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1974]},{"teal":2110,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1975,1976]},{"teal":2111,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1977]},{"teal":2112,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1978,1979]},{"teal":2113,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1980]},{"teal":2114,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1981,1982]},{"teal":2115,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1983]},{"teal":2116,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1984]},{"teal":2117,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1985,1986]},{"teal":2118,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1987]},{"teal":2119,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1988]},{"teal":2120,"source":"contracts/BalancedPoolV2.algo.ts:352","pc":[1989]},{"teal":2124,"source":"contracts/BalancedPoolV2.algo.ts:356","pc":[1990,1991,1992]},{"teal":2128,"source":"contracts/BalancedPoolV2.algo.ts:357","pc":[1993,1994]},{"teal":2129,"source":"contracts/BalancedPoolV2.algo.ts:357","pc":[1995,1996]},{"teal":2130,"source":"contracts/BalancedPoolV2.algo.ts:357","pc":[1997]},{"teal":2131,"source":"contracts/BalancedPoolV2.algo.ts:357","pc":[1998,1999,2000]},{"teal":2132,"source":"contracts/BalancedPoolV2.algo.ts:357","pc":[2001,2002]},{"teal":2133,"source":"contracts/BalancedPoolV2.algo.ts:357","pc":[2003,2004]},{"teal":2134,"source":"contracts/BalancedPoolV2.algo.ts:357","pc":[2005]},{"teal":2135,"source":"contracts/BalancedPoolV2.algo.ts:357","pc":[2006,2007,2008]},{"teal":2138,"source":"contracts/BalancedPoolV2.algo.ts:357","pc":[2009,2010]},{"teal":2139,"source":"contracts/BalancedPoolV2.algo.ts:357","pc":[2011,2012]},{"teal":2140,"source":"contracts/BalancedPoolV2.algo.ts:357","pc":[2013]},{"teal":2143,"source":"contracts/BalancedPoolV2.algo.ts:356","pc":[2014]},{"teal":2148,"source":"contracts/BalancedPoolV2.algo.ts:360","pc":[2015,2016]},{"teal":2151,"source":"contracts/BalancedPoolV2.algo.ts:360","pc":[2017,2018,2019]},{"teal":2152,"source":"contracts/BalancedPoolV2.algo.ts:360","pc":[2020]},{"teal":2153,"source":"contracts/BalancedPoolV2.algo.ts:360","pc":[2021]},{"teal":2154,"source":"contracts/BalancedPoolV2.algo.ts:360","pc":[2022]},{"teal":2155,"source":"contracts/BalancedPoolV2.algo.ts:360","pc":[2023]},{"teal":2156,"source":"contracts/BalancedPoolV2.algo.ts:360","pc":[2024]},{"teal":2160,"source":"contracts/BalancedPoolV2.algo.ts:360","pc":[2025,2026,2027]},{"teal":2164,"source":"contracts/BalancedPoolV2.algo.ts:362","pc":[2028]},{"teal":2165,"source":"contracts/BalancedPoolV2.algo.ts:362","pc":[2029]},{"teal":2166,"source":"contracts/BalancedPoolV2.algo.ts:362","pc":[2030,2031,2032]},{"teal":2167,"source":"contracts/BalancedPoolV2.algo.ts:362","pc":[2033]},{"teal":2168,"source":"contracts/BalancedPoolV2.algo.ts:362","pc":[2034]},{"teal":2169,"source":"contracts/BalancedPoolV2.algo.ts:362","pc":[2035]},{"teal":2170,"source":"contracts/BalancedPoolV2.algo.ts:360","pc":[2036]},{"teal":2175,"source":"contracts/BalancedPoolV2.algo.ts:365","pc":[2037,2038]},{"teal":2178,"source":"contracts/BalancedPoolV2.algo.ts:365","pc":[2039,2040,2041]},{"teal":2179,"source":"contracts/BalancedPoolV2.algo.ts:365","pc":[2042]},{"teal":2180,"source":"contracts/BalancedPoolV2.algo.ts:365","pc":[2043]},{"teal":2181,"source":"contracts/BalancedPoolV2.algo.ts:365","pc":[2044]},{"teal":2182,"source":"contracts/BalancedPoolV2.algo.ts:365","pc":[2045]},{"teal":2183,"source":"contracts/BalancedPoolV2.algo.ts:365","pc":[2046]},{"teal":2187,"source":"contracts/BalancedPoolV2.algo.ts:365","pc":[2047,2048,2049]},{"teal":2191,"source":"contracts/BalancedPoolV2.algo.ts:367","pc":[2050,2051]},{"teal":2192,"source":"contracts/BalancedPoolV2.algo.ts:367","pc":[2052]},{"teal":2193,"source":"contracts/BalancedPoolV2.algo.ts:365","pc":[2053]},{"teal":2198,"source":"contracts/BalancedPoolV2.algo.ts:370","pc":[2054,2055]},{"teal":2201,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[2056,2057,2058]},{"teal":2202,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[2059]},{"teal":2205,"source":"contracts/BalancedPoolV2.algo.ts:370","pc":[2060,2061,2062]},{"teal":2206,"source":"contracts/BalancedPoolV2.algo.ts:370","pc":[2063]},{"teal":2207,"source":"contracts/BalancedPoolV2.algo.ts:370","pc":[2064]},{"teal":2208,"source":"contracts/BalancedPoolV2.algo.ts:370","pc":[2065]},{"teal":2209,"source":"contracts/BalancedPoolV2.algo.ts:370","pc":[2066]},{"teal":2210,"source":"contracts/BalancedPoolV2.algo.ts:370","pc":[2067]},{"teal":2214,"source":"contracts/BalancedPoolV2.algo.ts:370","pc":[2068,2069,2070]},{"teal":2217,"source":"contracts/BalancedPoolV2.algo.ts:370","pc":[2071]},{"teal":2221,"source":"contracts/BalancedPoolV2.algo.ts:372","pc":[2072]},{"teal":2222,"source":"contracts/BalancedPoolV2.algo.ts:372","pc":[2073]},{"teal":2223,"source":"contracts/BalancedPoolV2.algo.ts:372","pc":[2074,2075,2076]},{"teal":2224,"source":"contracts/BalancedPoolV2.algo.ts:372","pc":[2077,2078]},{"teal":2225,"source":"contracts/BalancedPoolV2.algo.ts:372","pc":[2079]},{"teal":2226,"source":"contracts/BalancedPoolV2.algo.ts:372","pc":[2080,2081]},{"teal":2227,"source":"contracts/BalancedPoolV2.algo.ts:372","pc":[2082]},{"teal":2228,"source":"contracts/BalancedPoolV2.algo.ts:372","pc":[2083]},{"teal":2229,"source":"contracts/BalancedPoolV2.algo.ts:372","pc":[2084]},{"teal":2230,"source":"contracts/BalancedPoolV2.algo.ts:372","pc":[2085,2086]},{"teal":2231,"source":"contracts/BalancedPoolV2.algo.ts:372","pc":[2087]},{"teal":2232,"source":"contracts/BalancedPoolV2.algo.ts:372","pc":[2088]},{"teal":2233,"source":"contracts/BalancedPoolV2.algo.ts:372","pc":[2089]},{"teal":2234,"source":"contracts/BalancedPoolV2.algo.ts:372","pc":[2090]},{"teal":2235,"source":"contracts/BalancedPoolV2.algo.ts:372","pc":[2091,2092]},{"teal":2239,"source":"contracts/BalancedPoolV2.algo.ts:373","pc":[2093]},{"teal":2240,"source":"contracts/BalancedPoolV2.algo.ts:373","pc":[2094,2095]},{"teal":2241,"source":"contracts/BalancedPoolV2.algo.ts:373","pc":[2096]},{"teal":2242,"source":"contracts/BalancedPoolV2.algo.ts:373","pc":[2097]},{"teal":2243,"source":"contracts/BalancedPoolV2.algo.ts:373","pc":[2098]},{"teal":2246,"source":"contracts/BalancedPoolV2.algo.ts:373","errorMessage":"box value does not exist: this.balances(asset).value","pc":[2099]},{"teal":2247,"source":"contracts/BalancedPoolV2.algo.ts:373","pc":[2100]},{"teal":2250,"source":"contracts/BalancedPoolV2.algo.ts:370","pc":[2101,2102]},{"teal":2251,"source":"contracts/BalancedPoolV2.algo.ts:370","pc":[2103]},{"teal":2256,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[2104,2105]},{"teal":2259,"source":"contracts/BalancedPoolV2.algo.ts:377","pc":[2106,2107,2108]},{"teal":2260,"source":"contracts/BalancedPoolV2.algo.ts:377","pc":[2109]},{"teal":2263,"source":"contracts/BalancedPoolV2.algo.ts:377","pc":[2110,2111,2112]},{"teal":2264,"source":"contracts/BalancedPoolV2.algo.ts:377","pc":[2113]},{"teal":2267,"source":"contracts/BalancedPoolV2.algo.ts:377","pc":[2114,2115,2116]},{"teal":2268,"source":"contracts/BalancedPoolV2.algo.ts:377","pc":[2117]},{"teal":2271,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[2118,2119,2120]},{"teal":2272,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[2121]},{"teal":2273,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[2122]},{"teal":2274,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[2123]},{"teal":2275,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[2124]},{"teal":2276,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[2125]},{"teal":2280,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[2126,2127,2128]},{"teal":2283,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[2129]},{"teal":2284,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[2130,2131]},{"teal":2288,"source":"contracts/BalancedPoolV2.algo.ts:378","pc":[2132]},{"teal":2289,"source":"contracts/BalancedPoolV2.algo.ts:378","pc":[2133]},{"teal":2290,"source":"contracts/BalancedPoolV2.algo.ts:378","pc":[2134,2135,2136]},{"teal":2291,"source":"contracts/BalancedPoolV2.algo.ts:378","pc":[2137,2138]},{"teal":2292,"source":"contracts/BalancedPoolV2.algo.ts:378","pc":[2139]},{"teal":2293,"source":"contracts/BalancedPoolV2.algo.ts:378","pc":[2140,2141]},{"teal":2294,"source":"contracts/BalancedPoolV2.algo.ts:378","pc":[2142]},{"teal":2295,"source":"contracts/BalancedPoolV2.algo.ts:378","pc":[2143]},{"teal":2296,"source":"contracts/BalancedPoolV2.algo.ts:378","pc":[2144]},{"teal":2297,"source":"contracts/BalancedPoolV2.algo.ts:378","pc":[2145,2146]},{"teal":2298,"source":"contracts/BalancedPoolV2.algo.ts:378","pc":[2147]},{"teal":2299,"source":"contracts/BalancedPoolV2.algo.ts:378","pc":[2148]},{"teal":2300,"source":"contracts/BalancedPoolV2.algo.ts:378","pc":[2149]},{"teal":2301,"source":"contracts/BalancedPoolV2.algo.ts:378","pc":[2150]},{"teal":2302,"source":"contracts/BalancedPoolV2.algo.ts:378","pc":[2151,2152]},{"teal":2306,"source":"contracts/BalancedPoolV2.algo.ts:379","pc":[2153]},{"teal":2307,"source":"contracts/BalancedPoolV2.algo.ts:379","pc":[2154]},{"teal":2308,"source":"contracts/BalancedPoolV2.algo.ts:379","pc":[2155,2156,2157]},{"teal":2309,"source":"contracts/BalancedPoolV2.algo.ts:379","pc":[2158,2159]},{"teal":2310,"source":"contracts/BalancedPoolV2.algo.ts:379","pc":[2160]},{"teal":2311,"source":"contracts/BalancedPoolV2.algo.ts:379","pc":[2161,2162]},{"teal":2312,"source":"contracts/BalancedPoolV2.algo.ts:379","pc":[2163]},{"teal":2313,"source":"contracts/BalancedPoolV2.algo.ts:379","pc":[2164]},{"teal":2314,"source":"contracts/BalancedPoolV2.algo.ts:379","pc":[2165]},{"teal":2315,"source":"contracts/BalancedPoolV2.algo.ts:379","pc":[2166,2167]},{"teal":2316,"source":"contracts/BalancedPoolV2.algo.ts:379","pc":[2168]},{"teal":2317,"source":"contracts/BalancedPoolV2.algo.ts:379","pc":[2169]},{"teal":2318,"source":"contracts/BalancedPoolV2.algo.ts:379","pc":[2170]},{"teal":2319,"source":"contracts/BalancedPoolV2.algo.ts:379","pc":[2171]},{"teal":2320,"source":"contracts/BalancedPoolV2.algo.ts:379","pc":[2172,2173]},{"teal":2324,"source":"contracts/BalancedPoolV2.algo.ts:381","pc":[2174]},{"teal":2325,"source":"contracts/BalancedPoolV2.algo.ts:381","pc":[2175,2176]},{"teal":2326,"source":"contracts/BalancedPoolV2.algo.ts:381","pc":[2177]},{"teal":2327,"source":"contracts/BalancedPoolV2.algo.ts:381","pc":[2178]},{"teal":2328,"source":"contracts/BalancedPoolV2.algo.ts:381","pc":[2179]},{"teal":2331,"source":"contracts/BalancedPoolV2.algo.ts:381","errorMessage":"box value does not exist: this.balances(assetIn).value","pc":[2180]},{"teal":2332,"source":"contracts/BalancedPoolV2.algo.ts:381","pc":[2181]},{"teal":2333,"source":"contracts/BalancedPoolV2.algo.ts:381","pc":[2182,2183]},{"teal":2337,"source":"contracts/BalancedPoolV2.algo.ts:382","pc":[2184]},{"teal":2338,"source":"contracts/BalancedPoolV2.algo.ts:382","pc":[2185,2186]},{"teal":2339,"source":"contracts/BalancedPoolV2.algo.ts:382","pc":[2187]},{"teal":2340,"source":"contracts/BalancedPoolV2.algo.ts:382","pc":[2188]},{"teal":2341,"source":"contracts/BalancedPoolV2.algo.ts:382","pc":[2189]},{"teal":2344,"source":"contracts/BalancedPoolV2.algo.ts:382","errorMessage":"box value does not exist: this.balances(assetOut).value","pc":[2190]},{"teal":2345,"source":"contracts/BalancedPoolV2.algo.ts:382","pc":[2191]},{"teal":2346,"source":"contracts/BalancedPoolV2.algo.ts:382","pc":[2192,2193]},{"teal":2350,"source":"contracts/BalancedPoolV2.algo.ts:384","pc":[2194,2195]},{"teal":2351,"source":"contracts/BalancedPoolV2.algo.ts:384","pc":[2196,2197]},{"teal":2352,"source":"contracts/BalancedPoolV2.algo.ts:384","pc":[2198]},{"teal":2353,"source":"contracts/BalancedPoolV2.algo.ts:384","pc":[2199]},{"teal":2354,"source":"contracts/BalancedPoolV2.algo.ts:384","pc":[2200]},{"teal":2357,"source":"contracts/BalancedPoolV2.algo.ts:384","errorMessage":"box value does not exist: this.weights(from).value","pc":[2201]},{"teal":2358,"source":"contracts/BalancedPoolV2.algo.ts:384","pc":[2202]},{"teal":2359,"source":"contracts/BalancedPoolV2.algo.ts:384","pc":[2203,2204]},{"teal":2363,"source":"contracts/BalancedPoolV2.algo.ts:385","pc":[2205,2206]},{"teal":2364,"source":"contracts/BalancedPoolV2.algo.ts:385","pc":[2207,2208]},{"teal":2365,"source":"contracts/BalancedPoolV2.algo.ts:385","pc":[2209]},{"teal":2366,"source":"contracts/BalancedPoolV2.algo.ts:385","pc":[2210]},{"teal":2367,"source":"contracts/BalancedPoolV2.algo.ts:385","pc":[2211]},{"teal":2370,"source":"contracts/BalancedPoolV2.algo.ts:385","errorMessage":"box value does not exist: this.weights(to).value","pc":[2212]},{"teal":2371,"source":"contracts/BalancedPoolV2.algo.ts:385","pc":[2213]},{"teal":2372,"source":"contracts/BalancedPoolV2.algo.ts:385","pc":[2214,2215]},{"teal":2376,"source":"contracts/BalancedPoolV2.algo.ts:387","pc":[2216,2217]},{"teal":2377,"source":"contracts/BalancedPoolV2.algo.ts:387","pc":[2218,2219]},{"teal":2378,"source":"contracts/BalancedPoolV2.algo.ts:387","pc":[2220,2221]},{"teal":2379,"source":"contracts/BalancedPoolV2.algo.ts:387","pc":[2222,2223]},{"teal":2380,"source":"contracts/BalancedPoolV2.algo.ts:387","pc":[2224,2225]},{"teal":2381,"source":"contracts/BalancedPoolV2.algo.ts:387","pc":[2226,2227,2228]},{"teal":2384,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[2229,2230]},{"teal":2387,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[2231,2232]},{"teal":2388,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[2233]},{"teal":2391,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2234,2235]},{"teal":2392,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2236,2237,2238]},{"teal":2393,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2239,2240,2241,2242,2243,2244]},{"teal":2394,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2245,2246,2247]},{"teal":2395,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2248,2249,2250,2251]},{"teal":2398,"source":"contracts/BalancedPoolV2.algo.ts:7","errorMessage":"this contract does not implement the given ABI method for create NoOp","pc":[2252]},{"teal":2401,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2253,2254,2255,2256,2257,2258]},{"teal":2402,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2259,2260,2261,2262,2263,2264]},{"teal":2403,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2265,2266,2267,2268,2269,2270]},{"teal":2404,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2271,2272,2273,2274,2275,2276]},{"teal":2405,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2277,2278,2279,2280,2281,2282]},{"teal":2406,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2283,2284,2285,2286,2287,2288]},{"teal":2407,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2289,2290,2291,2292,2293,2294]},{"teal":2408,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2295,2296,2297,2298,2299,2300]},{"teal":2409,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2301,2302,2303,2304,2305,2306]},{"teal":2410,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2307,2308,2309]},{"teal":2411,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2310,2311,2312,2313,2314,2315,2316,2317,2318,2319,2320,2321,2322,2323,2324,2325,2326,2327,2328,2329]},{"teal":2414,"source":"contracts/BalancedPoolV2.algo.ts:7","errorMessage":"this contract does not implement the given ABI method for call NoOp","pc":[2330]},{"teal":2417,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2331,2332,2333]},{"teal":2418,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2334,2335,2336,2337,2338,2339,2340,2341,2342,2343,2344,2345]},{"teal":2419,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2346,2347]},{"teal":2420,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2348]},{"teal":2421,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2349]},{"teal":2422,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2350]},{"teal":2426,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2351,2352,2353]},{"teal":2427,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2354,2355]},{"teal":2428,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2356]},{"teal":2429,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2357]},{"teal":2430,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2358,2359,2360]},{"teal":2431,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2361,2362,2363]},{"teal":2432,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2364]},{"teal":2435,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2365,2366]},{"teal":2436,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2367,2368]},{"teal":2437,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2369]},{"teal":2438,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2370]},{"teal":2439,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2371]},{"teal":2440,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2372,2373,2374]},{"teal":2441,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2375,2376]},{"teal":2442,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2377,2378]},{"teal":2443,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2379]},{"teal":2444,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2380,2381,2382]},{"teal":2445,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2383,2384,2385]},{"teal":2448,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2386]},{"teal":2451,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2387,2388]},{"teal":2452,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2389,2390]},{"teal":2453,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2391]},{"teal":2454,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2392,2393,2394]},{"teal":2455,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2395]},{"teal":2456,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2396]}],"pcOffsetMethod":"none"},"clear":{"sourceInfo":[],"pcOffsetMethod":"none"}},"source":{"approval":"","clear":"I3ByYWdtYSB2ZXJzaW9uIDEw"},"byteCode":{"approval":"CiAKAAjAhD0BCgYEIAIFJgsACWJhbGFuY2VzXwZhc3NldHMJcHJvdmlkZWRfBXRva2VuCHdlaWdodHNfBBUffHUGYnVybmVkAwqBAQgAAAAAAAAAAAdtYW5hZ2VyMRgUIQULMRkIjQwITQAAAAAAAAAAAAAIOgAAAAAAAAAAAAAAiAACJUOKAAAnCjYyAHIHSGcnByJniScGNhoCVwIANhoBVwIAiAAFFlCwJUOKAgEoSYgEJIv/FSMKIQgPRIv/FSMKi/4VIwoSRCKMACKMAYsBi/8VIwoMQQBWi/81/yKLASMLCDT/TCNYF4gDMYv+Nf8iiwEjCwg0/0wjWBeL/zX/IosBIwsINP9MI1gXiwGIAzCLAIv+Nf8iiwEjCwg0/0wjWBcIjACLASUIjAFC/58qi/9JFSMKFlcGAkxQZySLAIgGgSUORIgDOCcEZIwARgGJNhoDSRUhBxJENhoCFzYaAReIAAIlQ4oDACiIA2mIA3EqZFcCADX/Iov/IwsINP9MI1gXjACADEFzc2V0IElEID0+IIsAFlCwiwCIAn8piwAWUL5EF4v+CCmLABZQTBa/K4v9UL1MSBRBABIri/1QKmRXAgAVIwolCCMLuUgri/1QvkRXAgA1/yKL/yMLCDT/TCuL/VC+RFcCADX/Iov/IwsINP9MI1gXi/4IFl0ri/1QSbxITEkVIwoWVwYCTFC/iScGNhoBSRUhBxJEiAAFFlCwJUOKAQEoSYgCqogCsiKMAIgFcyISQQAPgcCEPSEEIQWUC4wAQgAHi/+IBHuMACKMAYsBK4v/UL5EVwIAFSMKDEEAMyuL/1C+RFcCADX/IosBIwsINP9MJwldK4v/UEm8SExJFSMKFlcGAkxQv4sBJQiMAUL/u7EhBrIQi/+yFIsAshInBGSyESKyAbOLAIwARgGJNhoCFzYaAUkVIQcSRIgAAiVDigIAKEcFiAIGiAIOi/4iDUSIBM2MACpkVwIAFSMKjAEijAKLAosBDEEAWSpkVwIANf8iiwIjCwg0/0wjWBeMAymLAxZQvkQXjASL/osEHSKLAB9ISEwURIwFKYsDFlCLBIsFCRa/sSEGshCL/7IUiwWyEosDshEisgGziwIlCIwCQv+fJwdki/4IJwdMZ4knBjYaBBc2GgMXNhoCFzYaAUkVIQcSRIgABRZQsCVDigQBKEcGiAFYiAFgKmRXAgA1/yKL/iMLCDT/TCNYF4wAKmRXAgA1/yKL/SMLCDT/TCNYF4wBKYsAFlC+RBeMAimLARZQvkQXjAMnBYv+FlC+RBeMBCcFi/0WUL5EF4wFi/yLBYsDiwSLAogCbYwGiwYWsCmLABZQiwKL/AgWvymLARZQiwOLBgkWv7EhBrIQi/+yFIsGshKLAbIRIrIBs4sGjABGBomKAQAyCov/cABMSEEAAYmxIQayEDIKshSL/7IRIrISIrIBs4mKAwAnBYv/FlC9TEgUQQAJJwWL/xZQI7lIKYv+FlC9TEgUQQAIKYv+FlAjuUgnBYv/FlCL/Ra/KYv+FlAnCb+JigAAJwRkIhJBAEonBLGBA7IQIQSBEJSyIiEFsiMyCrIqMgqyKTIDsiwyA7IrIrIkgA1CYWxhbmNlZFBvb2wtNjIAiARnULImgAJMULIlIrIBs7Q8Z4mKAAAxACcKZBJEiYoAACcEZCITRImKAQEoRweL/yINRCKMAIv/JAxBACUljAAkSR0ii/8fSEhMFESMAosCJAkkHSKLAh9ISEwURIwBQgARi/8kCSQdIov/H0hITBREjAGLAYwDiwGMBCKMBbEhBbIQIrIBJwhJsh6yHyEJshmzIQiMBosGIQQOQQA/iwSLAR0iJB9ISEwURIwEIosEIosGH0hITBREjAeLBUEACIsDiwcJQgAFiwOLBwiMA4sFFIwFiwYlCIwGQv+5iwAWiwMWUIwARgeJigEBKEcCJIwAJIwBJYwCiwIhBA5BACKLAYv/HSKLAiQLH0hITBREjAGLAIsBCIwAiwIlCIwCQv/WiwCMAEYCiYoCAShHBIv/IhJBAAQiQgBNi/+I/umMAIsANf80/1cACBeMAYsANf80/1cICBeMAov+iwIdIiQfSEhMFESMA4sDiP98jASLASUSQQAPJEkdIosEH0hITBREQgACiwSMAEYEiYoFAShHA4v7gdj8PB0iJB9ISEwURIwAi/8kHSKL/4sACB9ISEwURIwBi/4kHSKL/B9ISEwURIwCiwKLAYj/XowDi/8WsIsAFrCLARawiwIWsIsDFrCL/SSLAwkdIiQfSEhMFEQWsIv9JIsDCR0iJB9ISEwURIwARgOJigEBKEcKKmRXAgAVIwqMAIsAJQ9EJIwBIowCiwKLACUJDEEAHbEhBbIQIrIBJwhJsh6yHyEJshmziwIlCIwCQv/ZIowDiwOLAAxBAHsqZFcCADX/IosDIwsINP9MI1gXjAQpiwQWUL5EF4wFK4v/UL5EVwIANf8iiwMjCwg0/0wjWBeMBicFiwMWUL5EF4wHiwUiDUSLBiQdIosFiwYJH0hITBREjAiLB4sIiP51jAmLAYsJHSIkH0hITBREjAGLAyUIjANC/32IABSMCosKiwEdIiQfSEhMFESMAEYKiYoAAScEZHEASCcEZHEISCcEZHAASAknB2QJiYoCAYv/i/4NQQAIi/+L/glCAAWL/ov/CYknBogABRZQsCVDigABKmRXAgAVIwqJJwaIAAUWULAlQ4oAAScEZIknBjYaAReIAAUWULAlQ4oBASgqZFcCADX/Iov/IwsINP9MI1gXjAApiwAWUL5EF4wAiScGNhoDFzYaAhc2GgEXiAAFFlCwJUOKAwEoRwUqZFcCADX/Iov/IwsINP9MI1gXjAAqZFcCADX/Iov+IwsINP9MI1gXjAEpiwAWUL5EF4wCKYsBFlC+RBeMAycFi/8WUL5EF4wEJwWL/hZQvkQXjAWL/YsFiwOLBIsCiP2djABGBYkxG0H3woAEuER7NjYaAI4B97UAgATmNf21gASr334VgAQqdABPgAQ/sdCbgASNMl4pgARxlCWegAQg61OUgARBMQrugAQpIAWDNhoAjgn3ffg5+Pr5nvo//sX+2/7s/x4AigEBgAowMTIzNDU2Nzg5i/8lWImKAQGL/yISQQAEgAEwiYv/IQQKIg1BAAuL/yEECoj/4EIAASiL/yEEGIj/wFCJ","clear":"Cg=="},"compilerInfo":{"compiler":"algod","compilerVersion":{"major":4,"minor":0,"patch":2,"commitHash":"6b940281"}}} as unknown as Arc56Contract

/**
 * A state record containing binary data
 */
export interface BinaryState {
  /**
   * Gets the state value as a Uint8Array
   */
  asByteArray(): Uint8Array | undefined
  /**
   * Gets the state value as a string
   */
  asString(): string | undefined
}

class BinaryStateValue implements BinaryState {
  constructor(private value: Uint8Array | undefined) {}

  asByteArray(): Uint8Array | undefined {
    return this.value
  }

  asString(): string | undefined {
    return this.value !== undefined ? Buffer.from(this.value).toString('utf-8') : undefined
  }
}

/**
 * Expands types for IntelliSense so they are more human readable
 * See https://stackoverflow.com/a/69288824
 */
export type Expand<T> = T extends (...args: infer A) => infer R
  ? (...args: Expand<A>) => Expand<R>
  : T extends infer O
    ? { [K in keyof O]: O[K] }
    : never


/**
 * The argument types for the BalancedPoolV2 contract
 */
export type BalancedPoolV2Args = {
  /**
   * The object representation of the arguments for each method
   */
  obj: {
    'createApplication()void': Record<string, never>
    'bootstrap(uint64[],uint64[])uint64': {
      /**
       * assets of the pool
       */
      assetIds: bigint[] | number[]
      /**
      * weights of the pool
      uint64 - LP Token created ID

       */
      weights: bigint[] | number[]
    }
    'addLiquidity(uint64,uint64,address)void': {
      /**
       * index of the token in the pool
       */
      index: bigint | number
      /**
       * amount of token sent
       */
      amount: bigint | number
      /**
       * the sender
       */
      sender: string
    }
    'getLiquidity(address)uint64': {
      /**
       * the sender
       */
      sender: string
    }
    'burnLiquidity(address,uint64)void': {
      sender: string
      amountLp: bigint | number
    }
    'swap(address,uint64,uint64,uint64)uint64': {
      sender: string
      from: bigint | number
      to: bigint | number
      amount: bigint | number
    }
    'getTotalAssets()uint64': Record<string, never>
    'getToken()uint64': Record<string, never>
    'getBalance(uint64)uint64': {
      index: bigint | number
    }
    'estimateSwap(uint64,uint64,uint64)uint64': {
      from: bigint | number
      to: bigint | number
      amount: bigint | number
    }
  }
  /**
   * The tuple representation of the arguments for each method
   */
  tuple: {
    'createApplication()void': []
    'bootstrap(uint64[],uint64[])uint64': [assetIds: bigint[] | number[], weights: bigint[] | number[]]
    'addLiquidity(uint64,uint64,address)void': [index: bigint | number, amount: bigint | number, sender: string]
    'getLiquidity(address)uint64': [sender: string]
    'burnLiquidity(address,uint64)void': [sender: string, amountLp: bigint | number]
    'swap(address,uint64,uint64,uint64)uint64': [sender: string, from: bigint | number, to: bigint | number, amount: bigint | number]
    'getTotalAssets()uint64': []
    'getToken()uint64': []
    'getBalance(uint64)uint64': [index: bigint | number]
    'estimateSwap(uint64,uint64,uint64)uint64': [from: bigint | number, to: bigint | number, amount: bigint | number]
  }
}

/**
 * The return type for each method
 */
export type BalancedPoolV2Returns = {
  'createApplication()void': void
  'bootstrap(uint64[],uint64[])uint64': bigint
  'addLiquidity(uint64,uint64,address)void': void
  'getLiquidity(address)uint64': bigint
  'burnLiquidity(address,uint64)void': void
  'swap(address,uint64,uint64,uint64)uint64': bigint
  'getTotalAssets()uint64': bigint
  'getToken()uint64': bigint
  'getBalance(uint64)uint64': bigint
  'estimateSwap(uint64,uint64,uint64)uint64': bigint
}

/**
 * Defines the types of available calls and state of the BalancedPoolV2 smart contract.
 */
export type BalancedPoolV2Types = {
  /**
   * Maps method signatures / names to their argument and return types.
   */
  methods:
    & Record<'createApplication()void' | 'createApplication', {
      argsObj: BalancedPoolV2Args['obj']['createApplication()void']
      argsTuple: BalancedPoolV2Args['tuple']['createApplication()void']
      returns: BalancedPoolV2Returns['createApplication()void']
    }>
    & Record<'bootstrap(uint64[],uint64[])uint64' | 'bootstrap', {
      argsObj: BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64']
      argsTuple: BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']
      returns: BalancedPoolV2Returns['bootstrap(uint64[],uint64[])uint64']
    }>
    & Record<'addLiquidity(uint64,uint64,address)void' | 'addLiquidity', {
      argsObj: BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void']
      argsTuple: BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']
      returns: BalancedPoolV2Returns['addLiquidity(uint64,uint64,address)void']
    }>
    & Record<'getLiquidity(address)uint64' | 'getLiquidity', {
      argsObj: BalancedPoolV2Args['obj']['getLiquidity(address)uint64']
      argsTuple: BalancedPoolV2Args['tuple']['getLiquidity(address)uint64']
      returns: BalancedPoolV2Returns['getLiquidity(address)uint64']
    }>
    & Record<'burnLiquidity(address,uint64)void' | 'burnLiquidity', {
      argsObj: BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void']
      argsTuple: BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']
      returns: BalancedPoolV2Returns['burnLiquidity(address,uint64)void']
    }>
    & Record<'swap(address,uint64,uint64,uint64)uint64' | 'swap', {
      argsObj: BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)uint64']
      argsTuple: BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)uint64']
      returns: BalancedPoolV2Returns['swap(address,uint64,uint64,uint64)uint64']
    }>
    & Record<'getTotalAssets()uint64' | 'getTotalAssets', {
      argsObj: BalancedPoolV2Args['obj']['getTotalAssets()uint64']
      argsTuple: BalancedPoolV2Args['tuple']['getTotalAssets()uint64']
      returns: BalancedPoolV2Returns['getTotalAssets()uint64']
    }>
    & Record<'getToken()uint64' | 'getToken', {
      argsObj: BalancedPoolV2Args['obj']['getToken()uint64']
      argsTuple: BalancedPoolV2Args['tuple']['getToken()uint64']
      returns: BalancedPoolV2Returns['getToken()uint64']
    }>
    & Record<'getBalance(uint64)uint64' | 'getBalance', {
      argsObj: BalancedPoolV2Args['obj']['getBalance(uint64)uint64']
      argsTuple: BalancedPoolV2Args['tuple']['getBalance(uint64)uint64']
      returns: BalancedPoolV2Returns['getBalance(uint64)uint64']
    }>
    & Record<'estimateSwap(uint64,uint64,uint64)uint64' | 'estimateSwap', {
      argsObj: BalancedPoolV2Args['obj']['estimateSwap(uint64,uint64,uint64)uint64']
      argsTuple: BalancedPoolV2Args['tuple']['estimateSwap(uint64,uint64,uint64)uint64']
      returns: BalancedPoolV2Returns['estimateSwap(uint64,uint64,uint64)uint64']
    }>
  /**
   * Defines the shape of the state of the application.
   */
  state: {
    global: {
      keys: {
        manager: string
        token: bigint
        burned: bigint
        assets: bigint[]
      }
      maps: {}
    }
    box: {
      keys: {}
      maps: {
        weights: Map<bigint | number, bigint>
        balances: Map<bigint | number, bigint>
        provided: Map<string, bigint[]>
      }
    }
  }
}

/**
 * Defines the possible abi call signatures.
 */
export type BalancedPoolV2Signatures = keyof BalancedPoolV2Types['methods']
/**
 * Defines the possible abi call signatures for methods that return a non-void value.
 */
export type BalancedPoolV2NonVoidMethodSignatures = keyof BalancedPoolV2Types['methods'] extends infer T ? T extends keyof BalancedPoolV2Types['methods'] ? MethodReturn<T> extends void ? never : T  : never : never
/**
 * Defines an object containing all relevant parameters for a single call to the contract.
 */
export type CallParams<TArgs> = Expand<
  Omit<AppClientMethodCallParams, 'method' | 'args' | 'onComplete'> &
    {
      /** The args for the ABI method call, either as an ordered array or an object */
      args: Expand<TArgs>
    }
>
/**
 * Maps a method signature from the BalancedPoolV2 smart contract to the method's arguments in either tuple or struct form
 */
export type MethodArgs<TSignature extends BalancedPoolV2Signatures> = BalancedPoolV2Types['methods'][TSignature]['argsObj' | 'argsTuple']
/**
 * Maps a method signature from the BalancedPoolV2 smart contract to the method's return type
 */
export type MethodReturn<TSignature extends BalancedPoolV2Signatures> = BalancedPoolV2Types['methods'][TSignature]['returns']

/**
 * Defines the shape of the keyed global state of the application.
 */
export type GlobalKeysState = BalancedPoolV2Types['state']['global']['keys']

/**
 * Defines the shape of the keyed box state of the application.
 */
export type BoxKeysState = BalancedPoolV2Types['state']['box']['keys']


/**
 * Defines supported create method params for this smart contract
 */
export type BalancedPoolV2CreateCallParams =
  | Expand<CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & {method: 'createApplication'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
  | Expand<CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & {method: 'createApplication()void'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
/**
 * Defines arguments required for the deploy method.
 */
export type BalancedPoolV2DeployParams = Expand<Omit<AppFactoryDeployParams, 'createParams' | 'updateParams' | 'deleteParams'> & {
  /**
   * Create transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  createParams?: BalancedPoolV2CreateCallParams
}>


/**
 * Exposes methods for constructing `AppClient` params objects for ABI calls to the BalancedPoolV2 smart contract
 */
export abstract class BalancedPoolV2ParamsFactory {
  /**
   * Gets available create ABI call param factories
   */
  static get create() {
    return {
      _resolveByMethod<TParams extends BalancedPoolV2CreateCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'createApplication':
          case 'createApplication()void':
            return BalancedPoolV2ParamsFactory.create.createApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs create ABI call params for the BalancedPoolV2 smart contract using the createApplication()void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      createApplication(params: CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC}): AppClientMethodCallParams & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC} {
        return {
          ...params,
          method: 'createApplication()void' as const,
          args: Array.isArray(params.args) ? params.args : [],
        }
      },
    }
  }

  /**
   * Constructs a no op call for the bootstrap(uint64[],uint64[])uint64 ABI method
   *
   * Bootstrap the pool by assigning assets and weights, create the LP tokens
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static bootstrap(params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'bootstrap(uint64[],uint64[])uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.assetIds, params.args.weights],
    }
  }
  /**
   * Constructs a no op call for the addLiquidity(uint64,uint64,address)void ABI method
   *
   * Provide one token liquidity to the pool
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static addLiquidity(params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'addLiquidity(uint64,uint64,address)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.index, params.args.amount, params.args.sender],
    }
  }
  /**
   * Constructs a no op call for the getLiquidity(address)uint64 ABI method
   *
  * Compute the liquidity for the given sender based on the state
  in the contract

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getLiquidity(params: CallParams<BalancedPoolV2Args['obj']['getLiquidity(address)uint64'] | BalancedPoolV2Args['tuple']['getLiquidity(address)uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getLiquidity(address)uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.sender],
    }
  }
  /**
   * Constructs a no op call for the burnLiquidity(address,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static burnLiquidity(params: CallParams<BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void'] | BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'burnLiquidity(address,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.sender, params.args.amountLp],
    }
  }
  /**
   * Constructs a no op call for the swap(address,uint64,uint64,uint64)uint64 ABI method
   *
   * Swap the token from for the token to
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static swap(params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'swap(address,uint64,uint64,uint64)uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.sender, params.args.from, params.args.to, params.args.amount],
    }
  }
  /**
   * Constructs a no op call for the getTotalAssets()uint64 ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getTotalAssets(params: CallParams<BalancedPoolV2Args['obj']['getTotalAssets()uint64'] | BalancedPoolV2Args['tuple']['getTotalAssets()uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getTotalAssets()uint64' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the getToken()uint64 ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getToken(params: CallParams<BalancedPoolV2Args['obj']['getToken()uint64'] | BalancedPoolV2Args['tuple']['getToken()uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getToken()uint64' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the getBalance(uint64)uint64 ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getBalance(params: CallParams<BalancedPoolV2Args['obj']['getBalance(uint64)uint64'] | BalancedPoolV2Args['tuple']['getBalance(uint64)uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getBalance(uint64)uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.index],
    }
  }
  /**
   * Constructs a no op call for the estimateSwap(uint64,uint64,uint64)uint64 ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static estimateSwap(params: CallParams<BalancedPoolV2Args['obj']['estimateSwap(uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['estimateSwap(uint64,uint64,uint64)uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'estimateSwap(uint64,uint64,uint64)uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.from, params.args.to, params.args.amount],
    }
  }
}

/**
 * A factory to create and deploy one or more instance of the BalancedPoolV2 smart contract and to create one or more app clients to interact with those (or other) app instances
 */
export class BalancedPoolV2Factory {
  /**
   * The underlying `AppFactory` for when you want to have more flexibility
   */
  public readonly appFactory: _AppFactory

  /**
   * Creates a new instance of `BalancedPoolV2Factory`
   *
   * @param params The parameters to initialise the app factory with
   */
  constructor(params: Omit<AppFactoryParams, 'appSpec'>) {
    this.appFactory = new _AppFactory({
      ...params,
      appSpec: APP_SPEC,
    })
  }
  
  /** The name of the app (from the ARC-32 / ARC-56 app spec or override). */
  public get appName() {
    return this.appFactory.appName
  }
  
  /** The ARC-56 app spec being used */
  get appSpec() {
    return APP_SPEC
  }
  
  /** A reference to the underlying `AlgorandClient` this app factory is using. */
  public get algorand(): AlgorandClientInterface {
    return this.appFactory.algorand
  }
  
  /**
   * Returns a new `AppClient` client for an app instance of the given ID.
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public getAppClientById(params: AppFactoryAppClientParams) {
    return new BalancedPoolV2Client(this.appFactory.getAppClientById(params))
  }
  
  /**
   * Returns a new `AppClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public async getAppClientByCreatorAndName(
    params: AppFactoryResolveAppClientByCreatorAndNameParams,
  ) {
    return new BalancedPoolV2Client(await this.appFactory.getAppClientByCreatorAndName(params))
  }

  /**
   * Idempotently deploys the BalancedPoolV2 smart contract.
   *
   * @param params The arguments for the contract calls and any additional parameters for the call
   * @returns The deployment result
   */
  public async deploy(params: BalancedPoolV2DeployParams = {}) {
    const result = await this.appFactory.deploy({
      ...params,
      createParams: params.createParams?.method ? BalancedPoolV2ParamsFactory.create._resolveByMethod(params.createParams) : params.createParams ? params.createParams as (BalancedPoolV2CreateCallParams & { args: Uint8Array[] }) : undefined,
    })
    return { result: result.result, appClient: new BalancedPoolV2Client(result.appClient) }
  }

  /**
   * Get parameters to create transactions (create and deploy related calls) for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the BalancedPoolV2 smart contract using the createApplication()void ABI method.
       *
       * createApplication method called at creation
       *
       * @param params The params for the smart contract call
       * @returns The create params
       */
      createApplication: (params: CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.params.create(BalancedPoolV2ParamsFactory.create.createApplication(params))
      },
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the BalancedPoolV2 smart contract using the createApplication()void ABI method.
       *
       * createApplication method called at creation
       *
       * @param params The params for the smart contract call
       * @returns The create transaction
       */
      createApplication: (params: CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.createTransaction.create(BalancedPoolV2ParamsFactory.create.createApplication(params))
      },
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the BalancedPoolV2 smart contract using an ABI method call using the createApplication()void ABI method.
       *
       * createApplication method called at creation
       *
       * @param params The params for the smart contract call
       * @returns The create result
       */
      createApplication: async (params: CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        const result = await this.appFactory.send.create(BalancedPoolV2ParamsFactory.create.createApplication(params))
        return { result: { ...result.result, return: result.result.return as unknown as (undefined | BalancedPoolV2Returns['createApplication()void']) }, appClient: new BalancedPoolV2Client(result.appClient) }
      },
    },

  }

}
/**
 * A client to make calls to the BalancedPoolV2 smart contract
 */
export class BalancedPoolV2Client {
  /**
   * The underlying `AppClient` for when you want to have more flexibility
   */
  public readonly appClient: _AppClient

  /**
   * Creates a new instance of `BalancedPoolV2Client`
   *
   * @param appClient An `AppClient` instance which has been created with the BalancedPoolV2 app spec
   */
  constructor(appClient: _AppClient)
  /**
   * Creates a new instance of `BalancedPoolV2Client`
   *
   * @param params The parameters to initialise the app client with
   */
  constructor(params: Omit<AppClientParams, 'appSpec'>)
  constructor(appClientOrParams: _AppClient | Omit<AppClientParams, 'appSpec'>) {
    this.appClient = appClientOrParams instanceof _AppClient ? appClientOrParams : new _AppClient({
      ...appClientOrParams,
      appSpec: APP_SPEC,
    })
  }
  
  /**
   * Checks for decode errors on the given return value and maps the return value to the return type for the given method
   * @returns The typed return value or undefined if there was no value
   */
  decodeReturnValue<TSignature extends BalancedPoolV2NonVoidMethodSignatures>(method: TSignature, returnValue: ABIReturn | undefined) {
    return returnValue !== undefined ? getArc56ReturnValue<MethodReturn<TSignature>>(returnValue, this.appClient.getABIMethod(method), APP_SPEC.structs) : undefined
  }
  
  /**
   * Returns a new `BalancedPoolV2Client` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   * @param params The parameters to create the app client
   */
  public static async fromCreatorAndName(params: Omit<ResolveAppClientByCreatorAndName, 'appSpec'>): Promise<BalancedPoolV2Client> {
    return new BalancedPoolV2Client(await _AppClient.fromCreatorAndName({...params, appSpec: APP_SPEC}))
  }
  
  /**
   * Returns an `BalancedPoolV2Client` instance for the current network based on
   * pre-determined network-specific app IDs specified in the ARC-56 app spec.
   *
   * If no IDs are in the app spec or the network isn't recognised, an error is thrown.
   * @param params The parameters to create the app client
   */
  static async fromNetwork(
    params: Omit<ResolveAppClientByNetwork, 'appSpec'>
  ): Promise<BalancedPoolV2Client> {
    return new BalancedPoolV2Client(await _AppClient.fromNetwork({...params, appSpec: APP_SPEC}))
  }
  
  /** The ID of the app instance this client is linked to. */
  public get appId() {
    return this.appClient.appId
  }
  
  /** The app address of the app instance this client is linked to. */
  public get appAddress() {
    return this.appClient.appAddress
  }
  
  /** The name of the app. */
  public get appName() {
    return this.appClient.appName
  }
  
  /** The ARC-56 app spec being used */
  public get appSpec() {
    return this.appClient.appSpec
  }
  
  /** A reference to the underlying `AlgorandClient` this app client is using. */
  public get algorand(): AlgorandClientInterface {
    return this.appClient.algorand
  }

  /**
   * Get parameters to create transactions for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Makes a clear_state call to an existing instance of the BalancedPoolV2 smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.params.bare.clearState(params)
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `bootstrap(uint64[],uint64[])uint64` ABI method.
     *
     * Bootstrap the pool by assigning assets and weights, create the LP tokens
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    bootstrap: (params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.bootstrap(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `addLiquidity(uint64,uint64,address)void` ABI method.
     *
     * Provide one token liquidity to the pool
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    addLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.addLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getLiquidity(address)uint64` ABI method.
     *
    * Compute the liquidity for the given sender based on the state
    in the contract

     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['getLiquidity(address)uint64'] | BalancedPoolV2Args['tuple']['getLiquidity(address)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.getLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `burnLiquidity(address,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    burnLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void'] | BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.burnLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `swap(address,uint64,uint64,uint64)uint64` ABI method.
     *
     * Swap the token from for the token to
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    swap: (params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.swap(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getTotalAssets()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getTotalAssets: (params: CallParams<BalancedPoolV2Args['obj']['getTotalAssets()uint64'] | BalancedPoolV2Args['tuple']['getTotalAssets()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.getTotalAssets(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getToken()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getToken: (params: CallParams<BalancedPoolV2Args['obj']['getToken()uint64'] | BalancedPoolV2Args['tuple']['getToken()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.getToken(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getBalance(uint64)uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getBalance: (params: CallParams<BalancedPoolV2Args['obj']['getBalance(uint64)uint64'] | BalancedPoolV2Args['tuple']['getBalance(uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.getBalance(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `estimateSwap(uint64,uint64,uint64)uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    estimateSwap: (params: CallParams<BalancedPoolV2Args['obj']['estimateSwap(uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['estimateSwap(uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.estimateSwap(params))
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Makes a clear_state call to an existing instance of the BalancedPoolV2 smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.createTransaction.bare.clearState(params)
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `bootstrap(uint64[],uint64[])uint64` ABI method.
     *
     * Bootstrap the pool by assigning assets and weights, create the LP tokens
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    bootstrap: (params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.bootstrap(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `addLiquidity(uint64,uint64,address)void` ABI method.
     *
     * Provide one token liquidity to the pool
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    addLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.addLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getLiquidity(address)uint64` ABI method.
     *
    * Compute the liquidity for the given sender based on the state
    in the contract

     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['getLiquidity(address)uint64'] | BalancedPoolV2Args['tuple']['getLiquidity(address)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.getLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `burnLiquidity(address,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    burnLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void'] | BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.burnLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `swap(address,uint64,uint64,uint64)uint64` ABI method.
     *
     * Swap the token from for the token to
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    swap: (params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.swap(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getTotalAssets()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getTotalAssets: (params: CallParams<BalancedPoolV2Args['obj']['getTotalAssets()uint64'] | BalancedPoolV2Args['tuple']['getTotalAssets()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.getTotalAssets(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getToken()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getToken: (params: CallParams<BalancedPoolV2Args['obj']['getToken()uint64'] | BalancedPoolV2Args['tuple']['getToken()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.getToken(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getBalance(uint64)uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getBalance: (params: CallParams<BalancedPoolV2Args['obj']['getBalance(uint64)uint64'] | BalancedPoolV2Args['tuple']['getBalance(uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.getBalance(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `estimateSwap(uint64,uint64,uint64)uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    estimateSwap: (params: CallParams<BalancedPoolV2Args['obj']['estimateSwap(uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['estimateSwap(uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.estimateSwap(params))
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Makes a clear_state call to an existing instance of the BalancedPoolV2 smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams & SendParams>) => {
      return this.appClient.send.bare.clearState(params)
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `bootstrap(uint64[],uint64[])uint64` ABI method.
     *
     * Bootstrap the pool by assigning assets and weights, create the LP tokens
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    bootstrap: async (params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.bootstrap(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['bootstrap(uint64[],uint64[])uint64'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `addLiquidity(uint64,uint64,address)void` ABI method.
     *
     * Provide one token liquidity to the pool
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    addLiquidity: async (params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.addLiquidity(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['addLiquidity(uint64,uint64,address)void'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getLiquidity(address)uint64` ABI method.
     *
    * Compute the liquidity for the given sender based on the state
    in the contract

     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getLiquidity: async (params: CallParams<BalancedPoolV2Args['obj']['getLiquidity(address)uint64'] | BalancedPoolV2Args['tuple']['getLiquidity(address)uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.getLiquidity(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['getLiquidity(address)uint64'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `burnLiquidity(address,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    burnLiquidity: async (params: CallParams<BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void'] | BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.burnLiquidity(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['burnLiquidity(address,uint64)void'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `swap(address,uint64,uint64,uint64)uint64` ABI method.
     *
     * Swap the token from for the token to
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    swap: async (params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.swap(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['swap(address,uint64,uint64,uint64)uint64'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getTotalAssets()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getTotalAssets: async (params: CallParams<BalancedPoolV2Args['obj']['getTotalAssets()uint64'] | BalancedPoolV2Args['tuple']['getTotalAssets()uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.getTotalAssets(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['getTotalAssets()uint64'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getToken()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getToken: async (params: CallParams<BalancedPoolV2Args['obj']['getToken()uint64'] | BalancedPoolV2Args['tuple']['getToken()uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.getToken(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['getToken()uint64'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getBalance(uint64)uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getBalance: async (params: CallParams<BalancedPoolV2Args['obj']['getBalance(uint64)uint64'] | BalancedPoolV2Args['tuple']['getBalance(uint64)uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.getBalance(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['getBalance(uint64)uint64'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `estimateSwap(uint64,uint64,uint64)uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    estimateSwap: async (params: CallParams<BalancedPoolV2Args['obj']['estimateSwap(uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['estimateSwap(uint64,uint64,uint64)uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.estimateSwap(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['estimateSwap(uint64,uint64,uint64)uint64'])}
    },

  }

  /**
   * Clone this app client with different params
   *
   * @param params The params to use for the the cloned app client. Omit a param to keep the original value. Set a param to override the original value. Setting to undefined will clear the original value.
   * @returns A new app client with the altered params
   */
  public clone(params: CloneAppClientParams) {
    return new BalancedPoolV2Client(this.appClient.clone(params))
  }

  /**
   * Makes a readonly (simulated) call to the BalancedPoolV2 smart contract using the `getTotalAssets()uint64` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * @param params The params for the smart contract call
   * @returns The call result
   */
  async getTotalAssets(params: CallParams<BalancedPoolV2Args['obj']['getTotalAssets()uint64'] | BalancedPoolV2Args['tuple']['getTotalAssets()uint64']> = {args: []}) {
    const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.getTotalAssets(params))
    return result.return as unknown as BalancedPoolV2Returns['getTotalAssets()uint64']
  }

  /**
   * Makes a readonly (simulated) call to the BalancedPoolV2 smart contract using the `getToken()uint64` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * @param params The params for the smart contract call
   * @returns The call result
   */
  async getToken(params: CallParams<BalancedPoolV2Args['obj']['getToken()uint64'] | BalancedPoolV2Args['tuple']['getToken()uint64']> = {args: []}) {
    const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.getToken(params))
    return result.return as unknown as BalancedPoolV2Returns['getToken()uint64']
  }

  /**
   * Makes a readonly (simulated) call to the BalancedPoolV2 smart contract using the `getBalance(uint64)uint64` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * @param params The params for the smart contract call
   * @returns The call result
   */
  async getBalance(params: CallParams<BalancedPoolV2Args['obj']['getBalance(uint64)uint64'] | BalancedPoolV2Args['tuple']['getBalance(uint64)uint64']>) {
    const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.getBalance(params))
    return result.return as unknown as BalancedPoolV2Returns['getBalance(uint64)uint64']
  }

  /**
   * Makes a readonly (simulated) call to the BalancedPoolV2 smart contract using the `estimateSwap(uint64,uint64,uint64)uint64` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * @param params The params for the smart contract call
   * @returns The call result
   */
  async estimateSwap(params: CallParams<BalancedPoolV2Args['obj']['estimateSwap(uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['estimateSwap(uint64,uint64,uint64)uint64']>) {
    const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.estimateSwap(params))
    return result.return as unknown as BalancedPoolV2Returns['estimateSwap(uint64,uint64,uint64)uint64']
  }

  /**
   * Methods to access state for the current BalancedPoolV2 app
   */
  state = {
    /**
     * Methods to access global state for the current BalancedPoolV2 app
     */
    global: {
      /**
       * Get all current keyed values from global state
       */
      getAll: async (): Promise<Partial<Expand<GlobalKeysState>>> => {
        const result = await this.appClient.state.global.getAll()
        return {
          manager: result.manager,
          token: result.token,
          burned: result.burned,
          assets: result.assets,
        }
      },
      /**
       * Get the current value of the manager key in global state
       */
      manager: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("manager")) as string | undefined },
      /**
       * Get the current value of the token key in global state
       */
      token: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("token")) as bigint | undefined },
      /**
       * Get the current value of the burned key in global state
       */
      burned: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("burned")) as bigint | undefined },
      /**
       * Get the current value of the assets key in global state
       */
      assets: async (): Promise<bigint[] | undefined> => { return (await this.appClient.state.global.getValue("assets")) as bigint[] | undefined },
    },
    /**
     * Methods to access box state for the current BalancedPoolV2 app
     */
    box: {
      /**
       * Get all current keyed values from box state
       */
      getAll: async (): Promise<Partial<Expand<BoxKeysState>>> => {
        const result = await this.appClient.state.box.getAll()
        return {
        }
      },
      /**
       * Get values from the weights map in box state
       */
      weights: {
        /**
         * Get all current values of the weights map in box state
         */
        getMap: async (): Promise<Map<bigint, bigint>> => { return (await this.appClient.state.box.getMap("weights")) as Map<bigint, bigint> },
        /**
         * Get a current value of the weights map by key from box state
         */
        value: async (key: bigint | number): Promise<bigint | undefined> => { return await this.appClient.state.box.getMapValue("weights", key) as bigint | undefined },
      },
      /**
       * Get values from the balances map in box state
       */
      balances: {
        /**
         * Get all current values of the balances map in box state
         */
        getMap: async (): Promise<Map<bigint, bigint>> => { return (await this.appClient.state.box.getMap("balances")) as Map<bigint, bigint> },
        /**
         * Get a current value of the balances map by key from box state
         */
        value: async (key: bigint | number): Promise<bigint | undefined> => { return await this.appClient.state.box.getMapValue("balances", key) as bigint | undefined },
      },
      /**
       * Get values from the provided map in box state
       */
      provided: {
        /**
         * Get all current values of the provided map in box state
         */
        getMap: async (): Promise<Map<string, bigint[]>> => { return (await this.appClient.state.box.getMap("provided")) as Map<string, bigint[]> },
        /**
         * Get a current value of the provided map by key from box state
         */
        value: async (key: string): Promise<bigint[] | undefined> => { return await this.appClient.state.box.getMapValue("provided", key) as bigint[] | undefined },
      },
    },
  }

  public newGroup(): BalancedPoolV2Composer {
    const client = this
    const composer = this.algorand.newGroup()
    let promiseChain:Promise<unknown> = Promise.resolve()
    const resultMappers: Array<undefined | ((x: ABIReturn | undefined) => any)> = []
    return {
      /**
       * Add a bootstrap(uint64[],uint64[])uint64 method call against the BalancedPoolV2 contract
       */
      bootstrap(params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.bootstrap(params)))
        resultMappers.push((v) => client.decodeReturnValue('bootstrap(uint64[],uint64[])uint64', v))
        return this
      },
      /**
       * Add a addLiquidity(uint64,uint64,address)void method call against the BalancedPoolV2 contract
       */
      addLiquidity(params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.addLiquidity(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a getLiquidity(address)uint64 method call against the BalancedPoolV2 contract
       */
      getLiquidity(params: CallParams<BalancedPoolV2Args['obj']['getLiquidity(address)uint64'] | BalancedPoolV2Args['tuple']['getLiquidity(address)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getLiquidity(params)))
        resultMappers.push((v) => client.decodeReturnValue('getLiquidity(address)uint64', v))
        return this
      },
      /**
       * Add a burnLiquidity(address,uint64)void method call against the BalancedPoolV2 contract
       */
      burnLiquidity(params: CallParams<BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void'] | BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.burnLiquidity(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a swap(address,uint64,uint64,uint64)uint64 method call against the BalancedPoolV2 contract
       */
      swap(params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.swap(params)))
        resultMappers.push((v) => client.decodeReturnValue('swap(address,uint64,uint64,uint64)uint64', v))
        return this
      },
      /**
       * Add a getTotalAssets()uint64 method call against the BalancedPoolV2 contract
       */
      getTotalAssets(params: CallParams<BalancedPoolV2Args['obj']['getTotalAssets()uint64'] | BalancedPoolV2Args['tuple']['getTotalAssets()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getTotalAssets(params)))
        resultMappers.push((v) => client.decodeReturnValue('getTotalAssets()uint64', v))
        return this
      },
      /**
       * Add a getToken()uint64 method call against the BalancedPoolV2 contract
       */
      getToken(params: CallParams<BalancedPoolV2Args['obj']['getToken()uint64'] | BalancedPoolV2Args['tuple']['getToken()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getToken(params)))
        resultMappers.push((v) => client.decodeReturnValue('getToken()uint64', v))
        return this
      },
      /**
       * Add a getBalance(uint64)uint64 method call against the BalancedPoolV2 contract
       */
      getBalance(params: CallParams<BalancedPoolV2Args['obj']['getBalance(uint64)uint64'] | BalancedPoolV2Args['tuple']['getBalance(uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getBalance(params)))
        resultMappers.push((v) => client.decodeReturnValue('getBalance(uint64)uint64', v))
        return this
      },
      /**
       * Add a estimateSwap(uint64,uint64,uint64)uint64 method call against the BalancedPoolV2 contract
       */
      estimateSwap(params: CallParams<BalancedPoolV2Args['obj']['estimateSwap(uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['estimateSwap(uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.estimateSwap(params)))
        resultMappers.push((v) => client.decodeReturnValue('estimateSwap(uint64,uint64,uint64)uint64', v))
        return this
      },
      /**
       * Add a clear state call to the BalancedPoolV2 contract
       */
      clearState(params: AppClientBareCallParams) {
        promiseChain = promiseChain.then(() => composer.addAppCall(client.params.clearState(params)))
        return this
      },
      addTransaction(txn: Transaction, signer?: TransactionSigner) {
        promiseChain = promiseChain.then(() => composer.addTransaction(txn, signer))
        return this
      },
      async composer() {
        await promiseChain
        return composer
      },
      async simulate(options?: SimulateOptions) {
        await promiseChain
        const result = await (!options ? composer.simulate() : composer.simulate(options))
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      },
      async send(params?: SendParams) {
        await promiseChain
        const result = await composer.send(params)
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      }
    } as unknown as BalancedPoolV2Composer
  }
}
export type BalancedPoolV2Composer<TReturns extends [...any[]] = []> = {
  /**
   * Calls the bootstrap(uint64[],uint64[])uint64 ABI method.
   *
   * Bootstrap the pool by assigning assets and weights, create the LP tokens
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  bootstrap(params?: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['bootstrap(uint64[],uint64[])uint64'] | undefined]>

  /**
   * Calls the addLiquidity(uint64,uint64,address)void ABI method.
   *
   * Provide one token liquidity to the pool
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  addLiquidity(params?: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['addLiquidity(uint64,uint64,address)void'] | undefined]>

  /**
   * Calls the getLiquidity(address)uint64 ABI method.
   *
  * Compute the liquidity for the given sender based on the state
  in the contract

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getLiquidity(params?: CallParams<BalancedPoolV2Args['obj']['getLiquidity(address)uint64'] | BalancedPoolV2Args['tuple']['getLiquidity(address)uint64']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['getLiquidity(address)uint64'] | undefined]>

  /**
   * Calls the burnLiquidity(address,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  burnLiquidity(params?: CallParams<BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void'] | BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['burnLiquidity(address,uint64)void'] | undefined]>

  /**
   * Calls the swap(address,uint64,uint64,uint64)uint64 ABI method.
   *
   * Swap the token from for the token to
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  swap(params?: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)uint64']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['swap(address,uint64,uint64,uint64)uint64'] | undefined]>

  /**
   * Calls the getTotalAssets()uint64 ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getTotalAssets(params?: CallParams<BalancedPoolV2Args['obj']['getTotalAssets()uint64'] | BalancedPoolV2Args['tuple']['getTotalAssets()uint64']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['getTotalAssets()uint64'] | undefined]>

  /**
   * Calls the getToken()uint64 ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getToken(params?: CallParams<BalancedPoolV2Args['obj']['getToken()uint64'] | BalancedPoolV2Args['tuple']['getToken()uint64']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['getToken()uint64'] | undefined]>

  /**
   * Calls the getBalance(uint64)uint64 ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getBalance(params?: CallParams<BalancedPoolV2Args['obj']['getBalance(uint64)uint64'] | BalancedPoolV2Args['tuple']['getBalance(uint64)uint64']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['getBalance(uint64)uint64'] | undefined]>

  /**
   * Calls the estimateSwap(uint64,uint64,uint64)uint64 ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  estimateSwap(params?: CallParams<BalancedPoolV2Args['obj']['estimateSwap(uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['estimateSwap(uint64,uint64,uint64)uint64']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['estimateSwap(uint64,uint64,uint64)uint64'] | undefined]>

  /**
   * Makes a clear_state call to an existing instance of the BalancedPoolV2 smart contract.
   *
   * @param args The arguments for the bare call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  clearState(params?: AppClientBareCallParams): BalancedPoolV2Composer<[...TReturns, undefined]>

  /**
   * Adds a transaction to the composer
   *
   * @param txn A transaction to add to the transaction group
   * @param signer The optional signer to use when signing this transaction.
   */
  addTransaction(txn: Transaction, signer?: TransactionSigner): BalancedPoolV2Composer<TReturns>
  /**
   * Returns the underlying AtomicTransactionComposer instance
   */
  composer(): Promise<TransactionComposer>
  /**
   * Simulates the transaction group and returns the result
   */
  simulate(): Promise<BalancedPoolV2ComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: SkipSignaturesSimulateOptions): Promise<BalancedPoolV2ComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: RawSimulateOptions): Promise<BalancedPoolV2ComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  /**
   * Sends the transaction group to the network and returns the results
   */
  send(params?: SendParams): Promise<BalancedPoolV2ComposerResults<TReturns>>
}
export type BalancedPoolV2ComposerResults<TReturns extends [...any[]]> = Expand<SendAtomicTransactionComposerResults & {
  returns: TReturns
}>

