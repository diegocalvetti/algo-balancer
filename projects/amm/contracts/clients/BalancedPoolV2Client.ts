/* eslint-disable */
/**
 * This file was automatically generated by @algorandfoundation/algokit-client-generator.
 * DO NOT MODIFY IT BY HAND.
 * requires: @algorandfoundation/algokit-utils: ^7
 */
import { AlgorandClientInterface } from '@algorandfoundation/algokit-utils/types/algorand-client-interface'
import { ABIReturn, AppReturn, SendAppTransactionResult } from '@algorandfoundation/algokit-utils/types/app'
import { Arc56Contract, getArc56ReturnValue, getABIStructFromABITuple } from '@algorandfoundation/algokit-utils/types/app-arc56'
import {
  AppClient as _AppClient,
  AppClientMethodCallParams,
  AppClientParams,
  AppClientBareCallParams,
  CallOnComplete,
  AppClientCompilationParams,
  ResolveAppClientByCreatorAndName,
  ResolveAppClientByNetwork,
  CloneAppClientParams,
} from '@algorandfoundation/algokit-utils/types/app-client'
import { AppFactory as _AppFactory, AppFactoryAppClientParams, AppFactoryResolveAppClientByCreatorAndNameParams, AppFactoryDeployParams, AppFactoryParams, CreateSchema } from '@algorandfoundation/algokit-utils/types/app-factory'
import { TransactionComposer, AppCallMethodCall, AppMethodCallTransactionArgument, SimulateOptions, RawSimulateOptions, SkipSignaturesSimulateOptions } from '@algorandfoundation/algokit-utils/types/composer'
import { SendParams, SendSingleTransactionResult, SendAtomicTransactionComposerResults } from '@algorandfoundation/algokit-utils/types/transaction'
import { Address, encodeAddress, modelsv2, OnApplicationComplete, Transaction, TransactionSigner } from 'algosdk'
import SimulateResponse = modelsv2.SimulateResponse

export const APP_SPEC: Arc56Contract = {"name":"BalancedPoolV2","desc":"","methods":[{"name":"createApplication","desc":"createApplication method called at creation","args":[],"returns":{"type":"void"},"actions":{"create":["NoOp"],"call":[]}},{"name":"bootstrap","desc":"Bootstrap the pool by assigning assets and weights, create the LP tokens","args":[{"name":"assetIds","type":"uint64[]","desc":"assets of the pool"},{"name":"weights","type":"uint64[]","desc":"weights of the pool\n uint64 - LP Token created ID"}],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"addLiquidity","desc":"Provide one token liquidity to the pool","args":[{"name":"index","type":"uint64","desc":"index of the token in the pool"},{"name":"amount","type":"uint64","desc":"amount of token sent"},{"name":"sender","type":"address","desc":"the sender"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"getLiquidity","desc":"Compute the liquidity for the given sender based on the state\nin the contract","args":[{"name":"sender","type":"address","desc":"the sender"}],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"burnLiquidity","args":[{"name":"sender","type":"address"},{"name":"amountLP","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"swap","desc":"Swap the token from for the token to","args":[{"name":"sender","type":"address"},{"name":"from","type":"uint64"},{"name":"to","type":"uint64"},{"name":"amount","type":"uint64"}],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"getToken","readonly":true,"args":[],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"getBalance","readonly":true,"args":[{"name":"index","type":"uint64"}],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"estimateSwap","readonly":true,"args":[{"name":"from","type":"uint64"},{"name":"to","type":"uint64"},{"name":"amount","type":"uint64"}],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}}],"arcs":[4,56],"structs":{},"state":{"schema":{"global":{"bytes":2,"ints":2},"local":{"bytes":0,"ints":0}},"keys":{"global":{"manager":{"key":"bWFuYWdlcg==","keyType":"AVMBytes","valueType":"address"},"token":{"key":"dG9rZW4=","keyType":"AVMBytes","valueType":"uint64"},"burned":{"key":"YnVybmVk","keyType":"AVMBytes","valueType":"uint64"},"assets":{"key":"YXNzZXRz","keyType":"AVMBytes","valueType":"uint64[]"}},"local":{},"box":{}},"maps":{"global":{},"local":{},"box":{"weights":{"keyType":"uint64","valueType":"uint64","prefix":"weights_"},"balances":{"keyType":"uint64","valueType":"uint64","prefix":"balances_"},"provided":{"keyType":"address","valueType":"uint64[]","prefix":"provided_"},"minRatios":{"keyType":"address","valueType":"uint64","prefix":"minratio_"}}}},"bareActions":{"create":[],"call":[]},"sourceInfo":{"approval":{"sourceInfo":[{"teal":1,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[0]},{"teal":2,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[1,2,3,4,5,6,7,8,9,10,11,12,13,14]},{"teal":3,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92]},{"teal":15,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[93,94]},{"teal":16,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[95]},{"teal":17,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[96,97]},{"teal":18,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[98]},{"teal":19,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[99,100]},{"teal":20,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[101]},{"teal":21,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127]},{"teal":25,"source":"contracts/BalancedPoolV2.algo.ts:7","errorMessage":"The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?","pc":[128]},{"teal":30,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[129,130,131]},{"teal":31,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[132]},{"teal":32,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[133]},{"teal":38,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[134,135,136]},{"teal":42,"source":"contracts/BalancedPoolV2.algo.ts:29","pc":[137,138]},{"teal":43,"source":"contracts/BalancedPoolV2.algo.ts:29","pc":[139,140,141]},{"teal":44,"source":"contracts/BalancedPoolV2.algo.ts:29","pc":[142,143]},{"teal":45,"source":"contracts/BalancedPoolV2.algo.ts:29","pc":[144]},{"teal":46,"source":"contracts/BalancedPoolV2.algo.ts:29","pc":[145]},{"teal":50,"source":"contracts/BalancedPoolV2.algo.ts:30","pc":[146,147]},{"teal":51,"source":"contracts/BalancedPoolV2.algo.ts:30","pc":[148]},{"teal":52,"source":"contracts/BalancedPoolV2.algo.ts:30","pc":[149]},{"teal":53,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[150]},{"teal":58,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[151,152]},{"teal":61,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[153,154,155]},{"teal":62,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[156,157,158]},{"teal":65,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[159,160,161]},{"teal":66,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[162,163,164]},{"teal":69,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[165,166,167]},{"teal":70,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[168]},{"teal":71,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[169]},{"teal":72,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[170]},{"teal":73,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[171]},{"teal":74,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[172]},{"teal":83,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[173,174,175]},{"teal":86,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[176]},{"teal":87,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[177]},{"teal":91,"source":"contracts/BalancedPoolV2.algo.ts:40","pc":[178,179,180]},{"teal":95,"source":"contracts/BalancedPoolV2.algo.ts:41","pc":[181,182]},{"teal":96,"source":"contracts/BalancedPoolV2.algo.ts:41","pc":[183]},{"teal":97,"source":"contracts/BalancedPoolV2.algo.ts:41","pc":[184]},{"teal":98,"source":"contracts/BalancedPoolV2.algo.ts:41","pc":[185]},{"teal":99,"source":"contracts/BalancedPoolV2.algo.ts:41","pc":[186,187]},{"teal":100,"source":"contracts/BalancedPoolV2.algo.ts:41","pc":[188]},{"teal":103,"source":"contracts/BalancedPoolV2.algo.ts:41","errorMessage":"At least 2 tokens needed","pc":[189]},{"teal":107,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[190,191]},{"teal":108,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[192]},{"teal":109,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[193]},{"teal":110,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[194]},{"teal":111,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[195,196]},{"teal":112,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[197]},{"teal":113,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[198]},{"teal":114,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[199]},{"teal":115,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[200]},{"teal":118,"source":"contracts/BalancedPoolV2.algo.ts:42","errorMessage":"Weights and Assets length must be the same","pc":[201]},{"teal":122,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[202]},{"teal":123,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[203,204]},{"teal":127,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[205]},{"teal":128,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[206,207]},{"teal":133,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[208,209]},{"teal":134,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[210,211]},{"teal":135,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[212]},{"teal":136,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[213]},{"teal":137,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[214]},{"teal":138,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[215]},{"teal":139,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[216,217,218]},{"teal":143,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[219,220]},{"teal":144,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[221,222]},{"teal":145,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[223]},{"teal":146,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[224,225]},{"teal":147,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[226]},{"teal":148,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[227]},{"teal":149,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[228]},{"teal":150,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[229,230]},{"teal":151,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[231]},{"teal":152,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[232]},{"teal":153,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[233]},{"teal":154,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[234]},{"teal":155,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[235,236,237]},{"teal":159,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[238,239]},{"teal":160,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[240,241]},{"teal":161,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[242]},{"teal":162,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[243,244]},{"teal":163,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[245]},{"teal":164,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[246]},{"teal":165,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[247]},{"teal":166,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[248,249]},{"teal":167,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[250]},{"teal":168,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[251]},{"teal":169,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[252]},{"teal":170,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[253]},{"teal":171,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[254,255]},{"teal":172,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[256,257]},{"teal":173,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[258]},{"teal":174,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[259,260]},{"teal":175,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[261]},{"teal":176,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[262]},{"teal":177,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[263]},{"teal":178,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[264,265]},{"teal":179,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[266]},{"teal":180,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[267]},{"teal":181,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[268]},{"teal":182,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[269]},{"teal":183,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[270,271]},{"teal":184,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[272,273,274]},{"teal":188,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[275,276]},{"teal":189,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[277,278]},{"teal":190,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[279,280]},{"teal":191,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[281]},{"teal":192,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[282,283]},{"teal":193,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[284]},{"teal":194,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[285]},{"teal":195,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[286]},{"teal":196,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[287,288]},{"teal":197,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[289]},{"teal":198,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[290]},{"teal":199,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[291]},{"teal":200,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[292]},{"teal":201,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[293]},{"teal":202,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[294,295]},{"teal":207,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[296,297]},{"teal":208,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[298]},{"teal":209,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[299]},{"teal":210,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[300,301]},{"teal":211,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[302,303,304]},{"teal":216,"source":"contracts/BalancedPoolV2.algo.ts:51","pc":[305]},{"teal":217,"source":"contracts/BalancedPoolV2.algo.ts:51","pc":[306,307]},{"teal":218,"source":"contracts/BalancedPoolV2.algo.ts:51","pc":[308]},{"teal":219,"source":"contracts/BalancedPoolV2.algo.ts:51","pc":[309]},{"teal":220,"source":"contracts/BalancedPoolV2.algo.ts:51","pc":[310]},{"teal":221,"source":"contracts/BalancedPoolV2.algo.ts:51","pc":[311]},{"teal":222,"source":"contracts/BalancedPoolV2.algo.ts:51","pc":[312]},{"teal":223,"source":"contracts/BalancedPoolV2.algo.ts:51","pc":[313,314,315]},{"teal":224,"source":"contracts/BalancedPoolV2.algo.ts:51","pc":[316]},{"teal":225,"source":"contracts/BalancedPoolV2.algo.ts:51","pc":[317]},{"teal":226,"source":"contracts/BalancedPoolV2.algo.ts:51","pc":[318]},{"teal":230,"source":"contracts/BalancedPoolV2.algo.ts:53","pc":[319]},{"teal":231,"source":"contracts/BalancedPoolV2.algo.ts:53","pc":[320,321]},{"teal":232,"source":"contracts/BalancedPoolV2.algo.ts:53","pc":[322,323,324]},{"teal":233,"source":"contracts/BalancedPoolV2.algo.ts:53","pc":[325]},{"teal":234,"source":"contracts/BalancedPoolV2.algo.ts:53","pc":[326]},{"teal":237,"source":"contracts/BalancedPoolV2.algo.ts:53","errorMessage":"Weights must sum to 1","pc":[327]},{"teal":241,"source":"contracts/BalancedPoolV2.algo.ts:54","pc":[328,329,330]},{"teal":245,"source":"contracts/BalancedPoolV2.algo.ts:56","pc":[331,332]},{"teal":246,"source":"contracts/BalancedPoolV2.algo.ts:56","pc":[333]},{"teal":249,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[334,335]},{"teal":252,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[336,337]},{"teal":253,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[338]},{"teal":258,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[339,340,341]},{"teal":259,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[342]},{"teal":260,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[343]},{"teal":261,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[344,345]},{"teal":262,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[346]},{"teal":265,"source":"contracts/BalancedPoolV2.algo.ts:65","errorMessage":"argument 0 (sender) for addLiquidity must be a address","pc":[347]},{"teal":268,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[348,349,350]},{"teal":269,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[351]},{"teal":272,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[352,353,354]},{"teal":273,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[355]},{"teal":276,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[356,357,358]},{"teal":277,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[359]},{"teal":278,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[360]},{"teal":287,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[361,362,363]},{"teal":290,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[364]},{"teal":294,"source":"contracts/BalancedPoolV2.algo.ts:66","pc":[365,366,367]},{"teal":298,"source":"contracts/BalancedPoolV2.algo.ts:67","pc":[368,369,370]},{"teal":302,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[371]},{"teal":303,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[372]},{"teal":304,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[373,374,375]},{"teal":305,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[376,377]},{"teal":306,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[378]},{"teal":307,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[379,380]},{"teal":308,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[381]},{"teal":309,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[382]},{"teal":310,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[383]},{"teal":311,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[384,385]},{"teal":312,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[386]},{"teal":313,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[387]},{"teal":314,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[388]},{"teal":315,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[389]},{"teal":316,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[390,391]},{"teal":320,"source":"contracts/BalancedPoolV2.algo.ts:70","pc":[392,393,394,395,396,397,398,399,400,401,402,403,404,405]},{"teal":321,"source":"contracts/BalancedPoolV2.algo.ts:70","pc":[406,407]},{"teal":322,"source":"contracts/BalancedPoolV2.algo.ts:70","pc":[408]},{"teal":323,"source":"contracts/BalancedPoolV2.algo.ts:70","pc":[409]},{"teal":324,"source":"contracts/BalancedPoolV2.algo.ts:70","pc":[410]},{"teal":328,"source":"contracts/BalancedPoolV2.algo.ts:72","pc":[411,412]},{"teal":329,"source":"contracts/BalancedPoolV2.algo.ts:72","pc":[413,414,415]},{"teal":333,"source":"contracts/BalancedPoolV2.algo.ts:73","pc":[416]},{"teal":334,"source":"contracts/BalancedPoolV2.algo.ts:73","pc":[417,418]},{"teal":335,"source":"contracts/BalancedPoolV2.algo.ts:73","pc":[419]},{"teal":336,"source":"contracts/BalancedPoolV2.algo.ts:73","pc":[420]},{"teal":337,"source":"contracts/BalancedPoolV2.algo.ts:73","pc":[421]},{"teal":340,"source":"contracts/BalancedPoolV2.algo.ts:73","errorMessage":"box value does not exist: this.balances(assetId).value","pc":[422]},{"teal":341,"source":"contracts/BalancedPoolV2.algo.ts:73","pc":[423]},{"teal":342,"source":"contracts/BalancedPoolV2.algo.ts:73","pc":[424,425]},{"teal":343,"source":"contracts/BalancedPoolV2.algo.ts:73","pc":[426]},{"teal":344,"source":"contracts/BalancedPoolV2.algo.ts:73","pc":[427]},{"teal":345,"source":"contracts/BalancedPoolV2.algo.ts:73","pc":[428,429]},{"teal":346,"source":"contracts/BalancedPoolV2.algo.ts:73","pc":[430]},{"teal":347,"source":"contracts/BalancedPoolV2.algo.ts:73","pc":[431]},{"teal":348,"source":"contracts/BalancedPoolV2.algo.ts:73","pc":[432]},{"teal":349,"source":"contracts/BalancedPoolV2.algo.ts:73","pc":[433]},{"teal":350,"source":"contracts/BalancedPoolV2.algo.ts:73","pc":[434]},{"teal":355,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[435]},{"teal":356,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[436,437]},{"teal":357,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[438]},{"teal":358,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[439]},{"teal":359,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[440]},{"teal":360,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[441]},{"teal":361,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[442]},{"teal":362,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[443,444,445]},{"teal":367,"source":"contracts/BalancedPoolV2.algo.ts:76","pc":[446]},{"teal":368,"source":"contracts/BalancedPoolV2.algo.ts:76","pc":[447,448]},{"teal":369,"source":"contracts/BalancedPoolV2.algo.ts:76","pc":[449]},{"teal":370,"source":"contracts/BalancedPoolV2.algo.ts:76","pc":[450,451]},{"teal":371,"source":"contracts/BalancedPoolV2.algo.ts:76","pc":[452]},{"teal":372,"source":"contracts/BalancedPoolV2.algo.ts:76","pc":[453]},{"teal":377,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[454]},{"teal":378,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[455,456]},{"teal":379,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[457]},{"teal":380,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[458]},{"teal":383,"source":"contracts/BalancedPoolV2.algo.ts:79","errorMessage":"box value does not exist: this.provided(sender).value","pc":[459]},{"teal":384,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[460,461,462]},{"teal":385,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[463,464]},{"teal":386,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[465]},{"teal":387,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[466,467]},{"teal":388,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[468]},{"teal":389,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[469]},{"teal":390,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[470]},{"teal":391,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[471,472]},{"teal":392,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[473]},{"teal":393,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[474]},{"teal":394,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[475,476]},{"teal":395,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[477]},{"teal":396,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[478]},{"teal":399,"source":"contracts/BalancedPoolV2.algo.ts:79","errorMessage":"box value does not exist: this.provided(sender).value","pc":[479]},{"teal":400,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[480,481,482]},{"teal":401,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[483,484]},{"teal":402,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[485]},{"teal":403,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[486,487]},{"teal":404,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[488]},{"teal":405,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[489]},{"teal":406,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[490]},{"teal":407,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[491,492]},{"teal":408,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[493]},{"teal":409,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[494]},{"teal":410,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[495]},{"teal":411,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[496]},{"teal":412,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[497,498]},{"teal":413,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[499]},{"teal":414,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[500]},{"teal":415,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[501]},{"teal":416,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[502]},{"teal":417,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[503,504]},{"teal":418,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[505]},{"teal":419,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[506]},{"teal":420,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[507]},{"teal":421,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[508]},{"teal":422,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[509]},{"teal":423,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[510]},{"teal":424,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[511]},{"teal":425,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[512]},{"teal":426,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[513]},{"teal":427,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[514]},{"teal":428,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[515,516,517]},{"teal":429,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[518]},{"teal":430,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[519]},{"teal":431,"source":"contracts/BalancedPoolV2.algo.ts:79","pc":[520]},{"teal":432,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[521]},{"teal":437,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[522,523]},{"teal":440,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[524,525,526]},{"teal":441,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[527]},{"teal":442,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[528]},{"teal":443,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[529,530]},{"teal":444,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[531]},{"teal":447,"source":"contracts/BalancedPoolV2.algo.ts:105","errorMessage":"argument 0 (sender) for getLiquidity must be a address","pc":[532]},{"teal":450,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[533,534,535]},{"teal":451,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[536]},{"teal":452,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[537]},{"teal":453,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[538]},{"teal":454,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[539]},{"teal":455,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[540]},{"teal":463,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[541,542,543]},{"teal":466,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[544]},{"teal":467,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[545,546]},{"teal":471,"source":"contracts/BalancedPoolV2.algo.ts:106","pc":[547,548,549]},{"teal":475,"source":"contracts/BalancedPoolV2.algo.ts:107","pc":[550,551,552]},{"teal":479,"source":"contracts/BalancedPoolV2.algo.ts:109","pc":[553]},{"teal":480,"source":"contracts/BalancedPoolV2.algo.ts:109","pc":[554,555]},{"teal":481,"source":"contracts/BalancedPoolV2.algo.ts:109","pc":[556]},{"teal":482,"source":"contracts/BalancedPoolV2.algo.ts:109","pc":[557,558]},{"teal":486,"source":"contracts/BalancedPoolV2.algo.ts:110","pc":[559]},{"teal":487,"source":"contracts/BalancedPoolV2.algo.ts:110","pc":[560,561]},{"teal":491,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[562]},{"teal":492,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[563,564]},{"teal":497,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[565,566]},{"teal":498,"source":"contracts/BalancedPoolV2.algo.ts:109","pc":[567,568]},{"teal":499,"source":"contracts/BalancedPoolV2.algo.ts:109","pc":[569]},{"teal":502,"source":"contracts/BalancedPoolV2.algo.ts:109","errorMessage":"box value does not exist: this.provided(sender).value","pc":[570]},{"teal":503,"source":"contracts/BalancedPoolV2.algo.ts:109","pc":[571,572,573]},{"teal":504,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[574]},{"teal":505,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[575]},{"teal":506,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[576]},{"teal":507,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[577]},{"teal":508,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[578,579,580]},{"teal":513,"source":"contracts/BalancedPoolV2.algo.ts:109","pc":[581,582]},{"teal":514,"source":"contracts/BalancedPoolV2.algo.ts:109","pc":[583]},{"teal":517,"source":"contracts/BalancedPoolV2.algo.ts:109","errorMessage":"box value does not exist: this.provided(sender).value","pc":[584]},{"teal":518,"source":"contracts/BalancedPoolV2.algo.ts:109","pc":[585,586,587]},{"teal":519,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[588,589]},{"teal":520,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[590]},{"teal":521,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[591,592]},{"teal":522,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[593]},{"teal":523,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[594]},{"teal":524,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[595]},{"teal":525,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[596,597]},{"teal":526,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[598]},{"teal":527,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[599]},{"teal":528,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[600]},{"teal":529,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[601]},{"teal":530,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[602]},{"teal":531,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[603]},{"teal":532,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[604,605,606]},{"teal":537,"source":"contracts/BalancedPoolV2.algo.ts:113","pc":[607,608]},{"teal":538,"source":"contracts/BalancedPoolV2.algo.ts:113","pc":[609]},{"teal":539,"source":"contracts/BalancedPoolV2.algo.ts:113","pc":[610]},{"teal":540,"source":"contracts/BalancedPoolV2.algo.ts:113","pc":[611,612]},{"teal":547,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[613,614]},{"teal":548,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[615]},{"teal":549,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[616]},{"teal":550,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[617,618]},{"teal":551,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[619,620,621]},{"teal":556,"source":"contracts/BalancedPoolV2.algo.ts:117","pc":[622]},{"teal":557,"source":"contracts/BalancedPoolV2.algo.ts:117","pc":[623,624]},{"teal":562,"source":"contracts/BalancedPoolV2.algo.ts:119","pc":[625,626,627]},{"teal":563,"source":"contracts/BalancedPoolV2.algo.ts:119","pc":[628]},{"teal":564,"source":"contracts/BalancedPoolV2.algo.ts:119","pc":[629]},{"teal":565,"source":"contracts/BalancedPoolV2.algo.ts:119","pc":[630,631,632]},{"teal":570,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[633,634,635,636]},{"teal":571,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[637,638]},{"teal":572,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[639,640]},{"teal":573,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[641]},{"teal":574,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[642]},{"teal":575,"source":"contracts/BalancedPoolV2.algo.ts:121","pc":[643,644]},{"teal":576,"source":"contracts/BalancedPoolV2.algo.ts:119","pc":[645,646,647]},{"teal":581,"source":"contracts/BalancedPoolV2.algo.ts:123","pc":[648,649]},{"teal":582,"source":"contracts/BalancedPoolV2.algo.ts:123","pc":[650,651,652]},{"teal":583,"source":"contracts/BalancedPoolV2.algo.ts:123","pc":[653,654]},{"teal":588,"source":"contracts/BalancedPoolV2.algo.ts:139","pc":[655]},{"teal":589,"source":"contracts/BalancedPoolV2.algo.ts:139","pc":[656,657]},{"teal":594,"source":"contracts/BalancedPoolV2.algo.ts:139","pc":[658,659]},{"teal":595,"source":"contracts/BalancedPoolV2.algo.ts:139","pc":[660]},{"teal":596,"source":"contracts/BalancedPoolV2.algo.ts:139","pc":[661,662]},{"teal":597,"source":"contracts/BalancedPoolV2.algo.ts:139","pc":[663]},{"teal":598,"source":"contracts/BalancedPoolV2.algo.ts:139","pc":[664]},{"teal":601,"source":"contracts/BalancedPoolV2.algo.ts:139","errorMessage":"box value does not exist: this.provided(sender).value","pc":[665]},{"teal":602,"source":"contracts/BalancedPoolV2.algo.ts:139","pc":[666,667,668]},{"teal":603,"source":"contracts/BalancedPoolV2.algo.ts:139","pc":[669]},{"teal":604,"source":"contracts/BalancedPoolV2.algo.ts:139","pc":[670]},{"teal":605,"source":"contracts/BalancedPoolV2.algo.ts:139","pc":[671]},{"teal":606,"source":"contracts/BalancedPoolV2.algo.ts:139","pc":[672]},{"teal":607,"source":"contracts/BalancedPoolV2.algo.ts:139","pc":[673,674,675]},{"teal":611,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[676]},{"teal":612,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[677,678]},{"teal":613,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[679]},{"teal":614,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[680]},{"teal":617,"source":"contracts/BalancedPoolV2.algo.ts:140","errorMessage":"box value does not exist: this.provided(sender).value","pc":[681]},{"teal":618,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[682,683,684]},{"teal":619,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[685,686]},{"teal":620,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[687]},{"teal":621,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[688,689]},{"teal":622,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[690]},{"teal":623,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[691]},{"teal":624,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[692]},{"teal":625,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[693,694]},{"teal":626,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[695]},{"teal":627,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[696,697]},{"teal":628,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[698]},{"teal":629,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[699]},{"teal":630,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[700,701]},{"teal":631,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[702]},{"teal":632,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[703]},{"teal":633,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[704]},{"teal":634,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[705]},{"teal":635,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[706]},{"teal":636,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[707]},{"teal":637,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[708]},{"teal":638,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[709]},{"teal":639,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[710]},{"teal":640,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[711]},{"teal":641,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[712,713,714]},{"teal":642,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[715]},{"teal":643,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[716]},{"teal":644,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[717]},{"teal":649,"source":"contracts/BalancedPoolV2.algo.ts:139","pc":[718,719]},{"teal":650,"source":"contracts/BalancedPoolV2.algo.ts:139","pc":[720]},{"teal":651,"source":"contracts/BalancedPoolV2.algo.ts:139","pc":[721]},{"teal":652,"source":"contracts/BalancedPoolV2.algo.ts:139","pc":[722,723]},{"teal":653,"source":"contracts/BalancedPoolV2.algo.ts:139","pc":[724,725,726]},{"teal":662,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[727]},{"teal":663,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[728,729]},{"teal":664,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[730,731]},{"teal":668,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[732,733]},{"teal":669,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[734,735]},{"teal":673,"source":"contracts/BalancedPoolV2.algo.ts:145","pc":[736,737]},{"teal":674,"source":"contracts/BalancedPoolV2.algo.ts:145","pc":[738,739]},{"teal":678,"source":"contracts/BalancedPoolV2.algo.ts:146","pc":[740,741]},{"teal":679,"source":"contracts/BalancedPoolV2.algo.ts:146","pc":[742]},{"teal":680,"source":"contracts/BalancedPoolV2.algo.ts:146","pc":[743,744]},{"teal":683,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[745]},{"teal":684,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[746,747]},{"teal":687,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[748]},{"teal":691,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[749,750]},{"teal":694,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[751,752]},{"teal":697,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[753,754]},{"teal":698,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[755]},{"teal":703,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[756,757,758]},{"teal":704,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[759]},{"teal":707,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[760,761,762]},{"teal":708,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[763]},{"teal":709,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[764]},{"teal":710,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[765,766]},{"teal":711,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[767]},{"teal":714,"source":"contracts/BalancedPoolV2.algo.ts:152","errorMessage":"argument 1 (sender) for burnLiquidity must be a address","pc":[768]},{"teal":717,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[769,770,771]},{"teal":718,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[772]},{"teal":719,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[773]},{"teal":723,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[774,775,776]},{"teal":726,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[777]},{"teal":727,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[778,779]},{"teal":731,"source":"contracts/BalancedPoolV2.algo.ts:153","pc":[780,781,782]},{"teal":735,"source":"contracts/BalancedPoolV2.algo.ts:154","pc":[783,784,785]},{"teal":739,"source":"contracts/BalancedPoolV2.algo.ts:155","pc":[786,787]},{"teal":740,"source":"contracts/BalancedPoolV2.algo.ts:155","pc":[788]},{"teal":741,"source":"contracts/BalancedPoolV2.algo.ts:155","pc":[789]},{"teal":744,"source":"contracts/BalancedPoolV2.algo.ts:155","errorMessage":"Must burn positive amount","pc":[790]},{"teal":748,"source":"contracts/BalancedPoolV2.algo.ts:157","pc":[791,792,793]},{"teal":749,"source":"contracts/BalancedPoolV2.algo.ts:157","pc":[794,795]},{"teal":753,"source":"contracts/BalancedPoolV2.algo.ts:158","pc":[796]},{"teal":754,"source":"contracts/BalancedPoolV2.algo.ts:158","pc":[797]},{"teal":755,"source":"contracts/BalancedPoolV2.algo.ts:158","pc":[798,799,800]},{"teal":756,"source":"contracts/BalancedPoolV2.algo.ts:158","pc":[801]},{"teal":757,"source":"contracts/BalancedPoolV2.algo.ts:158","pc":[802]},{"teal":758,"source":"contracts/BalancedPoolV2.algo.ts:158","pc":[803]},{"teal":759,"source":"contracts/BalancedPoolV2.algo.ts:158","pc":[804,805]},{"teal":763,"source":"contracts/BalancedPoolV2.algo.ts:160","pc":[806]},{"teal":764,"source":"contracts/BalancedPoolV2.algo.ts:160","pc":[807,808]},{"teal":769,"source":"contracts/BalancedPoolV2.algo.ts:160","pc":[809,810]},{"teal":770,"source":"contracts/BalancedPoolV2.algo.ts:160","pc":[811,812]},{"teal":771,"source":"contracts/BalancedPoolV2.algo.ts:160","pc":[813]},{"teal":772,"source":"contracts/BalancedPoolV2.algo.ts:160","pc":[814,815,816]},{"teal":776,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[817]},{"teal":777,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[818]},{"teal":778,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[819,820,821]},{"teal":779,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[822,823]},{"teal":780,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[824]},{"teal":781,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[825,826]},{"teal":782,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[827]},{"teal":783,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[828]},{"teal":784,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[829]},{"teal":785,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[830,831]},{"teal":786,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[832]},{"teal":787,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[833]},{"teal":788,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[834]},{"teal":789,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[835]},{"teal":790,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[836,837]},{"teal":794,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[838]},{"teal":795,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[839,840]},{"teal":796,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[841]},{"teal":797,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[842]},{"teal":798,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[843]},{"teal":801,"source":"contracts/BalancedPoolV2.algo.ts:162","errorMessage":"box value does not exist: this.balances(assetId).value","pc":[844]},{"teal":802,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[845]},{"teal":803,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[846,847]},{"teal":807,"source":"contracts/BalancedPoolV2.algo.ts:164","pc":[848,849]},{"teal":808,"source":"contracts/BalancedPoolV2.algo.ts:164","pc":[850,851]},{"teal":809,"source":"contracts/BalancedPoolV2.algo.ts:164","pc":[852]},{"teal":810,"source":"contracts/BalancedPoolV2.algo.ts:164","pc":[853]},{"teal":811,"source":"contracts/BalancedPoolV2.algo.ts:164","pc":[854,855]},{"teal":812,"source":"contracts/BalancedPoolV2.algo.ts:164","pc":[856]},{"teal":813,"source":"contracts/BalancedPoolV2.algo.ts:164","pc":[857]},{"teal":814,"source":"contracts/BalancedPoolV2.algo.ts:164","pc":[858]},{"teal":815,"source":"contracts/BalancedPoolV2.algo.ts:164","pc":[859]},{"teal":816,"source":"contracts/BalancedPoolV2.algo.ts:164","pc":[860]},{"teal":819,"source":"contracts/BalancedPoolV2.algo.ts:164","errorMessage":"wideRatio failed","pc":[861]},{"teal":820,"source":"contracts/BalancedPoolV2.algo.ts:164","pc":[862,863]},{"teal":824,"source":"contracts/BalancedPoolV2.algo.ts:166","pc":[864]},{"teal":825,"source":"contracts/BalancedPoolV2.algo.ts:166","pc":[865,866]},{"teal":826,"source":"contracts/BalancedPoolV2.algo.ts:166","pc":[867]},{"teal":827,"source":"contracts/BalancedPoolV2.algo.ts:166","pc":[868]},{"teal":828,"source":"contracts/BalancedPoolV2.algo.ts:166","pc":[869,870]},{"teal":829,"source":"contracts/BalancedPoolV2.algo.ts:166","pc":[871,872]},{"teal":830,"source":"contracts/BalancedPoolV2.algo.ts:166","pc":[873]},{"teal":831,"source":"contracts/BalancedPoolV2.algo.ts:166","pc":[874]},{"teal":832,"source":"contracts/BalancedPoolV2.algo.ts:166","pc":[875]},{"teal":840,"source":"contracts/BalancedPoolV2.algo.ts:168","pc":[876]},{"teal":841,"source":"contracts/BalancedPoolV2.algo.ts:168","pc":[877,878]},{"teal":842,"source":"contracts/BalancedPoolV2.algo.ts:168","pc":[879,880]},{"teal":846,"source":"contracts/BalancedPoolV2.algo.ts:169","pc":[881,882]},{"teal":847,"source":"contracts/BalancedPoolV2.algo.ts:169","pc":[883,884]},{"teal":851,"source":"contracts/BalancedPoolV2.algo.ts:170","pc":[885,886]},{"teal":852,"source":"contracts/BalancedPoolV2.algo.ts:170","pc":[887,888]},{"teal":856,"source":"contracts/BalancedPoolV2.algo.ts:171","pc":[889,890]},{"teal":857,"source":"contracts/BalancedPoolV2.algo.ts:171","pc":[891,892]},{"teal":860,"source":"contracts/BalancedPoolV2.algo.ts:168","pc":[893]},{"teal":861,"source":"contracts/BalancedPoolV2.algo.ts:168","pc":[894,895]},{"teal":864,"source":"contracts/BalancedPoolV2.algo.ts:168","pc":[896]},{"teal":869,"source":"contracts/BalancedPoolV2.algo.ts:160","pc":[897,898]},{"teal":870,"source":"contracts/BalancedPoolV2.algo.ts:160","pc":[899]},{"teal":871,"source":"contracts/BalancedPoolV2.algo.ts:160","pc":[900]},{"teal":872,"source":"contracts/BalancedPoolV2.algo.ts:160","pc":[901,902]},{"teal":873,"source":"contracts/BalancedPoolV2.algo.ts:160","pc":[903,904,905]},{"teal":878,"source":"contracts/BalancedPoolV2.algo.ts:175","pc":[906,907]},{"teal":879,"source":"contracts/BalancedPoolV2.algo.ts:175","pc":[908]},{"teal":880,"source":"contracts/BalancedPoolV2.algo.ts:175","pc":[909,910]},{"teal":881,"source":"contracts/BalancedPoolV2.algo.ts:175","pc":[911]},{"teal":882,"source":"contracts/BalancedPoolV2.algo.ts:175","pc":[912,913]},{"teal":883,"source":"contracts/BalancedPoolV2.algo.ts:175","pc":[914]},{"teal":884,"source":"contracts/BalancedPoolV2.algo.ts:175","pc":[915]},{"teal":885,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[916]},{"teal":890,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[917,918]},{"teal":893,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[919,920,921]},{"teal":894,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[922]},{"teal":897,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[923,924,925]},{"teal":898,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[926]},{"teal":901,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[927,928,929]},{"teal":902,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[930]},{"teal":905,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[931,932,933]},{"teal":906,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[934]},{"teal":907,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[935]},{"teal":908,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[936,937]},{"teal":909,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[938]},{"teal":912,"source":"contracts/BalancedPoolV2.algo.ts:185","errorMessage":"argument 3 (sender) for swap must be a address","pc":[939]},{"teal":915,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[940,941,942]},{"teal":916,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[943]},{"teal":917,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[944]},{"teal":918,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[945]},{"teal":919,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[946]},{"teal":920,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[947]},{"teal":930,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[948,949,950]},{"teal":933,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[951]},{"teal":934,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[952,953]},{"teal":938,"source":"contracts/BalancedPoolV2.algo.ts:186","pc":[954,955,956]},{"teal":942,"source":"contracts/BalancedPoolV2.algo.ts:187","pc":[957,958,959]},{"teal":946,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[960]},{"teal":947,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[961]},{"teal":948,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[962,963,964]},{"teal":949,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[965,966]},{"teal":950,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[967]},{"teal":951,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[968,969]},{"teal":952,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[970]},{"teal":953,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[971]},{"teal":954,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[972]},{"teal":955,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[973,974]},{"teal":956,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[975]},{"teal":957,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[976]},{"teal":958,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[977]},{"teal":959,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[978]},{"teal":960,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[979,980]},{"teal":964,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[981]},{"teal":965,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[982]},{"teal":966,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[983,984,985]},{"teal":967,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[986,987]},{"teal":968,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[988]},{"teal":969,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[989,990]},{"teal":970,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[991]},{"teal":971,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[992]},{"teal":972,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[993]},{"teal":973,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[994,995]},{"teal":974,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[996]},{"teal":975,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[997]},{"teal":976,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[998]},{"teal":977,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[999]},{"teal":978,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1000,1001]},{"teal":982,"source":"contracts/BalancedPoolV2.algo.ts:192","pc":[1002]},{"teal":983,"source":"contracts/BalancedPoolV2.algo.ts:192","pc":[1003,1004]},{"teal":984,"source":"contracts/BalancedPoolV2.algo.ts:192","pc":[1005]},{"teal":985,"source":"contracts/BalancedPoolV2.algo.ts:192","pc":[1006]},{"teal":986,"source":"contracts/BalancedPoolV2.algo.ts:192","pc":[1007]},{"teal":989,"source":"contracts/BalancedPoolV2.algo.ts:192","errorMessage":"box value does not exist: this.balances(assetIn).value","pc":[1008]},{"teal":990,"source":"contracts/BalancedPoolV2.algo.ts:192","pc":[1009]},{"teal":991,"source":"contracts/BalancedPoolV2.algo.ts:192","pc":[1010,1011]},{"teal":995,"source":"contracts/BalancedPoolV2.algo.ts:193","pc":[1012]},{"teal":996,"source":"contracts/BalancedPoolV2.algo.ts:193","pc":[1013,1014]},{"teal":997,"source":"contracts/BalancedPoolV2.algo.ts:193","pc":[1015]},{"teal":998,"source":"contracts/BalancedPoolV2.algo.ts:193","pc":[1016]},{"teal":999,"source":"contracts/BalancedPoolV2.algo.ts:193","pc":[1017]},{"teal":1002,"source":"contracts/BalancedPoolV2.algo.ts:193","errorMessage":"box value does not exist: this.balances(assetOut).value","pc":[1018]},{"teal":1003,"source":"contracts/BalancedPoolV2.algo.ts:193","pc":[1019]},{"teal":1004,"source":"contracts/BalancedPoolV2.algo.ts:193","pc":[1020,1021]},{"teal":1008,"source":"contracts/BalancedPoolV2.algo.ts:195","pc":[1022,1023]},{"teal":1009,"source":"contracts/BalancedPoolV2.algo.ts:195","pc":[1024,1025]},{"teal":1010,"source":"contracts/BalancedPoolV2.algo.ts:195","pc":[1026]},{"teal":1011,"source":"contracts/BalancedPoolV2.algo.ts:195","pc":[1027]},{"teal":1012,"source":"contracts/BalancedPoolV2.algo.ts:195","pc":[1028]},{"teal":1015,"source":"contracts/BalancedPoolV2.algo.ts:195","errorMessage":"box value does not exist: this.weights(from).value","pc":[1029]},{"teal":1016,"source":"contracts/BalancedPoolV2.algo.ts:195","pc":[1030]},{"teal":1017,"source":"contracts/BalancedPoolV2.algo.ts:195","pc":[1031,1032]},{"teal":1021,"source":"contracts/BalancedPoolV2.algo.ts:196","pc":[1033,1034]},{"teal":1022,"source":"contracts/BalancedPoolV2.algo.ts:196","pc":[1035,1036]},{"teal":1023,"source":"contracts/BalancedPoolV2.algo.ts:196","pc":[1037]},{"teal":1024,"source":"contracts/BalancedPoolV2.algo.ts:196","pc":[1038]},{"teal":1025,"source":"contracts/BalancedPoolV2.algo.ts:196","pc":[1039]},{"teal":1028,"source":"contracts/BalancedPoolV2.algo.ts:196","errorMessage":"box value does not exist: this.weights(to).value","pc":[1040]},{"teal":1029,"source":"contracts/BalancedPoolV2.algo.ts:196","pc":[1041]},{"teal":1030,"source":"contracts/BalancedPoolV2.algo.ts:196","pc":[1042,1043]},{"teal":1034,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1044,1045]},{"teal":1035,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1046,1047]},{"teal":1036,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1048,1049]},{"teal":1037,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1050,1051]},{"teal":1038,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1052,1053]},{"teal":1039,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1054,1055,1056]},{"teal":1040,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1057,1058]},{"teal":1044,"source":"contracts/BalancedPoolV2.algo.ts:200","pc":[1059,1060]},{"teal":1045,"source":"contracts/BalancedPoolV2.algo.ts:200","pc":[1061]},{"teal":1046,"source":"contracts/BalancedPoolV2.algo.ts:200","pc":[1062]},{"teal":1050,"source":"contracts/BalancedPoolV2.algo.ts:202","pc":[1063]},{"teal":1051,"source":"contracts/BalancedPoolV2.algo.ts:202","pc":[1064,1065]},{"teal":1052,"source":"contracts/BalancedPoolV2.algo.ts:202","pc":[1066]},{"teal":1053,"source":"contracts/BalancedPoolV2.algo.ts:202","pc":[1067]},{"teal":1054,"source":"contracts/BalancedPoolV2.algo.ts:202","pc":[1068,1069]},{"teal":1055,"source":"contracts/BalancedPoolV2.algo.ts:202","pc":[1070,1071]},{"teal":1056,"source":"contracts/BalancedPoolV2.algo.ts:202","pc":[1072]},{"teal":1057,"source":"contracts/BalancedPoolV2.algo.ts:202","pc":[1073]},{"teal":1058,"source":"contracts/BalancedPoolV2.algo.ts:202","pc":[1074]},{"teal":1062,"source":"contracts/BalancedPoolV2.algo.ts:203","pc":[1075]},{"teal":1063,"source":"contracts/BalancedPoolV2.algo.ts:203","pc":[1076,1077]},{"teal":1064,"source":"contracts/BalancedPoolV2.algo.ts:203","pc":[1078]},{"teal":1065,"source":"contracts/BalancedPoolV2.algo.ts:203","pc":[1079]},{"teal":1066,"source":"contracts/BalancedPoolV2.algo.ts:203","pc":[1080,1081]},{"teal":1067,"source":"contracts/BalancedPoolV2.algo.ts:203","pc":[1082,1083]},{"teal":1068,"source":"contracts/BalancedPoolV2.algo.ts:203","pc":[1084]},{"teal":1069,"source":"contracts/BalancedPoolV2.algo.ts:203","pc":[1085]},{"teal":1070,"source":"contracts/BalancedPoolV2.algo.ts:203","pc":[1086]},{"teal":1078,"source":"contracts/BalancedPoolV2.algo.ts:205","pc":[1087]},{"teal":1079,"source":"contracts/BalancedPoolV2.algo.ts:205","pc":[1088,1089]},{"teal":1080,"source":"contracts/BalancedPoolV2.algo.ts:205","pc":[1090,1091]},{"teal":1084,"source":"contracts/BalancedPoolV2.algo.ts:206","pc":[1092,1093]},{"teal":1085,"source":"contracts/BalancedPoolV2.algo.ts:206","pc":[1094,1095]},{"teal":1089,"source":"contracts/BalancedPoolV2.algo.ts:207","pc":[1096,1097]},{"teal":1090,"source":"contracts/BalancedPoolV2.algo.ts:207","pc":[1098,1099]},{"teal":1094,"source":"contracts/BalancedPoolV2.algo.ts:208","pc":[1100,1101]},{"teal":1095,"source":"contracts/BalancedPoolV2.algo.ts:208","pc":[1102,1103]},{"teal":1098,"source":"contracts/BalancedPoolV2.algo.ts:205","pc":[1104]},{"teal":1099,"source":"contracts/BalancedPoolV2.algo.ts:205","pc":[1105,1106]},{"teal":1102,"source":"contracts/BalancedPoolV2.algo.ts:205","pc":[1107]},{"teal":1106,"source":"contracts/BalancedPoolV2.algo.ts:211","pc":[1108,1109]},{"teal":1109,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[1110,1111]},{"teal":1112,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[1112,1113]},{"teal":1113,"source":"contracts/BalancedPoolV2.algo.ts:185","pc":[1114]},{"teal":1117,"source":"contracts/BalancedPoolV2.algo.ts:214","pc":[1115,1116,1117]},{"teal":1122,"source":"contracts/BalancedPoolV2.algo.ts:215","pc":[1118,1119]},{"teal":1123,"source":"contracts/BalancedPoolV2.algo.ts:215","pc":[1120,1121]},{"teal":1124,"source":"contracts/BalancedPoolV2.algo.ts:215","pc":[1122,1123]},{"teal":1125,"source":"contracts/BalancedPoolV2.algo.ts:215","pc":[1124]},{"teal":1126,"source":"contracts/BalancedPoolV2.algo.ts:215","pc":[1125]},{"teal":1127,"source":"contracts/BalancedPoolV2.algo.ts:215","pc":[1126,1127,1128]},{"teal":1132,"source":"contracts/BalancedPoolV2.algo.ts:216","pc":[1129]},{"teal":1141,"source":"contracts/BalancedPoolV2.algo.ts:219","pc":[1130]},{"teal":1142,"source":"contracts/BalancedPoolV2.algo.ts:219","pc":[1131,1132]},{"teal":1143,"source":"contracts/BalancedPoolV2.algo.ts:219","pc":[1133,1134]},{"teal":1147,"source":"contracts/BalancedPoolV2.algo.ts:220","pc":[1135,1136]},{"teal":1148,"source":"contracts/BalancedPoolV2.algo.ts:220","pc":[1137,1138]},{"teal":1152,"source":"contracts/BalancedPoolV2.algo.ts:221","pc":[1139,1140]},{"teal":1153,"source":"contracts/BalancedPoolV2.algo.ts:221","pc":[1141,1142]},{"teal":1157,"source":"contracts/BalancedPoolV2.algo.ts:222","pc":[1143]},{"teal":1158,"source":"contracts/BalancedPoolV2.algo.ts:222","pc":[1144,1145]},{"teal":1161,"source":"contracts/BalancedPoolV2.algo.ts:219","pc":[1146]},{"teal":1162,"source":"contracts/BalancedPoolV2.algo.ts:219","pc":[1147,1148]},{"teal":1165,"source":"contracts/BalancedPoolV2.algo.ts:219","pc":[1149]},{"teal":1166,"source":"contracts/BalancedPoolV2.algo.ts:214","pc":[1150]},{"teal":1177,"source":"contracts/BalancedPoolV2.algo.ts:234","pc":[1151,1152,1153]},{"teal":1182,"source":"contracts/BalancedPoolV2.algo.ts:235","pc":[1154,1155]},{"teal":1183,"source":"contracts/BalancedPoolV2.algo.ts:235","pc":[1156,1157]},{"teal":1184,"source":"contracts/BalancedPoolV2.algo.ts:235","pc":[1158]},{"teal":1185,"source":"contracts/BalancedPoolV2.algo.ts:235","pc":[1159]},{"teal":1186,"source":"contracts/BalancedPoolV2.algo.ts:235","pc":[1160]},{"teal":1187,"source":"contracts/BalancedPoolV2.algo.ts:235","pc":[1161]},{"teal":1188,"source":"contracts/BalancedPoolV2.algo.ts:235","pc":[1162]},{"teal":1189,"source":"contracts/BalancedPoolV2.algo.ts:235","pc":[1163]},{"teal":1190,"source":"contracts/BalancedPoolV2.algo.ts:235","pc":[1164,1165,1166]},{"teal":1195,"source":"contracts/BalancedPoolV2.algo.ts:236","pc":[1167,1168]},{"teal":1196,"source":"contracts/BalancedPoolV2.algo.ts:236","pc":[1169,1170]},{"teal":1197,"source":"contracts/BalancedPoolV2.algo.ts:236","pc":[1171]},{"teal":1198,"source":"contracts/BalancedPoolV2.algo.ts:236","pc":[1172]},{"teal":1199,"source":"contracts/BalancedPoolV2.algo.ts:236","pc":[1173]},{"teal":1200,"source":"contracts/BalancedPoolV2.algo.ts:236","pc":[1174]},{"teal":1201,"source":"contracts/BalancedPoolV2.algo.ts:236","pc":[1175]},{"teal":1207,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1176]},{"teal":1208,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1177,1178]},{"teal":1209,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1179]},{"teal":1210,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1180]},{"teal":1211,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1181]},{"teal":1212,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1182]},{"teal":1213,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1183]},{"teal":1214,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1184]},{"teal":1215,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1185,1186,1187]},{"teal":1220,"source":"contracts/BalancedPoolV2.algo.ts:240","pc":[1188]},{"teal":1221,"source":"contracts/BalancedPoolV2.algo.ts:240","pc":[1189,1190]},{"teal":1222,"source":"contracts/BalancedPoolV2.algo.ts:240","pc":[1191]},{"teal":1223,"source":"contracts/BalancedPoolV2.algo.ts:240","pc":[1192]},{"teal":1224,"source":"contracts/BalancedPoolV2.algo.ts:240","pc":[1193]},{"teal":1225,"source":"contracts/BalancedPoolV2.algo.ts:240","pc":[1194]},{"teal":1226,"source":"contracts/BalancedPoolV2.algo.ts:240","pc":[1195]},{"teal":1231,"source":"contracts/BalancedPoolV2.algo.ts:243","pc":[1196,1197]},{"teal":1232,"source":"contracts/BalancedPoolV2.algo.ts:243","pc":[1198,1199]},{"teal":1233,"source":"contracts/BalancedPoolV2.algo.ts:243","pc":[1200]},{"teal":1234,"source":"contracts/BalancedPoolV2.algo.ts:243","pc":[1201]},{"teal":1235,"source":"contracts/BalancedPoolV2.algo.ts:243","pc":[1202,1203]},{"teal":1236,"source":"contracts/BalancedPoolV2.algo.ts:243","pc":[1204]},{"teal":1237,"source":"contracts/BalancedPoolV2.algo.ts:243","pc":[1205]},{"teal":1241,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1206]},{"teal":1242,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1207,1208]},{"teal":1243,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1209]},{"teal":1244,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1210]},{"teal":1245,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1211,1212]},{"teal":1246,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1213]},{"teal":1247,"source":"contracts/BalancedPoolV2.algo.ts:234","pc":[1214]},{"teal":1253,"source":"contracts/BalancedPoolV2.algo.ts:250","pc":[1215,1216,1217]},{"teal":1258,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1218,1219]},{"teal":1259,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1220]},{"teal":1260,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1221]},{"teal":1261,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1222]},{"teal":1262,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1223,1224,1225]},{"teal":1277,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1226,1227]},{"teal":1278,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1228]},{"teal":1279,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1229,1230]},{"teal":1280,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1231,1232]},{"teal":1284,"source":"contracts/BalancedPoolV2.algo.ts:3","pc":[1233,1234]},{"teal":1285,"source":"contracts/BalancedPoolV2.algo.ts:3","pc":[1235,1236]},{"teal":1286,"source":"contracts/BalancedPoolV2.algo.ts:3","pc":[1237]},{"teal":1287,"source":"contracts/BalancedPoolV2.algo.ts:253","pc":[1238,1239]},{"teal":1291,"source":"contracts/BalancedPoolV2.algo.ts:254","pc":[1240,1241]},{"teal":1292,"source":"contracts/BalancedPoolV2.algo.ts:254","pc":[1242,1243]},{"teal":1296,"source":"contracts/BalancedPoolV2.algo.ts:255","pc":[1244,1245]},{"teal":1297,"source":"contracts/BalancedPoolV2.algo.ts:255","pc":[1246,1247]},{"teal":1301,"source":"contracts/BalancedPoolV2.algo.ts:256","pc":[1248,1249]},{"teal":1302,"source":"contracts/BalancedPoolV2.algo.ts:256","pc":[1250,1251]},{"teal":1306,"source":"contracts/BalancedPoolV2.algo.ts:257","pc":[1252,1253]},{"teal":1307,"source":"contracts/BalancedPoolV2.algo.ts:257","pc":[1254,1255]},{"teal":1311,"source":"contracts/BalancedPoolV2.algo.ts:258","pc":[1256,1257]},{"teal":1312,"source":"contracts/BalancedPoolV2.algo.ts:258","pc":[1258,1259]},{"teal":1316,"source":"contracts/BalancedPoolV2.algo.ts:259","pc":[1260]},{"teal":1317,"source":"contracts/BalancedPoolV2.algo.ts:259","pc":[1261,1262]},{"teal":1321,"source":"contracts/BalancedPoolV2.algo.ts:260","pc":[1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277]},{"teal":1322,"source":"contracts/BalancedPoolV2.algo.ts:260","pc":[1278,1279,1280]},{"teal":1323,"source":"contracts/BalancedPoolV2.algo.ts:260","pc":[1281,1282,1283]},{"teal":1324,"source":"contracts/BalancedPoolV2.algo.ts:260","pc":[1284]},{"teal":1325,"source":"contracts/BalancedPoolV2.algo.ts:260","pc":[1285,1286]},{"teal":1329,"source":"contracts/BalancedPoolV2.algo.ts:261","pc":[1287,1288,1289,1290]},{"teal":1330,"source":"contracts/BalancedPoolV2.algo.ts:261","pc":[1291,1292]},{"teal":1333,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1293]},{"teal":1334,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1294,1295]},{"teal":1337,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1296]},{"teal":1338,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1297,1298]},{"teal":1339,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1299]},{"teal":1342,"source":"contracts/BalancedPoolV2.algo.ts:250","pc":[1300]},{"teal":1348,"source":"contracts/BalancedPoolV2.algo.ts:269","pc":[1301,1302,1303]},{"teal":1352,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1304,1305]},{"teal":1353,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1306,1307]},{"teal":1354,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1308]},{"teal":1355,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1309]},{"teal":1358,"source":"contracts/BalancedPoolV2.algo.ts:270","errorMessage":"only the manager can call this method","pc":[1310]},{"teal":1359,"source":"contracts/BalancedPoolV2.algo.ts:269","pc":[1311]},{"teal":1363,"source":"contracts/BalancedPoolV2.algo.ts:273","pc":[1312,1313,1314]},{"teal":1367,"source":"contracts/BalancedPoolV2.algo.ts:274","pc":[1315,1316]},{"teal":1368,"source":"contracts/BalancedPoolV2.algo.ts:274","pc":[1317]},{"teal":1369,"source":"contracts/BalancedPoolV2.algo.ts:274","pc":[1318]},{"teal":1370,"source":"contracts/BalancedPoolV2.algo.ts:274","pc":[1319]},{"teal":1373,"source":"contracts/BalancedPoolV2.algo.ts:274","errorMessage":"pool not bootstrapped","pc":[1320]},{"teal":1374,"source":"contracts/BalancedPoolV2.algo.ts:273","pc":[1321]},{"teal":1378,"source":"contracts/BalancedPoolV2.algo.ts:277","pc":[1322,1323,1324]},{"teal":1381,"source":"contracts/BalancedPoolV2.algo.ts:277","pc":[1325]},{"teal":1382,"source":"contracts/BalancedPoolV2.algo.ts:277","pc":[1326,1327]},{"teal":1386,"source":"contracts/BalancedPoolV2.algo.ts:278","pc":[1328,1329]},{"teal":1387,"source":"contracts/BalancedPoolV2.algo.ts:278","pc":[1330]},{"teal":1388,"source":"contracts/BalancedPoolV2.algo.ts:278","pc":[1331]},{"teal":1391,"source":"contracts/BalancedPoolV2.algo.ts:278","errorMessage":"log undefined for x ≤ 0","pc":[1332]},{"teal":1395,"source":"contracts/BalancedPoolV2.algo.ts:280","pc":[1333]},{"teal":1396,"source":"contracts/BalancedPoolV2.algo.ts:280","pc":[1334,1335]},{"teal":1401,"source":"contracts/BalancedPoolV2.algo.ts:283","pc":[1336,1337]},{"teal":1402,"source":"contracts/BalancedPoolV2.algo.ts:283","pc":[1338]},{"teal":1403,"source":"contracts/BalancedPoolV2.algo.ts:283","pc":[1339]},{"teal":1404,"source":"contracts/BalancedPoolV2.algo.ts:283","pc":[1340,1341,1342]},{"teal":1409,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1343]},{"teal":1410,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1344,1345]},{"teal":1414,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1346]},{"teal":1415,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1347]},{"teal":1416,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1348]},{"teal":1417,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1349]},{"teal":1418,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1350,1351]},{"teal":1419,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1352]},{"teal":1420,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1353]},{"teal":1421,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1354]},{"teal":1422,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1355]},{"teal":1423,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1356]},{"teal":1426,"source":"contracts/BalancedPoolV2.algo.ts:285","errorMessage":"wideRatio failed","pc":[1357]},{"teal":1427,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1358,1359]},{"teal":1431,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1360,1361]},{"teal":1432,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1362]},{"teal":1433,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1363]},{"teal":1434,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1364]},{"teal":1435,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1365]},{"teal":1436,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1366]},{"teal":1437,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1367,1368]},{"teal":1438,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1369]},{"teal":1439,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1370]},{"teal":1440,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1371]},{"teal":1441,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1372]},{"teal":1442,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1373]},{"teal":1445,"source":"contracts/BalancedPoolV2.algo.ts:286","errorMessage":"wideRatio failed","pc":[1374]},{"teal":1446,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1375,1376]},{"teal":1447,"source":"contracts/BalancedPoolV2.algo.ts:283","pc":[1377,1378,1379]},{"teal":1452,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1380,1381]},{"teal":1453,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1382]},{"teal":1454,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1383]},{"teal":1455,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1384]},{"teal":1456,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1385]},{"teal":1457,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1386]},{"teal":1458,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1387,1388]},{"teal":1459,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1389]},{"teal":1460,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1390]},{"teal":1461,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1391]},{"teal":1462,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1392]},{"teal":1463,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1393]},{"teal":1466,"source":"contracts/BalancedPoolV2.algo.ts:288","errorMessage":"wideRatio failed","pc":[1394]},{"teal":1467,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1395,1396]},{"teal":1472,"source":"contracts/BalancedPoolV2.algo.ts:291","pc":[1397,1398]},{"teal":1473,"source":"contracts/BalancedPoolV2.algo.ts:291","pc":[1399,1400]},{"teal":1477,"source":"contracts/BalancedPoolV2.algo.ts:292","pc":[1401,1402]},{"teal":1478,"source":"contracts/BalancedPoolV2.algo.ts:292","pc":[1403,1404]},{"teal":1482,"source":"contracts/BalancedPoolV2.algo.ts:293","pc":[1405]},{"teal":1483,"source":"contracts/BalancedPoolV2.algo.ts:293","pc":[1406,1407]},{"teal":1487,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1408]},{"teal":1488,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1409,1410]},{"teal":1489,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1411,1412]},{"teal":1490,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1413]},{"teal":1491,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1414,1415]},{"teal":1492,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1416,1417]},{"teal":1493,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1418]},{"teal":1494,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1419,1420]},{"teal":1495,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1421,1422]},{"teal":1496,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1423,1424]},{"teal":1497,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1425,1426]},{"teal":1498,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1427]},{"teal":1502,"source":"contracts/BalancedPoolV2.algo.ts:297","pc":[1428,1429]},{"teal":1503,"source":"contracts/BalancedPoolV2.algo.ts:297","pc":[1430,1431]},{"teal":1508,"source":"contracts/BalancedPoolV2.algo.ts:297","pc":[1432,1433]},{"teal":1509,"source":"contracts/BalancedPoolV2.algo.ts:297","pc":[1434,1435]},{"teal":1510,"source":"contracts/BalancedPoolV2.algo.ts:297","pc":[1436]},{"teal":1511,"source":"contracts/BalancedPoolV2.algo.ts:297","pc":[1437,1438,1439]},{"teal":1515,"source":"contracts/BalancedPoolV2.algo.ts:298","pc":[1440,1441]},{"teal":1516,"source":"contracts/BalancedPoolV2.algo.ts:298","pc":[1442,1443]},{"teal":1517,"source":"contracts/BalancedPoolV2.algo.ts:298","pc":[1444]},{"teal":1518,"source":"contracts/BalancedPoolV2.algo.ts:298","pc":[1445]},{"teal":1519,"source":"contracts/BalancedPoolV2.algo.ts:298","pc":[1446]},{"teal":1520,"source":"contracts/BalancedPoolV2.algo.ts:298","pc":[1447]},{"teal":1521,"source":"contracts/BalancedPoolV2.algo.ts:298","pc":[1448]},{"teal":1522,"source":"contracts/BalancedPoolV2.algo.ts:298","pc":[1449]},{"teal":1523,"source":"contracts/BalancedPoolV2.algo.ts:298","pc":[1450]},{"teal":1524,"source":"contracts/BalancedPoolV2.algo.ts:298","pc":[1451]},{"teal":1527,"source":"contracts/BalancedPoolV2.algo.ts:298","errorMessage":"wideRatio failed","pc":[1452]},{"teal":1528,"source":"contracts/BalancedPoolV2.algo.ts:298","pc":[1453,1454]},{"teal":1532,"source":"contracts/BalancedPoolV2.algo.ts:299","pc":[1455]},{"teal":1533,"source":"contracts/BalancedPoolV2.algo.ts:299","pc":[1456,1457]},{"teal":1534,"source":"contracts/BalancedPoolV2.algo.ts:299","pc":[1458]},{"teal":1535,"source":"contracts/BalancedPoolV2.algo.ts:299","pc":[1459,1460]},{"teal":1536,"source":"contracts/BalancedPoolV2.algo.ts:299","pc":[1461]},{"teal":1537,"source":"contracts/BalancedPoolV2.algo.ts:299","pc":[1462]},{"teal":1538,"source":"contracts/BalancedPoolV2.algo.ts:299","pc":[1463]},{"teal":1539,"source":"contracts/BalancedPoolV2.algo.ts:299","pc":[1464]},{"teal":1540,"source":"contracts/BalancedPoolV2.algo.ts:299","pc":[1465]},{"teal":1543,"source":"contracts/BalancedPoolV2.algo.ts:299","errorMessage":"wideRatio failed","pc":[1466]},{"teal":1544,"source":"contracts/BalancedPoolV2.algo.ts:299","pc":[1467,1468]},{"teal":1548,"source":"contracts/BalancedPoolV2.algo.ts:300","pc":[1469,1470]},{"teal":1549,"source":"contracts/BalancedPoolV2.algo.ts:300","pc":[1471,1472,1473]},{"teal":1550,"source":"contracts/BalancedPoolV2.algo.ts:300","pc":[1474,1475]},{"teal":1551,"source":"contracts/BalancedPoolV2.algo.ts:300","pc":[1476,1477]},{"teal":1552,"source":"contracts/BalancedPoolV2.algo.ts:300","pc":[1478]},{"teal":1553,"source":"contracts/BalancedPoolV2.algo.ts:300","pc":[1479,1480,1481]},{"teal":1556,"source":"contracts/BalancedPoolV2.algo.ts:300","pc":[1482,1483]},{"teal":1557,"source":"contracts/BalancedPoolV2.algo.ts:300","pc":[1484,1485]},{"teal":1558,"source":"contracts/BalancedPoolV2.algo.ts:300","pc":[1486]},{"teal":1561,"source":"contracts/BalancedPoolV2.algo.ts:300","pc":[1487,1488]},{"teal":1565,"source":"contracts/BalancedPoolV2.algo.ts:301","pc":[1489,1490]},{"teal":1566,"source":"contracts/BalancedPoolV2.algo.ts:301","pc":[1491]},{"teal":1567,"source":"contracts/BalancedPoolV2.algo.ts:301","pc":[1492,1493]},{"teal":1572,"source":"contracts/BalancedPoolV2.algo.ts:297","pc":[1494,1495]},{"teal":1573,"source":"contracts/BalancedPoolV2.algo.ts:297","pc":[1496]},{"teal":1574,"source":"contracts/BalancedPoolV2.algo.ts:297","pc":[1497]},{"teal":1575,"source":"contracts/BalancedPoolV2.algo.ts:297","pc":[1498,1499]},{"teal":1576,"source":"contracts/BalancedPoolV2.algo.ts:297","pc":[1500,1501,1502]},{"teal":1581,"source":"contracts/BalancedPoolV2.algo.ts:304","pc":[1503,1504]},{"teal":1582,"source":"contracts/BalancedPoolV2.algo.ts:304","pc":[1505]},{"teal":1583,"source":"contracts/BalancedPoolV2.algo.ts:304","pc":[1506,1507]},{"teal":1584,"source":"contracts/BalancedPoolV2.algo.ts:304","pc":[1508]},{"teal":1585,"source":"contracts/BalancedPoolV2.algo.ts:304","pc":[1509]},{"teal":1588,"source":"contracts/BalancedPoolV2.algo.ts:277","pc":[1510,1511]},{"teal":1591,"source":"contracts/BalancedPoolV2.algo.ts:277","pc":[1512,1513]},{"teal":1592,"source":"contracts/BalancedPoolV2.algo.ts:277","pc":[1514]},{"teal":1596,"source":"contracts/BalancedPoolV2.algo.ts:307","pc":[1515,1516,1517]},{"teal":1599,"source":"contracts/BalancedPoolV2.algo.ts:307","pc":[1518]},{"teal":1600,"source":"contracts/BalancedPoolV2.algo.ts:307","pc":[1519,1520]},{"teal":1604,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1521]},{"teal":1605,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1522,1523]},{"teal":1609,"source":"contracts/BalancedPoolV2.algo.ts:309","pc":[1524]},{"teal":1610,"source":"contracts/BalancedPoolV2.algo.ts:309","pc":[1525,1526]},{"teal":1614,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1527]},{"teal":1615,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1528,1529]},{"teal":1620,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1530,1531]},{"teal":1621,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1532,1533]},{"teal":1622,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1534]},{"teal":1623,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1535,1536,1537]},{"teal":1627,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1538,1539]},{"teal":1628,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1540,1541]},{"teal":1629,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1542]},{"teal":1630,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1543]},{"teal":1631,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1544,1545]},{"teal":1632,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1546]},{"teal":1633,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1547]},{"teal":1634,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1548]},{"teal":1635,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1549]},{"teal":1636,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1550]},{"teal":1637,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1551]},{"teal":1638,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1552]},{"teal":1641,"source":"contracts/BalancedPoolV2.algo.ts:312","errorMessage":"wideRatio failed","pc":[1553]},{"teal":1642,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1554,1555]},{"teal":1646,"source":"contracts/BalancedPoolV2.algo.ts:313","pc":[1556,1557]},{"teal":1647,"source":"contracts/BalancedPoolV2.algo.ts:313","pc":[1558,1559]},{"teal":1648,"source":"contracts/BalancedPoolV2.algo.ts:313","pc":[1560]},{"teal":1649,"source":"contracts/BalancedPoolV2.algo.ts:313","pc":[1561,1562]},{"teal":1654,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1563,1564]},{"teal":1655,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1565]},{"teal":1656,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1566]},{"teal":1657,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1567,1568]},{"teal":1658,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1569,1570,1571]},{"teal":1663,"source":"contracts/BalancedPoolV2.algo.ts:316","pc":[1572,1573]},{"teal":1666,"source":"contracts/BalancedPoolV2.algo.ts:307","pc":[1574,1575]},{"teal":1669,"source":"contracts/BalancedPoolV2.algo.ts:307","pc":[1576,1577]},{"teal":1670,"source":"contracts/BalancedPoolV2.algo.ts:307","pc":[1578]},{"teal":1674,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1579,1580,1581]},{"teal":1677,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1582]},{"teal":1678,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1583,1584]},{"teal":1683,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1585,1586]},{"teal":1684,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1587]},{"teal":1685,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1588]},{"teal":1686,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1589,1590,1591]},{"teal":1691,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1592]},{"teal":1692,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1593,1594,1595]},{"teal":1697,"source":"contracts/BalancedPoolV2.algo.ts:322","pc":[1596,1597]},{"teal":1698,"source":"contracts/BalancedPoolV2.algo.ts:322","pc":[1598,1599,1600]},{"teal":1699,"source":"contracts/BalancedPoolV2.algo.ts:322","pc":[1601,1602]},{"teal":1703,"source":"contracts/BalancedPoolV2.algo.ts:323","pc":[1603,1604]},{"teal":1704,"source":"contracts/BalancedPoolV2.algo.ts:323","pc":[1605,1606]},{"teal":1705,"source":"contracts/BalancedPoolV2.algo.ts:323","pc":[1607,1608]},{"teal":1706,"source":"contracts/BalancedPoolV2.algo.ts:323","pc":[1609,1610,1611]},{"teal":1707,"source":"contracts/BalancedPoolV2.algo.ts:323","pc":[1612]},{"teal":1708,"source":"contracts/BalancedPoolV2.algo.ts:323","pc":[1613,1614]},{"teal":1712,"source":"contracts/BalancedPoolV2.algo.ts:324","pc":[1615,1616]},{"teal":1713,"source":"contracts/BalancedPoolV2.algo.ts:324","pc":[1617,1618]},{"teal":1714,"source":"contracts/BalancedPoolV2.algo.ts:324","pc":[1619,1620]},{"teal":1715,"source":"contracts/BalancedPoolV2.algo.ts:324","pc":[1621,1622,1623]},{"teal":1716,"source":"contracts/BalancedPoolV2.algo.ts:324","pc":[1624]},{"teal":1717,"source":"contracts/BalancedPoolV2.algo.ts:324","pc":[1625,1626]},{"teal":1721,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1627,1628]},{"teal":1722,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1629,1630]},{"teal":1723,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1631]},{"teal":1724,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1632]},{"teal":1725,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1633]},{"teal":1726,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1634]},{"teal":1727,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1635]},{"teal":1728,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1636]},{"teal":1729,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1637]},{"teal":1730,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1638]},{"teal":1733,"source":"contracts/BalancedPoolV2.algo.ts:326","errorMessage":"wideRatio failed","pc":[1639]},{"teal":1734,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1640,1641]},{"teal":1738,"source":"contracts/BalancedPoolV2.algo.ts:328","pc":[1642,1643]},{"teal":1739,"source":"contracts/BalancedPoolV2.algo.ts:328","pc":[1644,1645,1646]},{"teal":1740,"source":"contracts/BalancedPoolV2.algo.ts:328","pc":[1647,1648]},{"teal":1745,"source":"contracts/BalancedPoolV2.algo.ts:330","pc":[1649,1650]},{"teal":1746,"source":"contracts/BalancedPoolV2.algo.ts:330","pc":[1651]},{"teal":1747,"source":"contracts/BalancedPoolV2.algo.ts:330","pc":[1652]},{"teal":1748,"source":"contracts/BalancedPoolV2.algo.ts:330","pc":[1653,1654,1655]},{"teal":1753,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1656]},{"teal":1754,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1657]},{"teal":1755,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1658]},{"teal":1756,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1659]},{"teal":1757,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1660,1661]},{"teal":1758,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1662]},{"teal":1759,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1663]},{"teal":1760,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1664]},{"teal":1761,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1665]},{"teal":1762,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1666]},{"teal":1765,"source":"contracts/BalancedPoolV2.algo.ts:331","errorMessage":"wideRatio failed","pc":[1667]},{"teal":1766,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1668,1669,1670]},{"teal":1771,"source":"contracts/BalancedPoolV2.algo.ts:334","pc":[1671,1672]},{"teal":1775,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1673,1674]},{"teal":1778,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1675,1676]},{"teal":1779,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1677]},{"teal":1783,"source":"contracts/BalancedPoolV2.algo.ts:337","pc":[1678,1679,1680]},{"teal":1786,"source":"contracts/BalancedPoolV2.algo.ts:337","pc":[1681]},{"teal":1787,"source":"contracts/BalancedPoolV2.algo.ts:337","pc":[1682,1683]},{"teal":1791,"source":"contracts/BalancedPoolV2.algo.ts:346","pc":[1684,1685]},{"teal":1792,"source":"contracts/BalancedPoolV2.algo.ts:346","pc":[1686,1687,1688,1689]},{"teal":1793,"source":"contracts/BalancedPoolV2.algo.ts:346","pc":[1690]},{"teal":1794,"source":"contracts/BalancedPoolV2.algo.ts:346","pc":[1691]},{"teal":1795,"source":"contracts/BalancedPoolV2.algo.ts:346","pc":[1692]},{"teal":1796,"source":"contracts/BalancedPoolV2.algo.ts:346","pc":[1693]},{"teal":1797,"source":"contracts/BalancedPoolV2.algo.ts:346","pc":[1694]},{"teal":1798,"source":"contracts/BalancedPoolV2.algo.ts:346","pc":[1695]},{"teal":1799,"source":"contracts/BalancedPoolV2.algo.ts:346","pc":[1696]},{"teal":1800,"source":"contracts/BalancedPoolV2.algo.ts:346","pc":[1697]},{"teal":1803,"source":"contracts/BalancedPoolV2.algo.ts:346","errorMessage":"wideRatio failed","pc":[1698]},{"teal":1804,"source":"contracts/BalancedPoolV2.algo.ts:346","pc":[1699,1700]},{"teal":1808,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1701,1702]},{"teal":1809,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1703]},{"teal":1810,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1704]},{"teal":1811,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1705]},{"teal":1812,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1706,1707]},{"teal":1813,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1708,1709]},{"teal":1814,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1710]},{"teal":1815,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1711]},{"teal":1816,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1712]},{"teal":1817,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1713]},{"teal":1818,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1714]},{"teal":1819,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1715]},{"teal":1822,"source":"contracts/BalancedPoolV2.algo.ts:349","errorMessage":"wideRatio failed","pc":[1716]},{"teal":1823,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1717,1718]},{"teal":1827,"source":"contracts/BalancedPoolV2.algo.ts:351","pc":[1719,1720]},{"teal":1828,"source":"contracts/BalancedPoolV2.algo.ts:351","pc":[1721]},{"teal":1829,"source":"contracts/BalancedPoolV2.algo.ts:351","pc":[1722]},{"teal":1830,"source":"contracts/BalancedPoolV2.algo.ts:351","pc":[1723]},{"teal":1831,"source":"contracts/BalancedPoolV2.algo.ts:351","pc":[1724,1725]},{"teal":1832,"source":"contracts/BalancedPoolV2.algo.ts:351","pc":[1726]},{"teal":1833,"source":"contracts/BalancedPoolV2.algo.ts:351","pc":[1727]},{"teal":1834,"source":"contracts/BalancedPoolV2.algo.ts:351","pc":[1728]},{"teal":1835,"source":"contracts/BalancedPoolV2.algo.ts:351","pc":[1729]},{"teal":1836,"source":"contracts/BalancedPoolV2.algo.ts:351","pc":[1730]},{"teal":1839,"source":"contracts/BalancedPoolV2.algo.ts:351","errorMessage":"wideRatio failed","pc":[1731]},{"teal":1840,"source":"contracts/BalancedPoolV2.algo.ts:351","pc":[1732,1733]},{"teal":1844,"source":"contracts/BalancedPoolV2.algo.ts:354","pc":[1734,1735]},{"teal":1845,"source":"contracts/BalancedPoolV2.algo.ts:354","pc":[1736,1737]},{"teal":1846,"source":"contracts/BalancedPoolV2.algo.ts:354","pc":[1738,1739,1740]},{"teal":1847,"source":"contracts/BalancedPoolV2.algo.ts:354","pc":[1741,1742]},{"teal":1851,"source":"contracts/BalancedPoolV2.algo.ts:356","pc":[1743,1744]},{"teal":1852,"source":"contracts/BalancedPoolV2.algo.ts:356","pc":[1745]},{"teal":1853,"source":"contracts/BalancedPoolV2.algo.ts:356","pc":[1746]},{"teal":1857,"source":"contracts/BalancedPoolV2.algo.ts:357","pc":[1747,1748]},{"teal":1858,"source":"contracts/BalancedPoolV2.algo.ts:357","pc":[1749]},{"teal":1859,"source":"contracts/BalancedPoolV2.algo.ts:357","pc":[1750]},{"teal":1863,"source":"contracts/BalancedPoolV2.algo.ts:358","pc":[1751,1752]},{"teal":1864,"source":"contracts/BalancedPoolV2.algo.ts:358","pc":[1753]},{"teal":1865,"source":"contracts/BalancedPoolV2.algo.ts:358","pc":[1754]},{"teal":1869,"source":"contracts/BalancedPoolV2.algo.ts:359","pc":[1755,1756]},{"teal":1870,"source":"contracts/BalancedPoolV2.algo.ts:359","pc":[1757]},{"teal":1871,"source":"contracts/BalancedPoolV2.algo.ts:359","pc":[1758]},{"teal":1875,"source":"contracts/BalancedPoolV2.algo.ts:360","pc":[1759,1760]},{"teal":1876,"source":"contracts/BalancedPoolV2.algo.ts:360","pc":[1761]},{"teal":1877,"source":"contracts/BalancedPoolV2.algo.ts:360","pc":[1762]},{"teal":1881,"source":"contracts/BalancedPoolV2.algo.ts:361","pc":[1763,1764]},{"teal":1882,"source":"contracts/BalancedPoolV2.algo.ts:361","pc":[1765]},{"teal":1883,"source":"contracts/BalancedPoolV2.algo.ts:361","pc":[1766,1767]},{"teal":1884,"source":"contracts/BalancedPoolV2.algo.ts:361","pc":[1768]},{"teal":1885,"source":"contracts/BalancedPoolV2.algo.ts:361","pc":[1769]},{"teal":1886,"source":"contracts/BalancedPoolV2.algo.ts:361","pc":[1770]},{"teal":1887,"source":"contracts/BalancedPoolV2.algo.ts:361","pc":[1771]},{"teal":1888,"source":"contracts/BalancedPoolV2.algo.ts:361","pc":[1772]},{"teal":1889,"source":"contracts/BalancedPoolV2.algo.ts:361","pc":[1773]},{"teal":1890,"source":"contracts/BalancedPoolV2.algo.ts:361","pc":[1774]},{"teal":1891,"source":"contracts/BalancedPoolV2.algo.ts:361","pc":[1775]},{"teal":1892,"source":"contracts/BalancedPoolV2.algo.ts:361","pc":[1776]},{"teal":1895,"source":"contracts/BalancedPoolV2.algo.ts:361","errorMessage":"wideRatio failed","pc":[1777]},{"teal":1896,"source":"contracts/BalancedPoolV2.algo.ts:361","pc":[1778]},{"teal":1897,"source":"contracts/BalancedPoolV2.algo.ts:361","pc":[1779]},{"teal":1901,"source":"contracts/BalancedPoolV2.algo.ts:363","pc":[1780,1781]},{"teal":1902,"source":"contracts/BalancedPoolV2.algo.ts:363","pc":[1782]},{"teal":1903,"source":"contracts/BalancedPoolV2.algo.ts:363","pc":[1783,1784]},{"teal":1904,"source":"contracts/BalancedPoolV2.algo.ts:363","pc":[1785]},{"teal":1905,"source":"contracts/BalancedPoolV2.algo.ts:363","pc":[1786]},{"teal":1906,"source":"contracts/BalancedPoolV2.algo.ts:363","pc":[1787]},{"teal":1907,"source":"contracts/BalancedPoolV2.algo.ts:363","pc":[1788]},{"teal":1908,"source":"contracts/BalancedPoolV2.algo.ts:363","pc":[1789]},{"teal":1909,"source":"contracts/BalancedPoolV2.algo.ts:363","pc":[1790]},{"teal":1910,"source":"contracts/BalancedPoolV2.algo.ts:363","pc":[1791]},{"teal":1911,"source":"contracts/BalancedPoolV2.algo.ts:363","pc":[1792]},{"teal":1912,"source":"contracts/BalancedPoolV2.algo.ts:363","pc":[1793]},{"teal":1915,"source":"contracts/BalancedPoolV2.algo.ts:363","errorMessage":"wideRatio failed","pc":[1794]},{"teal":1918,"source":"contracts/BalancedPoolV2.algo.ts:337","pc":[1795,1796]},{"teal":1921,"source":"contracts/BalancedPoolV2.algo.ts:337","pc":[1797,1798]},{"teal":1922,"source":"contracts/BalancedPoolV2.algo.ts:337","pc":[1799]},{"teal":1926,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1800,1801,1802]},{"teal":1929,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1803]},{"teal":1930,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1804,1805]},{"teal":1934,"source":"contracts/BalancedPoolV2.algo.ts:367","pc":[1806]},{"teal":1935,"source":"contracts/BalancedPoolV2.algo.ts:367","pc":[1807]},{"teal":1936,"source":"contracts/BalancedPoolV2.algo.ts:367","pc":[1808,1809,1810]},{"teal":1937,"source":"contracts/BalancedPoolV2.algo.ts:367","pc":[1811]},{"teal":1938,"source":"contracts/BalancedPoolV2.algo.ts:367","pc":[1812]},{"teal":1939,"source":"contracts/BalancedPoolV2.algo.ts:367","pc":[1813]},{"teal":1940,"source":"contracts/BalancedPoolV2.algo.ts:367","pc":[1814,1815]},{"teal":1944,"source":"contracts/BalancedPoolV2.algo.ts:369","pc":[1816,1817]},{"teal":1945,"source":"contracts/BalancedPoolV2.algo.ts:369","pc":[1818]},{"teal":1946,"source":"contracts/BalancedPoolV2.algo.ts:369","pc":[1819]},{"teal":1949,"source":"contracts/BalancedPoolV2.algo.ts:369","errorMessage":"Please provide at least one asset","pc":[1820]},{"teal":1953,"source":"contracts/BalancedPoolV2.algo.ts:370","pc":[1821]},{"teal":1954,"source":"contracts/BalancedPoolV2.algo.ts:370","pc":[1822,1823]},{"teal":1958,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1824]},{"teal":1959,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1825,1826]},{"teal":1960,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1827,1828]},{"teal":1961,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1829]},{"teal":1962,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1830,1831]},{"teal":1963,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1832,1833]},{"teal":1964,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1834]},{"teal":1965,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1835,1836]},{"teal":1966,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1837,1838]},{"teal":1967,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1839,1840]},{"teal":1968,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1841,1842]},{"teal":1969,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1843]},{"teal":1973,"source":"contracts/BalancedPoolV2.algo.ts:373","pc":[1844]},{"teal":1974,"source":"contracts/BalancedPoolV2.algo.ts:373","pc":[1845,1846]},{"teal":1979,"source":"contracts/BalancedPoolV2.algo.ts:373","pc":[1847,1848]},{"teal":1980,"source":"contracts/BalancedPoolV2.algo.ts:373","pc":[1849,1850]},{"teal":1981,"source":"contracts/BalancedPoolV2.algo.ts:373","pc":[1851]},{"teal":1982,"source":"contracts/BalancedPoolV2.algo.ts:373","pc":[1852,1853,1854]},{"teal":1986,"source":"contracts/BalancedPoolV2.algo.ts:374","pc":[1855]},{"teal":1987,"source":"contracts/BalancedPoolV2.algo.ts:374","pc":[1856]},{"teal":1988,"source":"contracts/BalancedPoolV2.algo.ts:374","pc":[1857,1858,1859]},{"teal":1989,"source":"contracts/BalancedPoolV2.algo.ts:374","pc":[1860,1861]},{"teal":1990,"source":"contracts/BalancedPoolV2.algo.ts:374","pc":[1862]},{"teal":1991,"source":"contracts/BalancedPoolV2.algo.ts:374","pc":[1863,1864]},{"teal":1992,"source":"contracts/BalancedPoolV2.algo.ts:374","pc":[1865]},{"teal":1993,"source":"contracts/BalancedPoolV2.algo.ts:374","pc":[1866]},{"teal":1994,"source":"contracts/BalancedPoolV2.algo.ts:374","pc":[1867]},{"teal":1995,"source":"contracts/BalancedPoolV2.algo.ts:374","pc":[1868,1869]},{"teal":1996,"source":"contracts/BalancedPoolV2.algo.ts:374","pc":[1870]},{"teal":1997,"source":"contracts/BalancedPoolV2.algo.ts:374","pc":[1871]},{"teal":1998,"source":"contracts/BalancedPoolV2.algo.ts:374","pc":[1872]},{"teal":1999,"source":"contracts/BalancedPoolV2.algo.ts:374","pc":[1873]},{"teal":2000,"source":"contracts/BalancedPoolV2.algo.ts:374","pc":[1874,1875]},{"teal":2004,"source":"contracts/BalancedPoolV2.algo.ts:375","pc":[1876]},{"teal":2005,"source":"contracts/BalancedPoolV2.algo.ts:375","pc":[1877,1878]},{"teal":2006,"source":"contracts/BalancedPoolV2.algo.ts:375","pc":[1879]},{"teal":2007,"source":"contracts/BalancedPoolV2.algo.ts:375","pc":[1880]},{"teal":2008,"source":"contracts/BalancedPoolV2.algo.ts:375","pc":[1881]},{"teal":2011,"source":"contracts/BalancedPoolV2.algo.ts:375","errorMessage":"box value does not exist: this.balances(assetId).value","pc":[1882]},{"teal":2012,"source":"contracts/BalancedPoolV2.algo.ts:375","pc":[1883]},{"teal":2013,"source":"contracts/BalancedPoolV2.algo.ts:375","pc":[1884,1885]},{"teal":2017,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1886]},{"teal":2018,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1887,1888]},{"teal":2019,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1889]},{"teal":2020,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1890]},{"teal":2023,"source":"contracts/BalancedPoolV2.algo.ts:376","errorMessage":"box value does not exist: this.provided(sender).value","pc":[1891]},{"teal":2024,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1892,1893,1894]},{"teal":2025,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1895,1896]},{"teal":2026,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1897]},{"teal":2027,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1898,1899]},{"teal":2028,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1900]},{"teal":2029,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1901]},{"teal":2030,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1902]},{"teal":2031,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1903,1904]},{"teal":2032,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1905]},{"teal":2033,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1906]},{"teal":2034,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1907]},{"teal":2035,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1908]},{"teal":2036,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1909,1910]},{"teal":2040,"source":"contracts/BalancedPoolV2.algo.ts:377","pc":[1911,1912]},{"teal":2041,"source":"contracts/BalancedPoolV2.algo.ts:377","pc":[1913,1914]},{"teal":2042,"source":"contracts/BalancedPoolV2.algo.ts:377","pc":[1915]},{"teal":2043,"source":"contracts/BalancedPoolV2.algo.ts:377","pc":[1916,1917]},{"teal":2047,"source":"contracts/BalancedPoolV2.algo.ts:379","pc":[1918,1919]},{"teal":2048,"source":"contracts/BalancedPoolV2.algo.ts:379","pc":[1920]},{"teal":2049,"source":"contracts/BalancedPoolV2.algo.ts:379","pc":[1921]},{"teal":2052,"source":"contracts/BalancedPoolV2.algo.ts:379","errorMessage":"Pool balance must be > 0","pc":[1922]},{"teal":2057,"source":"contracts/BalancedPoolV2.algo.ts:381","pc":[1923,1924]},{"teal":2058,"source":"contracts/BalancedPoolV2.algo.ts:381","pc":[1925]},{"teal":2059,"source":"contracts/BalancedPoolV2.algo.ts:381","pc":[1926]},{"teal":2060,"source":"contracts/BalancedPoolV2.algo.ts:381","pc":[1927,1928,1929]},{"teal":2065,"source":"contracts/BalancedPoolV2.algo.ts:382","pc":[1930,1931]},{"teal":2066,"source":"contracts/BalancedPoolV2.algo.ts:382","pc":[1932]},{"teal":2067,"source":"contracts/BalancedPoolV2.algo.ts:382","pc":[1933]},{"teal":2068,"source":"contracts/BalancedPoolV2.algo.ts:382","pc":[1934]},{"teal":2069,"source":"contracts/BalancedPoolV2.algo.ts:382","pc":[1935,1936]},{"teal":2070,"source":"contracts/BalancedPoolV2.algo.ts:382","pc":[1937]},{"teal":2071,"source":"contracts/BalancedPoolV2.algo.ts:382","pc":[1938]},{"teal":2072,"source":"contracts/BalancedPoolV2.algo.ts:382","pc":[1939]},{"teal":2073,"source":"contracts/BalancedPoolV2.algo.ts:382","pc":[1940]},{"teal":2074,"source":"contracts/BalancedPoolV2.algo.ts:382","pc":[1941]},{"teal":2077,"source":"contracts/BalancedPoolV2.algo.ts:382","errorMessage":"wideRatio failed","pc":[1942]},{"teal":2078,"source":"contracts/BalancedPoolV2.algo.ts:382","pc":[1943,1944]},{"teal":2082,"source":"contracts/BalancedPoolV2.algo.ts:383","pc":[1945,1946]},{"teal":2083,"source":"contracts/BalancedPoolV2.algo.ts:383","pc":[1947,1948]},{"teal":2084,"source":"contracts/BalancedPoolV2.algo.ts:383","pc":[1949]},{"teal":2085,"source":"contracts/BalancedPoolV2.algo.ts:383","pc":[1950,1951]},{"teal":2092,"source":"contracts/BalancedPoolV2.algo.ts:373","pc":[1952,1953]},{"teal":2093,"source":"contracts/BalancedPoolV2.algo.ts:373","pc":[1954]},{"teal":2094,"source":"contracts/BalancedPoolV2.algo.ts:373","pc":[1955]},{"teal":2095,"source":"contracts/BalancedPoolV2.algo.ts:373","pc":[1956,1957]},{"teal":2096,"source":"contracts/BalancedPoolV2.algo.ts:373","pc":[1958,1959,1960]},{"teal":2101,"source":"contracts/BalancedPoolV2.algo.ts:387","pc":[1961,1962,1963]},{"teal":2102,"source":"contracts/BalancedPoolV2.algo.ts:387","pc":[1964,1965]},{"teal":2106,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[1966,1967]},{"teal":2107,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[1968,1969]},{"teal":2108,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[1970]},{"teal":2109,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[1971]},{"teal":2110,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[1972]},{"teal":2111,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[1973]},{"teal":2112,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[1974]},{"teal":2113,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[1975]},{"teal":2114,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[1976]},{"teal":2115,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[1977]},{"teal":2116,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[1978]},{"teal":2117,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[1979]},{"teal":2120,"source":"contracts/BalancedPoolV2.algo.ts:388","errorMessage":"wideRatio failed","pc":[1980]},{"teal":2123,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1981,1982]},{"teal":2126,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1983,1984]},{"teal":2127,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1985]},{"teal":2131,"source":"contracts/BalancedPoolV2.algo.ts:391","pc":[1986,1987,1988]},{"teal":2135,"source":"contracts/BalancedPoolV2.algo.ts:392","pc":[1989,1990]},{"teal":2136,"source":"contracts/BalancedPoolV2.algo.ts:392","pc":[1991]},{"teal":2137,"source":"contracts/BalancedPoolV2.algo.ts:392","pc":[1992,1993]},{"teal":2138,"source":"contracts/BalancedPoolV2.algo.ts:392","pc":[1994]},{"teal":2139,"source":"contracts/BalancedPoolV2.algo.ts:392","pc":[1995,1996]},{"teal":2140,"source":"contracts/BalancedPoolV2.algo.ts:392","pc":[1997]},{"teal":2141,"source":"contracts/BalancedPoolV2.algo.ts:392","pc":[1998,1999]},{"teal":2142,"source":"contracts/BalancedPoolV2.algo.ts:392","pc":[2000]},{"teal":2143,"source":"contracts/BalancedPoolV2.algo.ts:392","pc":[2001,2002]},{"teal":2144,"source":"contracts/BalancedPoolV2.algo.ts:392","pc":[2003]},{"teal":2145,"source":"contracts/BalancedPoolV2.algo.ts:392","pc":[2004,2005]},{"teal":2146,"source":"contracts/BalancedPoolV2.algo.ts:392","pc":[2006]},{"teal":2147,"source":"contracts/BalancedPoolV2.algo.ts:392","pc":[2007]},{"teal":2148,"source":"contracts/BalancedPoolV2.algo.ts:392","pc":[2008,2009]},{"teal":2149,"source":"contracts/BalancedPoolV2.algo.ts:392","pc":[2010]},{"teal":2150,"source":"contracts/BalancedPoolV2.algo.ts:392","pc":[2011]},{"teal":2151,"source":"contracts/BalancedPoolV2.algo.ts:391","pc":[2012]},{"teal":2155,"source":"contracts/BalancedPoolV2.algo.ts:395","pc":[2013,2014,2015]},{"teal":2159,"source":"contracts/BalancedPoolV2.algo.ts:396","pc":[2016,2017]},{"teal":2160,"source":"contracts/BalancedPoolV2.algo.ts:396","pc":[2018,2019]},{"teal":2161,"source":"contracts/BalancedPoolV2.algo.ts:396","pc":[2020]},{"teal":2162,"source":"contracts/BalancedPoolV2.algo.ts:396","pc":[2021,2022,2023]},{"teal":2163,"source":"contracts/BalancedPoolV2.algo.ts:396","pc":[2024,2025]},{"teal":2164,"source":"contracts/BalancedPoolV2.algo.ts:396","pc":[2026,2027]},{"teal":2165,"source":"contracts/BalancedPoolV2.algo.ts:396","pc":[2028]},{"teal":2166,"source":"contracts/BalancedPoolV2.algo.ts:396","pc":[2029,2030,2031]},{"teal":2169,"source":"contracts/BalancedPoolV2.algo.ts:396","pc":[2032,2033]},{"teal":2170,"source":"contracts/BalancedPoolV2.algo.ts:396","pc":[2034,2035]},{"teal":2171,"source":"contracts/BalancedPoolV2.algo.ts:396","pc":[2036]},{"teal":2174,"source":"contracts/BalancedPoolV2.algo.ts:395","pc":[2037]},{"teal":2179,"source":"contracts/BalancedPoolV2.algo.ts:399","pc":[2038,2039]},{"teal":2182,"source":"contracts/BalancedPoolV2.algo.ts:399","pc":[2040,2041,2042]},{"teal":2183,"source":"contracts/BalancedPoolV2.algo.ts:399","pc":[2043]},{"teal":2184,"source":"contracts/BalancedPoolV2.algo.ts:399","pc":[2044]},{"teal":2185,"source":"contracts/BalancedPoolV2.algo.ts:399","pc":[2045]},{"teal":2186,"source":"contracts/BalancedPoolV2.algo.ts:399","pc":[2046]},{"teal":2187,"source":"contracts/BalancedPoolV2.algo.ts:399","pc":[2047]},{"teal":2191,"source":"contracts/BalancedPoolV2.algo.ts:399","pc":[2048,2049,2050]},{"teal":2195,"source":"contracts/BalancedPoolV2.algo.ts:401","pc":[2051,2052]},{"teal":2196,"source":"contracts/BalancedPoolV2.algo.ts:401","pc":[2053]},{"teal":2197,"source":"contracts/BalancedPoolV2.algo.ts:399","pc":[2054]},{"teal":2202,"source":"contracts/BalancedPoolV2.algo.ts:404","pc":[2055,2056]},{"teal":2205,"source":"contracts/BalancedPoolV2.algo.ts:405","pc":[2057,2058,2059]},{"teal":2206,"source":"contracts/BalancedPoolV2.algo.ts:405","pc":[2060]},{"teal":2209,"source":"contracts/BalancedPoolV2.algo.ts:404","pc":[2061,2062,2063]},{"teal":2210,"source":"contracts/BalancedPoolV2.algo.ts:404","pc":[2064]},{"teal":2211,"source":"contracts/BalancedPoolV2.algo.ts:404","pc":[2065]},{"teal":2212,"source":"contracts/BalancedPoolV2.algo.ts:404","pc":[2066]},{"teal":2213,"source":"contracts/BalancedPoolV2.algo.ts:404","pc":[2067]},{"teal":2214,"source":"contracts/BalancedPoolV2.algo.ts:404","pc":[2068]},{"teal":2218,"source":"contracts/BalancedPoolV2.algo.ts:404","pc":[2069,2070,2071]},{"teal":2221,"source":"contracts/BalancedPoolV2.algo.ts:404","pc":[2072]},{"teal":2225,"source":"contracts/BalancedPoolV2.algo.ts:406","pc":[2073]},{"teal":2226,"source":"contracts/BalancedPoolV2.algo.ts:406","pc":[2074]},{"teal":2227,"source":"contracts/BalancedPoolV2.algo.ts:406","pc":[2075,2076,2077]},{"teal":2228,"source":"contracts/BalancedPoolV2.algo.ts:406","pc":[2078,2079]},{"teal":2229,"source":"contracts/BalancedPoolV2.algo.ts:406","pc":[2080]},{"teal":2230,"source":"contracts/BalancedPoolV2.algo.ts:406","pc":[2081,2082]},{"teal":2231,"source":"contracts/BalancedPoolV2.algo.ts:406","pc":[2083]},{"teal":2232,"source":"contracts/BalancedPoolV2.algo.ts:406","pc":[2084]},{"teal":2233,"source":"contracts/BalancedPoolV2.algo.ts:406","pc":[2085]},{"teal":2234,"source":"contracts/BalancedPoolV2.algo.ts:406","pc":[2086,2087]},{"teal":2235,"source":"contracts/BalancedPoolV2.algo.ts:406","pc":[2088]},{"teal":2236,"source":"contracts/BalancedPoolV2.algo.ts:406","pc":[2089]},{"teal":2237,"source":"contracts/BalancedPoolV2.algo.ts:406","pc":[2090]},{"teal":2238,"source":"contracts/BalancedPoolV2.algo.ts:406","pc":[2091]},{"teal":2239,"source":"contracts/BalancedPoolV2.algo.ts:406","pc":[2092,2093]},{"teal":2243,"source":"contracts/BalancedPoolV2.algo.ts:407","pc":[2094]},{"teal":2244,"source":"contracts/BalancedPoolV2.algo.ts:407","pc":[2095,2096]},{"teal":2245,"source":"contracts/BalancedPoolV2.algo.ts:407","pc":[2097]},{"teal":2246,"source":"contracts/BalancedPoolV2.algo.ts:407","pc":[2098]},{"teal":2247,"source":"contracts/BalancedPoolV2.algo.ts:407","pc":[2099]},{"teal":2250,"source":"contracts/BalancedPoolV2.algo.ts:407","errorMessage":"box value does not exist: this.balances(asset).value","pc":[2100]},{"teal":2251,"source":"contracts/BalancedPoolV2.algo.ts:407","pc":[2101]},{"teal":2254,"source":"contracts/BalancedPoolV2.algo.ts:404","pc":[2102,2103]},{"teal":2255,"source":"contracts/BalancedPoolV2.algo.ts:404","pc":[2104]},{"teal":2260,"source":"contracts/BalancedPoolV2.algo.ts:410","pc":[2105,2106]},{"teal":2263,"source":"contracts/BalancedPoolV2.algo.ts:411","pc":[2107,2108,2109]},{"teal":2264,"source":"contracts/BalancedPoolV2.algo.ts:411","pc":[2110]},{"teal":2267,"source":"contracts/BalancedPoolV2.algo.ts:411","pc":[2111,2112,2113]},{"teal":2268,"source":"contracts/BalancedPoolV2.algo.ts:411","pc":[2114]},{"teal":2271,"source":"contracts/BalancedPoolV2.algo.ts:411","pc":[2115,2116,2117]},{"teal":2272,"source":"contracts/BalancedPoolV2.algo.ts:411","pc":[2118]},{"teal":2275,"source":"contracts/BalancedPoolV2.algo.ts:410","pc":[2119,2120,2121]},{"teal":2276,"source":"contracts/BalancedPoolV2.algo.ts:410","pc":[2122]},{"teal":2277,"source":"contracts/BalancedPoolV2.algo.ts:410","pc":[2123]},{"teal":2278,"source":"contracts/BalancedPoolV2.algo.ts:410","pc":[2124]},{"teal":2279,"source":"contracts/BalancedPoolV2.algo.ts:410","pc":[2125]},{"teal":2280,"source":"contracts/BalancedPoolV2.algo.ts:410","pc":[2126]},{"teal":2284,"source":"contracts/BalancedPoolV2.algo.ts:410","pc":[2127,2128,2129]},{"teal":2287,"source":"contracts/BalancedPoolV2.algo.ts:410","pc":[2130]},{"teal":2288,"source":"contracts/BalancedPoolV2.algo.ts:410","pc":[2131,2132]},{"teal":2292,"source":"contracts/BalancedPoolV2.algo.ts:412","pc":[2133]},{"teal":2293,"source":"contracts/BalancedPoolV2.algo.ts:412","pc":[2134]},{"teal":2294,"source":"contracts/BalancedPoolV2.algo.ts:412","pc":[2135,2136,2137]},{"teal":2295,"source":"contracts/BalancedPoolV2.algo.ts:412","pc":[2138,2139]},{"teal":2296,"source":"contracts/BalancedPoolV2.algo.ts:412","pc":[2140]},{"teal":2297,"source":"contracts/BalancedPoolV2.algo.ts:412","pc":[2141,2142]},{"teal":2298,"source":"contracts/BalancedPoolV2.algo.ts:412","pc":[2143]},{"teal":2299,"source":"contracts/BalancedPoolV2.algo.ts:412","pc":[2144]},{"teal":2300,"source":"contracts/BalancedPoolV2.algo.ts:412","pc":[2145]},{"teal":2301,"source":"contracts/BalancedPoolV2.algo.ts:412","pc":[2146,2147]},{"teal":2302,"source":"contracts/BalancedPoolV2.algo.ts:412","pc":[2148]},{"teal":2303,"source":"contracts/BalancedPoolV2.algo.ts:412","pc":[2149]},{"teal":2304,"source":"contracts/BalancedPoolV2.algo.ts:412","pc":[2150]},{"teal":2305,"source":"contracts/BalancedPoolV2.algo.ts:412","pc":[2151]},{"teal":2306,"source":"contracts/BalancedPoolV2.algo.ts:412","pc":[2152,2153]},{"teal":2310,"source":"contracts/BalancedPoolV2.algo.ts:413","pc":[2154]},{"teal":2311,"source":"contracts/BalancedPoolV2.algo.ts:413","pc":[2155]},{"teal":2312,"source":"contracts/BalancedPoolV2.algo.ts:413","pc":[2156,2157,2158]},{"teal":2313,"source":"contracts/BalancedPoolV2.algo.ts:413","pc":[2159,2160]},{"teal":2314,"source":"contracts/BalancedPoolV2.algo.ts:413","pc":[2161]},{"teal":2315,"source":"contracts/BalancedPoolV2.algo.ts:413","pc":[2162,2163]},{"teal":2316,"source":"contracts/BalancedPoolV2.algo.ts:413","pc":[2164]},{"teal":2317,"source":"contracts/BalancedPoolV2.algo.ts:413","pc":[2165]},{"teal":2318,"source":"contracts/BalancedPoolV2.algo.ts:413","pc":[2166]},{"teal":2319,"source":"contracts/BalancedPoolV2.algo.ts:413","pc":[2167,2168]},{"teal":2320,"source":"contracts/BalancedPoolV2.algo.ts:413","pc":[2169]},{"teal":2321,"source":"contracts/BalancedPoolV2.algo.ts:413","pc":[2170]},{"teal":2322,"source":"contracts/BalancedPoolV2.algo.ts:413","pc":[2171]},{"teal":2323,"source":"contracts/BalancedPoolV2.algo.ts:413","pc":[2172]},{"teal":2324,"source":"contracts/BalancedPoolV2.algo.ts:413","pc":[2173,2174]},{"teal":2328,"source":"contracts/BalancedPoolV2.algo.ts:415","pc":[2175]},{"teal":2329,"source":"contracts/BalancedPoolV2.algo.ts:415","pc":[2176,2177]},{"teal":2330,"source":"contracts/BalancedPoolV2.algo.ts:415","pc":[2178]},{"teal":2331,"source":"contracts/BalancedPoolV2.algo.ts:415","pc":[2179]},{"teal":2332,"source":"contracts/BalancedPoolV2.algo.ts:415","pc":[2180]},{"teal":2335,"source":"contracts/BalancedPoolV2.algo.ts:415","errorMessage":"box value does not exist: this.balances(assetIn).value","pc":[2181]},{"teal":2336,"source":"contracts/BalancedPoolV2.algo.ts:415","pc":[2182]},{"teal":2337,"source":"contracts/BalancedPoolV2.algo.ts:415","pc":[2183,2184]},{"teal":2341,"source":"contracts/BalancedPoolV2.algo.ts:416","pc":[2185]},{"teal":2342,"source":"contracts/BalancedPoolV2.algo.ts:416","pc":[2186,2187]},{"teal":2343,"source":"contracts/BalancedPoolV2.algo.ts:416","pc":[2188]},{"teal":2344,"source":"contracts/BalancedPoolV2.algo.ts:416","pc":[2189]},{"teal":2345,"source":"contracts/BalancedPoolV2.algo.ts:416","pc":[2190]},{"teal":2348,"source":"contracts/BalancedPoolV2.algo.ts:416","errorMessage":"box value does not exist: this.balances(assetOut).value","pc":[2191]},{"teal":2349,"source":"contracts/BalancedPoolV2.algo.ts:416","pc":[2192]},{"teal":2350,"source":"contracts/BalancedPoolV2.algo.ts:416","pc":[2193,2194]},{"teal":2354,"source":"contracts/BalancedPoolV2.algo.ts:418","pc":[2195,2196]},{"teal":2355,"source":"contracts/BalancedPoolV2.algo.ts:418","pc":[2197,2198]},{"teal":2356,"source":"contracts/BalancedPoolV2.algo.ts:418","pc":[2199]},{"teal":2357,"source":"contracts/BalancedPoolV2.algo.ts:418","pc":[2200]},{"teal":2358,"source":"contracts/BalancedPoolV2.algo.ts:418","pc":[2201]},{"teal":2361,"source":"contracts/BalancedPoolV2.algo.ts:418","errorMessage":"box value does not exist: this.weights(from).value","pc":[2202]},{"teal":2362,"source":"contracts/BalancedPoolV2.algo.ts:418","pc":[2203]},{"teal":2363,"source":"contracts/BalancedPoolV2.algo.ts:418","pc":[2204,2205]},{"teal":2367,"source":"contracts/BalancedPoolV2.algo.ts:419","pc":[2206,2207]},{"teal":2368,"source":"contracts/BalancedPoolV2.algo.ts:419","pc":[2208,2209]},{"teal":2369,"source":"contracts/BalancedPoolV2.algo.ts:419","pc":[2210]},{"teal":2370,"source":"contracts/BalancedPoolV2.algo.ts:419","pc":[2211]},{"teal":2371,"source":"contracts/BalancedPoolV2.algo.ts:419","pc":[2212]},{"teal":2374,"source":"contracts/BalancedPoolV2.algo.ts:419","errorMessage":"box value does not exist: this.weights(to).value","pc":[2213]},{"teal":2375,"source":"contracts/BalancedPoolV2.algo.ts:419","pc":[2214]},{"teal":2376,"source":"contracts/BalancedPoolV2.algo.ts:419","pc":[2215,2216]},{"teal":2380,"source":"contracts/BalancedPoolV2.algo.ts:421","pc":[2217,2218]},{"teal":2381,"source":"contracts/BalancedPoolV2.algo.ts:421","pc":[2219,2220]},{"teal":2382,"source":"contracts/BalancedPoolV2.algo.ts:421","pc":[2221,2222]},{"teal":2383,"source":"contracts/BalancedPoolV2.algo.ts:421","pc":[2223,2224]},{"teal":2384,"source":"contracts/BalancedPoolV2.algo.ts:421","pc":[2225,2226]},{"teal":2385,"source":"contracts/BalancedPoolV2.algo.ts:421","pc":[2227,2228,2229]},{"teal":2388,"source":"contracts/BalancedPoolV2.algo.ts:410","pc":[2230,2231]},{"teal":2391,"source":"contracts/BalancedPoolV2.algo.ts:410","pc":[2232,2233]},{"teal":2392,"source":"contracts/BalancedPoolV2.algo.ts:410","pc":[2234]},{"teal":2395,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2235,2236]},{"teal":2396,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2237,2238,2239]},{"teal":2397,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2240,2241,2242,2243,2244,2245]},{"teal":2398,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2246,2247,2248]},{"teal":2399,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2249,2250,2251,2252]},{"teal":2402,"source":"contracts/BalancedPoolV2.algo.ts:7","errorMessage":"this contract does not implement the given ABI method for create NoOp","pc":[2253]},{"teal":2405,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2254,2255,2256,2257,2258,2259]},{"teal":2406,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2260,2261,2262,2263,2264,2265]},{"teal":2407,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2266,2267,2268,2269,2270,2271]},{"teal":2408,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2272,2273,2274,2275,2276,2277]},{"teal":2409,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2278,2279,2280,2281,2282,2283]},{"teal":2410,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2284,2285,2286,2287,2288,2289]},{"teal":2411,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2290,2291,2292,2293,2294,2295]},{"teal":2412,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2296,2297,2298,2299,2300,2301]},{"teal":2413,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2302,2303,2304]},{"teal":2414,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2305,2306,2307,2308,2309,2310,2311,2312,2313,2314,2315,2316,2317,2318,2319,2320,2321,2322]},{"teal":2417,"source":"contracts/BalancedPoolV2.algo.ts:7","errorMessage":"this contract does not implement the given ABI method for call NoOp","pc":[2323]},{"teal":2420,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2324,2325,2326]},{"teal":2421,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2327,2328,2329,2330,2331,2332,2333,2334,2335,2336,2337,2338]},{"teal":2422,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2339,2340]},{"teal":2423,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2341]},{"teal":2424,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2342]},{"teal":2425,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2343]},{"teal":2429,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2344,2345,2346]},{"teal":2430,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2347,2348]},{"teal":2431,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2349]},{"teal":2432,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2350]},{"teal":2433,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2351,2352,2353]},{"teal":2434,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2354,2355,2356]},{"teal":2435,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2357]},{"teal":2438,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2358,2359]},{"teal":2439,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2360,2361]},{"teal":2440,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2362]},{"teal":2441,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2363]},{"teal":2442,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2364]},{"teal":2443,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2365,2366,2367]},{"teal":2444,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2368,2369]},{"teal":2445,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2370,2371]},{"teal":2446,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2372]},{"teal":2447,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2373,2374,2375]},{"teal":2448,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2376,2377,2378]},{"teal":2451,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2379]},{"teal":2454,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2380,2381]},{"teal":2455,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2382,2383]},{"teal":2456,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2384]},{"teal":2457,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2385,2386,2387]},{"teal":2458,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2388]},{"teal":2459,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2389]}],"pcOffsetMethod":"none"},"clear":{"sourceInfo":[],"pcOffsetMethod":"none"}},"source":{"approval":"","clear":"I3ByYWdtYSB2ZXJzaW9uIDEw"},"byteCode":{"approval":"CiAKAAjAhD0BCgYEIAIFJgsACWJhbGFuY2VzXwZhc3NldHMJcHJvdmlkZWRfBXRva2VuCHdlaWdodHNfBBUffHUGYnVybmVkAwqBAQgAAAAAAAAAAAdtYW5hZ2VyMRgUIQULMRkIjQwITgAAAAAAAAAAAAAIOwAAAAAAAAAAAAAAiAACJUOKAAAnCjYyAHIHSGcnByJniScGNhoCVwIANhoBVwIAiAAFFlCwJUOKAgEoSYgEYIv/FSMKIQgPRIv/FSMKi/4VIwoSRCKMACKMAYsBi/8VIwoMQQBWi/81/yKLASMLCDT/TCNYF4gDbYv+Nf8iiwEjCwg0/0wjWBeL/zX/IosBIwsINP9MI1gXiwGIA2yLAIv+Nf8iiwEjCwg0/0wjWBcIjACLASUIjAFC/58qi/9JFSMKFlcGAkxQZySLAIgGmCUORIgDdCcEZIwARgGJNhoDSRUhBxJENhoCFzYaAReIAAIlQ4oDACiIA6WIA60qZFcCADX/Iov/IwsINP9MI1gXjACADEFzc2V0IElEID0+IIsAFlCwiwCIArspiwAWUL5EF4v+CCmLABZQTBa/K4v9UL1MSBRBAAgri/1QgUC5SCuL/VC+RFcCADX/Iov/IwsINP9MK4v9UL5EVwIANf8ii/8jCwg0/0wjWBeL/ggWXSuL/VBJvEhMSRUjChZXBgJMUL+JJwY2GgFJFSEHEkSIAAUWULAlQ4oBAShHBIgC74gC9yuL/1CMACKMASKMAosCiwC+RFcCABUjCgxBACmLAL5EVwIANf8iiwIjCwg0/0wjWBciDUEABosBJQiMAYsCJQiMAkL/xyKMA4gFTiISQQAPgcCEPSEEIQWUC4wDQgAHi/+IBHuMAyKMBIsEK4v/UL5EVwIAFSMKDEEAMyuL/1C+RFcCADX/IosEIwsINP9MJwldK4v/UEm8SExJFSMKFlcGAkxQv4sEJQiMBEL/u7EhBrIQi/+yFIsDshInBGSyESKyAbOLA4wARgSJNhoCFzYaAUkVIQcSRIgAAiVDigIAKEcFiAIGiAIOi/4iDUSIBKiMACpkVwIAFSMKjAEijAKLAosBDEEAWSpkVwIANf8iiwIjCwg0/0wjWBeMAymLAxZQvkQXjASL/osEHSKLAB9ISEwURIwFKYsDFlCLBIsFCRa/sSEGshCL/7IUiwWyEosDshEisgGziwIlCIwCQv+fJwdki/4IJwdMZ4knBjYaBBc2GgMXNhoCFzYaAUkVIQcSRIgABRZQsCVDigQBKEcGiAFYiAFgKmRXAgA1/yKL/iMLCDT/TCNYF4wAKmRXAgA1/yKL/SMLCDT/TCNYF4wBKYsAFlC+RBeMAimLARZQvkQXjAMnBYv+FlC+RBeMBCcFi/0WUL5EF4wFi/yLBYsDiwSLAogCbYwGiwYWsCmLABZQiwKL/AgWvymLARZQiwOLBgkWv7EhBrIQi/+yFIsGshKLAbIRIrIBs4sGjABGBomKAQAyCov/cABMSEEAAYmxIQayEDIKshSL/7IRIrISIrIBs4mKAwAnBYv/FlC9TEgUQQAJJwWL/xZQI7lIKYv+FlC9TEgUQQAIKYv+FlAjuUgnBYv/FlCL/Ra/KYv+FlAnCb+JigAAJwRkIhJBAEonBLGBA7IQIQSBEJSyIiEFsiMyCrIqMgqyKTIDsiwyA7IrIrIkgA1CYWxhbmNlZFBvb2wtNjIAiAQkULImgAJMULIlIrIBs7Q8Z4mKAAAxACcKZBJEiYoAACcEZCITRImKAQEoRweL/yINRCKMAIv/JAxBACUljAAkSR0ii/8fSEhMFESMAosCJAkkHSKLAh9ISEwURIwBQgARi/8kCSQdIov/H0hITBREjAGLAYwDiwGMBCKMBbEhBbIQIrIBJwhJsh6yHyEJshmzIQiMBosGIQQOQQA/iwSLAR0iJB9ISEwURIwEIosEIosGH0hITBREjAeLBUEACIsDiwcJQgAFiwOLBwiMA4sFFIwFiwYlCIwGQv+5iwAWiwMWUIwARgeJigEBKEcCJIwAJIwBJYwCiwIhBA5BACKLAYv/HSKLAiQLH0hITBREjAGLAIsBCIwAiwIlCIwCQv/WiwCMAEYCiYoCAShHBIv/IhJBAAQiQgBNi/+I/umMAIsANf80/1cACBeMAYsANf80/1cICBeMAov+iwIdIiQfSEhMFESMA4sDiP98jASLASUSQQAPJEkdIosEH0hITBREQgACiwSMAEYEiYoFAShHA4v7gdj8PB0iJB9ISEwURIwAi/8kHSKL/4sACB9ISEwURIwBi/4kHSKL/B9ISEwURIwCiwKLAYj/XowDi/8WsIsAFrCLARawiwIWsIsDFrCL/SSLAwkdIiQfSEhMFEQWsIv9JIsDCR0iJB9ISEwURIwARgOJigEBKEcIKmRXAgAVIwqMAIsAJQ9EJYwBsSEFshAisgEnCEmyHrIfIQmyGbMijAKLAosADEEAaipkVwIANf8iiwIjCwg0/0wjWBeMAymLAxZQvkQXjAQri/9QvkRXAgA1/yKLAiMLCDT/TCNYF4wFiwSLBQmMBosEIg1EiwUiDUEAFosFJB0iiwYfSEhMFESMB4sBiwcLjAGLAiUIjAJC/46IABaMCIsIiwEkCR0iJB9ISEwURIwARgiJigABJwRkcQBIJwRkcQhIJwRkcABICScHZAmJigIBi/+L/g1BAAiL/4v+CUIABYv+i/8JiScGiAAFFlCwJUOKAAEnBGSJJwY2GgEXiAAFFlCwJUOKAQEoKmRXAgA1/yKL/yMLCDT/TCNYF4wAKYsAFlC+RBeMAIknBjYaAxc2GgIXNhoBF4gABRZQsCVDigMBKEcFKmRXAgA1/yKL/yMLCDT/TCNYF4wAKmRXAgA1/yKL/iMLCDT/TCNYF4wBKYsAFlC+RBeMAimLARZQvkQXjAMnBYv/FlC+RBeMBCcFi/4WUL5EF4wFi/2LBYsDiwSLAoj92IwARgWJMRtB98GABLhEezY2GgCOAfe0AIAE5jX9tYAEq99+FYAEKnQAT4AEP7HQm4AEjTJeKYAEIOtTlIAEQTEK7oAEKSAFgzYaAI4I94T4QPj3+eH6gv7j/vT/JgCKAQGACjAxMjM0NTY3ODmL/yVYiYoBAYv/IhJBAASAATCJi/8hBAoiDUEAC4v/IQQKiP/gQgABKIv/IQQYiP/AUIk=","clear":"Cg=="},"compilerInfo":{"compiler":"algod","compilerVersion":{"major":4,"minor":0,"patch":2,"commitHash":"6b940281"}}} as unknown as Arc56Contract

/**
 * A state record containing binary data
 */
export interface BinaryState {
  /**
   * Gets the state value as a Uint8Array
   */
  asByteArray(): Uint8Array | undefined
  /**
   * Gets the state value as a string
   */
  asString(): string | undefined
}

class BinaryStateValue implements BinaryState {
  constructor(private value: Uint8Array | undefined) {}

  asByteArray(): Uint8Array | undefined {
    return this.value
  }

  asString(): string | undefined {
    return this.value !== undefined ? Buffer.from(this.value).toString('utf-8') : undefined
  }
}

/**
 * Expands types for IntelliSense so they are more human readable
 * See https://stackoverflow.com/a/69288824
 */
export type Expand<T> = T extends (...args: infer A) => infer R
  ? (...args: Expand<A>) => Expand<R>
  : T extends infer O
    ? { [K in keyof O]: O[K] }
    : never


/**
 * The argument types for the BalancedPoolV2 contract
 */
export type BalancedPoolV2Args = {
  /**
   * The object representation of the arguments for each method
   */
  obj: {
    'createApplication()void': Record<string, never>
    'bootstrap(uint64[],uint64[])uint64': {
      /**
       * assets of the pool
       */
      assetIds: bigint[] | number[]
      /**
      * weights of the pool
      uint64 - LP Token created ID

       */
      weights: bigint[] | number[]
    }
    'addLiquidity(uint64,uint64,address)void': {
      /**
       * index of the token in the pool
       */
      index: bigint | number
      /**
       * amount of token sent
       */
      amount: bigint | number
      /**
       * the sender
       */
      sender: string
    }
    'getLiquidity(address)uint64': {
      /**
       * the sender
       */
      sender: string
    }
    'burnLiquidity(address,uint64)void': {
      sender: string
      amountLp: bigint | number
    }
    'swap(address,uint64,uint64,uint64)uint64': {
      sender: string
      from: bigint | number
      to: bigint | number
      amount: bigint | number
    }
    'getToken()uint64': Record<string, never>
    'getBalance(uint64)uint64': {
      index: bigint | number
    }
    'estimateSwap(uint64,uint64,uint64)uint64': {
      from: bigint | number
      to: bigint | number
      amount: bigint | number
    }
  }
  /**
   * The tuple representation of the arguments for each method
   */
  tuple: {
    'createApplication()void': []
    'bootstrap(uint64[],uint64[])uint64': [assetIds: bigint[] | number[], weights: bigint[] | number[]]
    'addLiquidity(uint64,uint64,address)void': [index: bigint | number, amount: bigint | number, sender: string]
    'getLiquidity(address)uint64': [sender: string]
    'burnLiquidity(address,uint64)void': [sender: string, amountLp: bigint | number]
    'swap(address,uint64,uint64,uint64)uint64': [sender: string, from: bigint | number, to: bigint | number, amount: bigint | number]
    'getToken()uint64': []
    'getBalance(uint64)uint64': [index: bigint | number]
    'estimateSwap(uint64,uint64,uint64)uint64': [from: bigint | number, to: bigint | number, amount: bigint | number]
  }
}

/**
 * The return type for each method
 */
export type BalancedPoolV2Returns = {
  'createApplication()void': void
  'bootstrap(uint64[],uint64[])uint64': bigint
  'addLiquidity(uint64,uint64,address)void': void
  'getLiquidity(address)uint64': bigint
  'burnLiquidity(address,uint64)void': void
  'swap(address,uint64,uint64,uint64)uint64': bigint
  'getToken()uint64': bigint
  'getBalance(uint64)uint64': bigint
  'estimateSwap(uint64,uint64,uint64)uint64': bigint
}

/**
 * Defines the types of available calls and state of the BalancedPoolV2 smart contract.
 */
export type BalancedPoolV2Types = {
  /**
   * Maps method signatures / names to their argument and return types.
   */
  methods:
    & Record<'createApplication()void' | 'createApplication', {
      argsObj: BalancedPoolV2Args['obj']['createApplication()void']
      argsTuple: BalancedPoolV2Args['tuple']['createApplication()void']
      returns: BalancedPoolV2Returns['createApplication()void']
    }>
    & Record<'bootstrap(uint64[],uint64[])uint64' | 'bootstrap', {
      argsObj: BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64']
      argsTuple: BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']
      returns: BalancedPoolV2Returns['bootstrap(uint64[],uint64[])uint64']
    }>
    & Record<'addLiquidity(uint64,uint64,address)void' | 'addLiquidity', {
      argsObj: BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void']
      argsTuple: BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']
      returns: BalancedPoolV2Returns['addLiquidity(uint64,uint64,address)void']
    }>
    & Record<'getLiquidity(address)uint64' | 'getLiquidity', {
      argsObj: BalancedPoolV2Args['obj']['getLiquidity(address)uint64']
      argsTuple: BalancedPoolV2Args['tuple']['getLiquidity(address)uint64']
      returns: BalancedPoolV2Returns['getLiquidity(address)uint64']
    }>
    & Record<'burnLiquidity(address,uint64)void' | 'burnLiquidity', {
      argsObj: BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void']
      argsTuple: BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']
      returns: BalancedPoolV2Returns['burnLiquidity(address,uint64)void']
    }>
    & Record<'swap(address,uint64,uint64,uint64)uint64' | 'swap', {
      argsObj: BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)uint64']
      argsTuple: BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)uint64']
      returns: BalancedPoolV2Returns['swap(address,uint64,uint64,uint64)uint64']
    }>
    & Record<'getToken()uint64' | 'getToken', {
      argsObj: BalancedPoolV2Args['obj']['getToken()uint64']
      argsTuple: BalancedPoolV2Args['tuple']['getToken()uint64']
      returns: BalancedPoolV2Returns['getToken()uint64']
    }>
    & Record<'getBalance(uint64)uint64' | 'getBalance', {
      argsObj: BalancedPoolV2Args['obj']['getBalance(uint64)uint64']
      argsTuple: BalancedPoolV2Args['tuple']['getBalance(uint64)uint64']
      returns: BalancedPoolV2Returns['getBalance(uint64)uint64']
    }>
    & Record<'estimateSwap(uint64,uint64,uint64)uint64' | 'estimateSwap', {
      argsObj: BalancedPoolV2Args['obj']['estimateSwap(uint64,uint64,uint64)uint64']
      argsTuple: BalancedPoolV2Args['tuple']['estimateSwap(uint64,uint64,uint64)uint64']
      returns: BalancedPoolV2Returns['estimateSwap(uint64,uint64,uint64)uint64']
    }>
  /**
   * Defines the shape of the state of the application.
   */
  state: {
    global: {
      keys: {
        manager: string
        token: bigint
        burned: bigint
        assets: bigint[]
      }
      maps: {}
    }
    box: {
      keys: {}
      maps: {
        weights: Map<bigint | number, bigint>
        balances: Map<bigint | number, bigint>
        provided: Map<string, bigint[]>
        minRatios: Map<string, bigint>
      }
    }
  }
}

/**
 * Defines the possible abi call signatures.
 */
export type BalancedPoolV2Signatures = keyof BalancedPoolV2Types['methods']
/**
 * Defines the possible abi call signatures for methods that return a non-void value.
 */
export type BalancedPoolV2NonVoidMethodSignatures = keyof BalancedPoolV2Types['methods'] extends infer T ? T extends keyof BalancedPoolV2Types['methods'] ? MethodReturn<T> extends void ? never : T  : never : never
/**
 * Defines an object containing all relevant parameters for a single call to the contract.
 */
export type CallParams<TArgs> = Expand<
  Omit<AppClientMethodCallParams, 'method' | 'args' | 'onComplete'> &
    {
      /** The args for the ABI method call, either as an ordered array or an object */
      args: Expand<TArgs>
    }
>
/**
 * Maps a method signature from the BalancedPoolV2 smart contract to the method's arguments in either tuple or struct form
 */
export type MethodArgs<TSignature extends BalancedPoolV2Signatures> = BalancedPoolV2Types['methods'][TSignature]['argsObj' | 'argsTuple']
/**
 * Maps a method signature from the BalancedPoolV2 smart contract to the method's return type
 */
export type MethodReturn<TSignature extends BalancedPoolV2Signatures> = BalancedPoolV2Types['methods'][TSignature]['returns']

/**
 * Defines the shape of the keyed global state of the application.
 */
export type GlobalKeysState = BalancedPoolV2Types['state']['global']['keys']

/**
 * Defines the shape of the keyed box state of the application.
 */
export type BoxKeysState = BalancedPoolV2Types['state']['box']['keys']


/**
 * Defines supported create method params for this smart contract
 */
export type BalancedPoolV2CreateCallParams =
  | Expand<CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & {method: 'createApplication'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
  | Expand<CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & {method: 'createApplication()void'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
/**
 * Defines arguments required for the deploy method.
 */
export type BalancedPoolV2DeployParams = Expand<Omit<AppFactoryDeployParams, 'createParams' | 'updateParams' | 'deleteParams'> & {
  /**
   * Create transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  createParams?: BalancedPoolV2CreateCallParams
}>


/**
 * Exposes methods for constructing `AppClient` params objects for ABI calls to the BalancedPoolV2 smart contract
 */
export abstract class BalancedPoolV2ParamsFactory {
  /**
   * Gets available create ABI call param factories
   */
  static get create() {
    return {
      _resolveByMethod<TParams extends BalancedPoolV2CreateCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'createApplication':
          case 'createApplication()void':
            return BalancedPoolV2ParamsFactory.create.createApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs create ABI call params for the BalancedPoolV2 smart contract using the createApplication()void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      createApplication(params: CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC}): AppClientMethodCallParams & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC} {
        return {
          ...params,
          method: 'createApplication()void' as const,
          args: Array.isArray(params.args) ? params.args : [],
        }
      },
    }
  }

  /**
   * Constructs a no op call for the bootstrap(uint64[],uint64[])uint64 ABI method
   *
   * Bootstrap the pool by assigning assets and weights, create the LP tokens
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static bootstrap(params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'bootstrap(uint64[],uint64[])uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.assetIds, params.args.weights],
    }
  }
  /**
   * Constructs a no op call for the addLiquidity(uint64,uint64,address)void ABI method
   *
   * Provide one token liquidity to the pool
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static addLiquidity(params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'addLiquidity(uint64,uint64,address)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.index, params.args.amount, params.args.sender],
    }
  }
  /**
   * Constructs a no op call for the getLiquidity(address)uint64 ABI method
   *
  * Compute the liquidity for the given sender based on the state
  in the contract

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getLiquidity(params: CallParams<BalancedPoolV2Args['obj']['getLiquidity(address)uint64'] | BalancedPoolV2Args['tuple']['getLiquidity(address)uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getLiquidity(address)uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.sender],
    }
  }
  /**
   * Constructs a no op call for the burnLiquidity(address,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static burnLiquidity(params: CallParams<BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void'] | BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'burnLiquidity(address,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.sender, params.args.amountLp],
    }
  }
  /**
   * Constructs a no op call for the swap(address,uint64,uint64,uint64)uint64 ABI method
   *
   * Swap the token from for the token to
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static swap(params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'swap(address,uint64,uint64,uint64)uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.sender, params.args.from, params.args.to, params.args.amount],
    }
  }
  /**
   * Constructs a no op call for the getToken()uint64 ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getToken(params: CallParams<BalancedPoolV2Args['obj']['getToken()uint64'] | BalancedPoolV2Args['tuple']['getToken()uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getToken()uint64' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the getBalance(uint64)uint64 ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getBalance(params: CallParams<BalancedPoolV2Args['obj']['getBalance(uint64)uint64'] | BalancedPoolV2Args['tuple']['getBalance(uint64)uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getBalance(uint64)uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.index],
    }
  }
  /**
   * Constructs a no op call for the estimateSwap(uint64,uint64,uint64)uint64 ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static estimateSwap(params: CallParams<BalancedPoolV2Args['obj']['estimateSwap(uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['estimateSwap(uint64,uint64,uint64)uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'estimateSwap(uint64,uint64,uint64)uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.from, params.args.to, params.args.amount],
    }
  }
}

/**
 * A factory to create and deploy one or more instance of the BalancedPoolV2 smart contract and to create one or more app clients to interact with those (or other) app instances
 */
export class BalancedPoolV2Factory {
  /**
   * The underlying `AppFactory` for when you want to have more flexibility
   */
  public readonly appFactory: _AppFactory

  /**
   * Creates a new instance of `BalancedPoolV2Factory`
   *
   * @param params The parameters to initialise the app factory with
   */
  constructor(params: Omit<AppFactoryParams, 'appSpec'>) {
    this.appFactory = new _AppFactory({
      ...params,
      appSpec: APP_SPEC,
    })
  }
  
  /** The name of the app (from the ARC-32 / ARC-56 app spec or override). */
  public get appName() {
    return this.appFactory.appName
  }
  
  /** The ARC-56 app spec being used */
  get appSpec() {
    return APP_SPEC
  }
  
  /** A reference to the underlying `AlgorandClient` this app factory is using. */
  public get algorand(): AlgorandClientInterface {
    return this.appFactory.algorand
  }
  
  /**
   * Returns a new `AppClient` client for an app instance of the given ID.
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public getAppClientById(params: AppFactoryAppClientParams) {
    return new BalancedPoolV2Client(this.appFactory.getAppClientById(params))
  }
  
  /**
   * Returns a new `AppClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public async getAppClientByCreatorAndName(
    params: AppFactoryResolveAppClientByCreatorAndNameParams,
  ) {
    return new BalancedPoolV2Client(await this.appFactory.getAppClientByCreatorAndName(params))
  }

  /**
   * Idempotently deploys the BalancedPoolV2 smart contract.
   *
   * @param params The arguments for the contract calls and any additional parameters for the call
   * @returns The deployment result
   */
  public async deploy(params: BalancedPoolV2DeployParams = {}) {
    const result = await this.appFactory.deploy({
      ...params,
      createParams: params.createParams?.method ? BalancedPoolV2ParamsFactory.create._resolveByMethod(params.createParams) : params.createParams ? params.createParams as (BalancedPoolV2CreateCallParams & { args: Uint8Array[] }) : undefined,
    })
    return { result: result.result, appClient: new BalancedPoolV2Client(result.appClient) }
  }

  /**
   * Get parameters to create transactions (create and deploy related calls) for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the BalancedPoolV2 smart contract using the createApplication()void ABI method.
       *
       * createApplication method called at creation
       *
       * @param params The params for the smart contract call
       * @returns The create params
       */
      createApplication: (params: CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.params.create(BalancedPoolV2ParamsFactory.create.createApplication(params))
      },
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the BalancedPoolV2 smart contract using the createApplication()void ABI method.
       *
       * createApplication method called at creation
       *
       * @param params The params for the smart contract call
       * @returns The create transaction
       */
      createApplication: (params: CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.createTransaction.create(BalancedPoolV2ParamsFactory.create.createApplication(params))
      },
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the BalancedPoolV2 smart contract using an ABI method call using the createApplication()void ABI method.
       *
       * createApplication method called at creation
       *
       * @param params The params for the smart contract call
       * @returns The create result
       */
      createApplication: async (params: CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        const result = await this.appFactory.send.create(BalancedPoolV2ParamsFactory.create.createApplication(params))
        return { result: { ...result.result, return: result.result.return as unknown as (undefined | BalancedPoolV2Returns['createApplication()void']) }, appClient: new BalancedPoolV2Client(result.appClient) }
      },
    },

  }

}
/**
 * A client to make calls to the BalancedPoolV2 smart contract
 */
export class BalancedPoolV2Client {
  /**
   * The underlying `AppClient` for when you want to have more flexibility
   */
  public readonly appClient: _AppClient

  /**
   * Creates a new instance of `BalancedPoolV2Client`
   *
   * @param appClient An `AppClient` instance which has been created with the BalancedPoolV2 app spec
   */
  constructor(appClient: _AppClient)
  /**
   * Creates a new instance of `BalancedPoolV2Client`
   *
   * @param params The parameters to initialise the app client with
   */
  constructor(params: Omit<AppClientParams, 'appSpec'>)
  constructor(appClientOrParams: _AppClient | Omit<AppClientParams, 'appSpec'>) {
    this.appClient = appClientOrParams instanceof _AppClient ? appClientOrParams : new _AppClient({
      ...appClientOrParams,
      appSpec: APP_SPEC,
    })
  }
  
  /**
   * Checks for decode errors on the given return value and maps the return value to the return type for the given method
   * @returns The typed return value or undefined if there was no value
   */
  decodeReturnValue<TSignature extends BalancedPoolV2NonVoidMethodSignatures>(method: TSignature, returnValue: ABIReturn | undefined) {
    return returnValue !== undefined ? getArc56ReturnValue<MethodReturn<TSignature>>(returnValue, this.appClient.getABIMethod(method), APP_SPEC.structs) : undefined
  }
  
  /**
   * Returns a new `BalancedPoolV2Client` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   * @param params The parameters to create the app client
   */
  public static async fromCreatorAndName(params: Omit<ResolveAppClientByCreatorAndName, 'appSpec'>): Promise<BalancedPoolV2Client> {
    return new BalancedPoolV2Client(await _AppClient.fromCreatorAndName({...params, appSpec: APP_SPEC}))
  }
  
  /**
   * Returns an `BalancedPoolV2Client` instance for the current network based on
   * pre-determined network-specific app IDs specified in the ARC-56 app spec.
   *
   * If no IDs are in the app spec or the network isn't recognised, an error is thrown.
   * @param params The parameters to create the app client
   */
  static async fromNetwork(
    params: Omit<ResolveAppClientByNetwork, 'appSpec'>
  ): Promise<BalancedPoolV2Client> {
    return new BalancedPoolV2Client(await _AppClient.fromNetwork({...params, appSpec: APP_SPEC}))
  }
  
  /** The ID of the app instance this client is linked to. */
  public get appId() {
    return this.appClient.appId
  }
  
  /** The app address of the app instance this client is linked to. */
  public get appAddress() {
    return this.appClient.appAddress
  }
  
  /** The name of the app. */
  public get appName() {
    return this.appClient.appName
  }
  
  /** The ARC-56 app spec being used */
  public get appSpec() {
    return this.appClient.appSpec
  }
  
  /** A reference to the underlying `AlgorandClient` this app client is using. */
  public get algorand(): AlgorandClientInterface {
    return this.appClient.algorand
  }

  /**
   * Get parameters to create transactions for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Makes a clear_state call to an existing instance of the BalancedPoolV2 smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.params.bare.clearState(params)
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `bootstrap(uint64[],uint64[])uint64` ABI method.
     *
     * Bootstrap the pool by assigning assets and weights, create the LP tokens
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    bootstrap: (params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.bootstrap(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `addLiquidity(uint64,uint64,address)void` ABI method.
     *
     * Provide one token liquidity to the pool
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    addLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.addLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getLiquidity(address)uint64` ABI method.
     *
    * Compute the liquidity for the given sender based on the state
    in the contract

     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['getLiquidity(address)uint64'] | BalancedPoolV2Args['tuple']['getLiquidity(address)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.getLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `burnLiquidity(address,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    burnLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void'] | BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.burnLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `swap(address,uint64,uint64,uint64)uint64` ABI method.
     *
     * Swap the token from for the token to
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    swap: (params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.swap(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getToken()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getToken: (params: CallParams<BalancedPoolV2Args['obj']['getToken()uint64'] | BalancedPoolV2Args['tuple']['getToken()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.getToken(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getBalance(uint64)uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getBalance: (params: CallParams<BalancedPoolV2Args['obj']['getBalance(uint64)uint64'] | BalancedPoolV2Args['tuple']['getBalance(uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.getBalance(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `estimateSwap(uint64,uint64,uint64)uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    estimateSwap: (params: CallParams<BalancedPoolV2Args['obj']['estimateSwap(uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['estimateSwap(uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.estimateSwap(params))
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Makes a clear_state call to an existing instance of the BalancedPoolV2 smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.createTransaction.bare.clearState(params)
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `bootstrap(uint64[],uint64[])uint64` ABI method.
     *
     * Bootstrap the pool by assigning assets and weights, create the LP tokens
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    bootstrap: (params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.bootstrap(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `addLiquidity(uint64,uint64,address)void` ABI method.
     *
     * Provide one token liquidity to the pool
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    addLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.addLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getLiquidity(address)uint64` ABI method.
     *
    * Compute the liquidity for the given sender based on the state
    in the contract

     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['getLiquidity(address)uint64'] | BalancedPoolV2Args['tuple']['getLiquidity(address)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.getLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `burnLiquidity(address,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    burnLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void'] | BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.burnLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `swap(address,uint64,uint64,uint64)uint64` ABI method.
     *
     * Swap the token from for the token to
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    swap: (params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.swap(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getToken()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getToken: (params: CallParams<BalancedPoolV2Args['obj']['getToken()uint64'] | BalancedPoolV2Args['tuple']['getToken()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.getToken(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getBalance(uint64)uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getBalance: (params: CallParams<BalancedPoolV2Args['obj']['getBalance(uint64)uint64'] | BalancedPoolV2Args['tuple']['getBalance(uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.getBalance(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `estimateSwap(uint64,uint64,uint64)uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    estimateSwap: (params: CallParams<BalancedPoolV2Args['obj']['estimateSwap(uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['estimateSwap(uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.estimateSwap(params))
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Makes a clear_state call to an existing instance of the BalancedPoolV2 smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams & SendParams>) => {
      return this.appClient.send.bare.clearState(params)
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `bootstrap(uint64[],uint64[])uint64` ABI method.
     *
     * Bootstrap the pool by assigning assets and weights, create the LP tokens
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    bootstrap: async (params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.bootstrap(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['bootstrap(uint64[],uint64[])uint64'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `addLiquidity(uint64,uint64,address)void` ABI method.
     *
     * Provide one token liquidity to the pool
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    addLiquidity: async (params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.addLiquidity(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['addLiquidity(uint64,uint64,address)void'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getLiquidity(address)uint64` ABI method.
     *
    * Compute the liquidity for the given sender based on the state
    in the contract

     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getLiquidity: async (params: CallParams<BalancedPoolV2Args['obj']['getLiquidity(address)uint64'] | BalancedPoolV2Args['tuple']['getLiquidity(address)uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.getLiquidity(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['getLiquidity(address)uint64'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `burnLiquidity(address,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    burnLiquidity: async (params: CallParams<BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void'] | BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.burnLiquidity(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['burnLiquidity(address,uint64)void'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `swap(address,uint64,uint64,uint64)uint64` ABI method.
     *
     * Swap the token from for the token to
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    swap: async (params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.swap(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['swap(address,uint64,uint64,uint64)uint64'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getToken()uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getToken: async (params: CallParams<BalancedPoolV2Args['obj']['getToken()uint64'] | BalancedPoolV2Args['tuple']['getToken()uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.getToken(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['getToken()uint64'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getBalance(uint64)uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getBalance: async (params: CallParams<BalancedPoolV2Args['obj']['getBalance(uint64)uint64'] | BalancedPoolV2Args['tuple']['getBalance(uint64)uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.getBalance(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['getBalance(uint64)uint64'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `estimateSwap(uint64,uint64,uint64)uint64` ABI method.
     * 
     * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    estimateSwap: async (params: CallParams<BalancedPoolV2Args['obj']['estimateSwap(uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['estimateSwap(uint64,uint64,uint64)uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.estimateSwap(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['estimateSwap(uint64,uint64,uint64)uint64'])}
    },

  }

  /**
   * Clone this app client with different params
   *
   * @param params The params to use for the the cloned app client. Omit a param to keep the original value. Set a param to override the original value. Setting to undefined will clear the original value.
   * @returns A new app client with the altered params
   */
  public clone(params: CloneAppClientParams) {
    return new BalancedPoolV2Client(this.appClient.clone(params))
  }

  /**
   * Makes a readonly (simulated) call to the BalancedPoolV2 smart contract using the `getToken()uint64` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * @param params The params for the smart contract call
   * @returns The call result
   */
  async getToken(params: CallParams<BalancedPoolV2Args['obj']['getToken()uint64'] | BalancedPoolV2Args['tuple']['getToken()uint64']> = {args: []}) {
    const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.getToken(params))
    return result.return as unknown as BalancedPoolV2Returns['getToken()uint64']
  }

  /**
   * Makes a readonly (simulated) call to the BalancedPoolV2 smart contract using the `getBalance(uint64)uint64` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * @param params The params for the smart contract call
   * @returns The call result
   */
  async getBalance(params: CallParams<BalancedPoolV2Args['obj']['getBalance(uint64)uint64'] | BalancedPoolV2Args['tuple']['getBalance(uint64)uint64']>) {
    const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.getBalance(params))
    return result.return as unknown as BalancedPoolV2Returns['getBalance(uint64)uint64']
  }

  /**
   * Makes a readonly (simulated) call to the BalancedPoolV2 smart contract using the `estimateSwap(uint64,uint64,uint64)uint64` ABI method.
   * 
   * This method is a readonly method; calling it with onComplete of NoOp will result in a simulated transaction rather than a real transaction.
   *
   * @param params The params for the smart contract call
   * @returns The call result
   */
  async estimateSwap(params: CallParams<BalancedPoolV2Args['obj']['estimateSwap(uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['estimateSwap(uint64,uint64,uint64)uint64']>) {
    const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.estimateSwap(params))
    return result.return as unknown as BalancedPoolV2Returns['estimateSwap(uint64,uint64,uint64)uint64']
  }

  /**
   * Methods to access state for the current BalancedPoolV2 app
   */
  state = {
    /**
     * Methods to access global state for the current BalancedPoolV2 app
     */
    global: {
      /**
       * Get all current keyed values from global state
       */
      getAll: async (): Promise<Partial<Expand<GlobalKeysState>>> => {
        const result = await this.appClient.state.global.getAll()
        return {
          manager: result.manager,
          token: result.token,
          burned: result.burned,
          assets: result.assets,
        }
      },
      /**
       * Get the current value of the manager key in global state
       */
      manager: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("manager")) as string | undefined },
      /**
       * Get the current value of the token key in global state
       */
      token: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("token")) as bigint | undefined },
      /**
       * Get the current value of the burned key in global state
       */
      burned: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("burned")) as bigint | undefined },
      /**
       * Get the current value of the assets key in global state
       */
      assets: async (): Promise<bigint[] | undefined> => { return (await this.appClient.state.global.getValue("assets")) as bigint[] | undefined },
    },
    /**
     * Methods to access box state for the current BalancedPoolV2 app
     */
    box: {
      /**
       * Get all current keyed values from box state
       */
      getAll: async (): Promise<Partial<Expand<BoxKeysState>>> => {
        const result = await this.appClient.state.box.getAll()
        return {
        }
      },
      /**
       * Get values from the weights map in box state
       */
      weights: {
        /**
         * Get all current values of the weights map in box state
         */
        getMap: async (): Promise<Map<bigint, bigint>> => { return (await this.appClient.state.box.getMap("weights")) as Map<bigint, bigint> },
        /**
         * Get a current value of the weights map by key from box state
         */
        value: async (key: bigint | number): Promise<bigint | undefined> => { return await this.appClient.state.box.getMapValue("weights", key) as bigint | undefined },
      },
      /**
       * Get values from the balances map in box state
       */
      balances: {
        /**
         * Get all current values of the balances map in box state
         */
        getMap: async (): Promise<Map<bigint, bigint>> => { return (await this.appClient.state.box.getMap("balances")) as Map<bigint, bigint> },
        /**
         * Get a current value of the balances map by key from box state
         */
        value: async (key: bigint | number): Promise<bigint | undefined> => { return await this.appClient.state.box.getMapValue("balances", key) as bigint | undefined },
      },
      /**
       * Get values from the provided map in box state
       */
      provided: {
        /**
         * Get all current values of the provided map in box state
         */
        getMap: async (): Promise<Map<string, bigint[]>> => { return (await this.appClient.state.box.getMap("provided")) as Map<string, bigint[]> },
        /**
         * Get a current value of the provided map by key from box state
         */
        value: async (key: string): Promise<bigint[] | undefined> => { return await this.appClient.state.box.getMapValue("provided", key) as bigint[] | undefined },
      },
      /**
       * Get values from the minRatios map in box state
       */
      minRatios: {
        /**
         * Get all current values of the minRatios map in box state
         */
        getMap: async (): Promise<Map<string, bigint>> => { return (await this.appClient.state.box.getMap("minRatios")) as Map<string, bigint> },
        /**
         * Get a current value of the minRatios map by key from box state
         */
        value: async (key: string): Promise<bigint | undefined> => { return await this.appClient.state.box.getMapValue("minRatios", key) as bigint | undefined },
      },
    },
  }

  public newGroup(): BalancedPoolV2Composer {
    const client = this
    const composer = this.algorand.newGroup()
    let promiseChain:Promise<unknown> = Promise.resolve()
    const resultMappers: Array<undefined | ((x: ABIReturn | undefined) => any)> = []
    return {
      /**
       * Add a bootstrap(uint64[],uint64[])uint64 method call against the BalancedPoolV2 contract
       */
      bootstrap(params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.bootstrap(params)))
        resultMappers.push((v) => client.decodeReturnValue('bootstrap(uint64[],uint64[])uint64', v))
        return this
      },
      /**
       * Add a addLiquidity(uint64,uint64,address)void method call against the BalancedPoolV2 contract
       */
      addLiquidity(params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.addLiquidity(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a getLiquidity(address)uint64 method call against the BalancedPoolV2 contract
       */
      getLiquidity(params: CallParams<BalancedPoolV2Args['obj']['getLiquidity(address)uint64'] | BalancedPoolV2Args['tuple']['getLiquidity(address)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getLiquidity(params)))
        resultMappers.push((v) => client.decodeReturnValue('getLiquidity(address)uint64', v))
        return this
      },
      /**
       * Add a burnLiquidity(address,uint64)void method call against the BalancedPoolV2 contract
       */
      burnLiquidity(params: CallParams<BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void'] | BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.burnLiquidity(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a swap(address,uint64,uint64,uint64)uint64 method call against the BalancedPoolV2 contract
       */
      swap(params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.swap(params)))
        resultMappers.push((v) => client.decodeReturnValue('swap(address,uint64,uint64,uint64)uint64', v))
        return this
      },
      /**
       * Add a getToken()uint64 method call against the BalancedPoolV2 contract
       */
      getToken(params: CallParams<BalancedPoolV2Args['obj']['getToken()uint64'] | BalancedPoolV2Args['tuple']['getToken()uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getToken(params)))
        resultMappers.push((v) => client.decodeReturnValue('getToken()uint64', v))
        return this
      },
      /**
       * Add a getBalance(uint64)uint64 method call against the BalancedPoolV2 contract
       */
      getBalance(params: CallParams<BalancedPoolV2Args['obj']['getBalance(uint64)uint64'] | BalancedPoolV2Args['tuple']['getBalance(uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getBalance(params)))
        resultMappers.push((v) => client.decodeReturnValue('getBalance(uint64)uint64', v))
        return this
      },
      /**
       * Add a estimateSwap(uint64,uint64,uint64)uint64 method call against the BalancedPoolV2 contract
       */
      estimateSwap(params: CallParams<BalancedPoolV2Args['obj']['estimateSwap(uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['estimateSwap(uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.estimateSwap(params)))
        resultMappers.push((v) => client.decodeReturnValue('estimateSwap(uint64,uint64,uint64)uint64', v))
        return this
      },
      /**
       * Add a clear state call to the BalancedPoolV2 contract
       */
      clearState(params: AppClientBareCallParams) {
        promiseChain = promiseChain.then(() => composer.addAppCall(client.params.clearState(params)))
        return this
      },
      addTransaction(txn: Transaction, signer?: TransactionSigner) {
        promiseChain = promiseChain.then(() => composer.addTransaction(txn, signer))
        return this
      },
      async composer() {
        await promiseChain
        return composer
      },
      async simulate(options?: SimulateOptions) {
        await promiseChain
        const result = await (!options ? composer.simulate() : composer.simulate(options))
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      },
      async send(params?: SendParams) {
        await promiseChain
        const result = await composer.send(params)
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      }
    } as unknown as BalancedPoolV2Composer
  }
}
export type BalancedPoolV2Composer<TReturns extends [...any[]] = []> = {
  /**
   * Calls the bootstrap(uint64[],uint64[])uint64 ABI method.
   *
   * Bootstrap the pool by assigning assets and weights, create the LP tokens
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  bootstrap(params?: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['bootstrap(uint64[],uint64[])uint64'] | undefined]>

  /**
   * Calls the addLiquidity(uint64,uint64,address)void ABI method.
   *
   * Provide one token liquidity to the pool
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  addLiquidity(params?: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['addLiquidity(uint64,uint64,address)void'] | undefined]>

  /**
   * Calls the getLiquidity(address)uint64 ABI method.
   *
  * Compute the liquidity for the given sender based on the state
  in the contract

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getLiquidity(params?: CallParams<BalancedPoolV2Args['obj']['getLiquidity(address)uint64'] | BalancedPoolV2Args['tuple']['getLiquidity(address)uint64']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['getLiquidity(address)uint64'] | undefined]>

  /**
   * Calls the burnLiquidity(address,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  burnLiquidity(params?: CallParams<BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void'] | BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['burnLiquidity(address,uint64)void'] | undefined]>

  /**
   * Calls the swap(address,uint64,uint64,uint64)uint64 ABI method.
   *
   * Swap the token from for the token to
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  swap(params?: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)uint64']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['swap(address,uint64,uint64,uint64)uint64'] | undefined]>

  /**
   * Calls the getToken()uint64 ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getToken(params?: CallParams<BalancedPoolV2Args['obj']['getToken()uint64'] | BalancedPoolV2Args['tuple']['getToken()uint64']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['getToken()uint64'] | undefined]>

  /**
   * Calls the getBalance(uint64)uint64 ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getBalance(params?: CallParams<BalancedPoolV2Args['obj']['getBalance(uint64)uint64'] | BalancedPoolV2Args['tuple']['getBalance(uint64)uint64']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['getBalance(uint64)uint64'] | undefined]>

  /**
   * Calls the estimateSwap(uint64,uint64,uint64)uint64 ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  estimateSwap(params?: CallParams<BalancedPoolV2Args['obj']['estimateSwap(uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['estimateSwap(uint64,uint64,uint64)uint64']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['estimateSwap(uint64,uint64,uint64)uint64'] | undefined]>

  /**
   * Makes a clear_state call to an existing instance of the BalancedPoolV2 smart contract.
   *
   * @param args The arguments for the bare call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  clearState(params?: AppClientBareCallParams): BalancedPoolV2Composer<[...TReturns, undefined]>

  /**
   * Adds a transaction to the composer
   *
   * @param txn A transaction to add to the transaction group
   * @param signer The optional signer to use when signing this transaction.
   */
  addTransaction(txn: Transaction, signer?: TransactionSigner): BalancedPoolV2Composer<TReturns>
  /**
   * Returns the underlying AtomicTransactionComposer instance
   */
  composer(): Promise<TransactionComposer>
  /**
   * Simulates the transaction group and returns the result
   */
  simulate(): Promise<BalancedPoolV2ComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: SkipSignaturesSimulateOptions): Promise<BalancedPoolV2ComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: RawSimulateOptions): Promise<BalancedPoolV2ComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  /**
   * Sends the transaction group to the network and returns the results
   */
  send(params?: SendParams): Promise<BalancedPoolV2ComposerResults<TReturns>>
}
export type BalancedPoolV2ComposerResults<TReturns extends [...any[]]> = Expand<SendAtomicTransactionComposerResults & {
  returns: TReturns
}>

