/* eslint-disable */
/**
 * This file was automatically generated by @algorandfoundation/algokit-client-generator.
 * DO NOT MODIFY IT BY HAND.
 * requires: @algorandfoundation/algokit-utils: ^7
 */
import { AlgorandClientInterface } from '@algorandfoundation/algokit-utils/types/algorand-client-interface'
import { ABIReturn, AppReturn, SendAppTransactionResult } from '@algorandfoundation/algokit-utils/types/app'
import { Arc56Contract, getArc56ReturnValue, getABIStructFromABITuple } from '@algorandfoundation/algokit-utils/types/app-arc56'
import {
  AppClient as _AppClient,
  AppClientMethodCallParams,
  AppClientParams,
  AppClientBareCallParams,
  CallOnComplete,
  AppClientCompilationParams,
  ResolveAppClientByCreatorAndName,
  ResolveAppClientByNetwork,
  CloneAppClientParams,
} from '@algorandfoundation/algokit-utils/types/app-client'
import { AppFactory as _AppFactory, AppFactoryAppClientParams, AppFactoryResolveAppClientByCreatorAndNameParams, AppFactoryDeployParams, AppFactoryParams, CreateSchema } from '@algorandfoundation/algokit-utils/types/app-factory'
import { TransactionComposer, AppCallMethodCall, AppMethodCallTransactionArgument, SimulateOptions, RawSimulateOptions, SkipSignaturesSimulateOptions } from '@algorandfoundation/algokit-utils/types/composer'
import { SendParams, SendSingleTransactionResult, SendAtomicTransactionComposerResults } from '@algorandfoundation/algokit-utils/types/transaction'
import { Address, encodeAddress, modelsv2, OnApplicationComplete, Transaction, TransactionSigner } from 'algosdk'
import SimulateResponse = modelsv2.SimulateResponse

export const APP_SPEC: Arc56Contract = {"name":"BalancedPoolV2","desc":"","methods":[{"name":"createApplication","desc":"createApplication method called at creation","args":[],"returns":{"type":"void"},"actions":{"create":["NoOp"],"call":[]}},{"name":"bootstrap","desc":"Bootstrap the pool by assigning assets and weights, create the LP tokens","args":[{"name":"assetIds","type":"uint64[]","desc":"assets of the pool"},{"name":"weights","type":"uint64[]","desc":"weights of the pool\n uint64 - LP Token created ID"}],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"addLiquidity","desc":"Provide one token liquidity to the pool","args":[{"name":"index","type":"uint64","desc":"index of the token in the pool"},{"name":"amount","type":"uint64","desc":"amount of token sent"},{"name":"sender","type":"address","desc":"the sender"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"getLiquidity","desc":"Compute the liquidity for the given sender based on the state\nin the contract","args":[{"name":"sender","type":"address","desc":"the sender"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"burnLiquidity","args":[{"name":"sender","type":"address"},{"name":"amountLP","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"swap","args":[{"name":"sender","type":"address"},{"name":"from","type":"uint64"},{"name":"to","type":"uint64"},{"name":"amount","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"optIn","args":[{"name":"assetId","type":"uint64","desc":"asset to opt-in\n why?"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}}],"arcs":[4,56],"structs":{},"state":{"schema":{"global":{"bytes":2,"ints":2},"local":{"bytes":0,"ints":0}},"keys":{"global":{"manager":{"key":"bWFuYWdlcg==","keyType":"AVMBytes","valueType":"address"},"token":{"key":"dG9rZW4=","keyType":"AVMBytes","valueType":"uint64"},"burned":{"key":"YnVybmVk","keyType":"AVMBytes","valueType":"uint64"},"assets":{"key":"YXNzZXRz","keyType":"AVMBytes","valueType":"uint64[]"}},"local":{},"box":{}},"maps":{"global":{},"local":{},"box":{"weights":{"keyType":"uint64","valueType":"uint64","prefix":"weights_"},"balances":{"keyType":"uint64","valueType":"uint64","prefix":"balances_"},"provided":{"keyType":"address","valueType":"uint64[]","prefix":"provided_"},"minRatios":{"keyType":"address","valueType":"uint64","prefix":"minratio_"}}}},"bareActions":{"create":[],"call":[]},"sourceInfo":{"approval":{"sourceInfo":[{"teal":1,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[0]},{"teal":2,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[1,2,3,4,5,6,7,8,9,10,11,12,13]},{"teal":3,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86]},{"teal":15,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[87,88]},{"teal":16,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[89]},{"teal":17,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[90,91]},{"teal":18,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[92]},{"teal":19,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[93,94]},{"teal":20,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[95]},{"teal":21,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121]},{"teal":25,"source":"contracts/BalancedPoolV2.algo.ts:7","errorMessage":"The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?","pc":[122]},{"teal":30,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[123,124,125]},{"teal":31,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[126]},{"teal":32,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[127]},{"teal":38,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[128,129,130]},{"teal":42,"source":"contracts/BalancedPoolV2.algo.ts:29","pc":[131,132]},{"teal":43,"source":"contracts/BalancedPoolV2.algo.ts:29","pc":[133,134,135]},{"teal":44,"source":"contracts/BalancedPoolV2.algo.ts:29","pc":[136,137]},{"teal":45,"source":"contracts/BalancedPoolV2.algo.ts:29","pc":[138]},{"teal":46,"source":"contracts/BalancedPoolV2.algo.ts:29","pc":[139]},{"teal":50,"source":"contracts/BalancedPoolV2.algo.ts:30","pc":[140,141]},{"teal":51,"source":"contracts/BalancedPoolV2.algo.ts:30","pc":[142]},{"teal":52,"source":"contracts/BalancedPoolV2.algo.ts:30","pc":[143]},{"teal":53,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[144]},{"teal":58,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[145,146,147,148,149,150]},{"teal":61,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[151,152,153]},{"teal":62,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[154,155,156]},{"teal":65,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[157,158,159]},{"teal":66,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[160,161,162]},{"teal":69,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[163,164,165]},{"teal":70,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[166]},{"teal":71,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[167]},{"teal":72,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[168]},{"teal":73,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[169]},{"teal":74,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[170]},{"teal":83,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[171,172,173]},{"teal":86,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[174]},{"teal":87,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[175]},{"teal":91,"source":"contracts/BalancedPoolV2.algo.ts:40","pc":[176,177,178]},{"teal":95,"source":"contracts/BalancedPoolV2.algo.ts:41","pc":[179]},{"teal":96,"source":"contracts/BalancedPoolV2.algo.ts:41","pc":[180,181]},{"teal":100,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[182]},{"teal":101,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[183,184]},{"teal":106,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[185,186]},{"teal":107,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[187,188]},{"teal":108,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[189]},{"teal":109,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[190]},{"teal":110,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[191]},{"teal":111,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[192]},{"teal":112,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[193,194,195]},{"teal":116,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[196,197]},{"teal":117,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[198,199]},{"teal":118,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[200]},{"teal":119,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[201,202]},{"teal":120,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[203]},{"teal":121,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[204]},{"teal":122,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[205]},{"teal":123,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[206,207]},{"teal":124,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[208]},{"teal":125,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[209]},{"teal":126,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[210]},{"teal":127,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[211]},{"teal":128,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[212,213]},{"teal":129,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[214,215]},{"teal":130,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[216]},{"teal":131,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[217,218]},{"teal":132,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[219]},{"teal":133,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[220]},{"teal":134,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[221]},{"teal":135,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[222,223]},{"teal":136,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[224]},{"teal":137,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[225]},{"teal":138,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[226]},{"teal":139,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[227]},{"teal":140,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[228,229]},{"teal":141,"source":"contracts/BalancedPoolV2.algo.ts:44","pc":[230,231,232]},{"teal":145,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[233,234]},{"teal":146,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[235,236]},{"teal":147,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[237,238]},{"teal":148,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[239]},{"teal":149,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[240,241]},{"teal":150,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[242]},{"teal":151,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[243]},{"teal":152,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[244]},{"teal":153,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[245,246]},{"teal":154,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[247]},{"teal":155,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[248]},{"teal":156,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[249]},{"teal":157,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[250]},{"teal":158,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[251]},{"teal":159,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[252,253]},{"teal":164,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[254,255]},{"teal":165,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[256]},{"teal":166,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[257]},{"teal":167,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[258,259]},{"teal":168,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[260,261,262]},{"teal":173,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[263,264]},{"teal":174,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[265,266]},{"teal":175,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[267]},{"teal":176,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[268]},{"teal":177,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[269]},{"teal":178,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[270]},{"teal":179,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[271]},{"teal":180,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[272,273,274]},{"teal":181,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[275]},{"teal":182,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[276]},{"teal":183,"source":"contracts/BalancedPoolV2.algo.ts:48","pc":[277]},{"teal":187,"source":"contracts/BalancedPoolV2.algo.ts:50","pc":[278,279]},{"teal":188,"source":"contracts/BalancedPoolV2.algo.ts:50","pc":[280]},{"teal":189,"source":"contracts/BalancedPoolV2.algo.ts:50","pc":[281]},{"teal":192,"source":"contracts/BalancedPoolV2.algo.ts:50","errorMessage":"Weights must sum to 1","pc":[282]},{"teal":196,"source":"contracts/BalancedPoolV2.algo.ts:51","pc":[283,284,285]},{"teal":200,"source":"contracts/BalancedPoolV2.algo.ts:53","pc":[286]},{"teal":201,"source":"contracts/BalancedPoolV2.algo.ts:53","pc":[287]},{"teal":204,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[288,289]},{"teal":207,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[290,291]},{"teal":208,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[292]},{"teal":213,"source":"contracts/BalancedPoolV2.algo.ts:62","pc":[293,294,295]},{"teal":214,"source":"contracts/BalancedPoolV2.algo.ts:62","pc":[296]},{"teal":215,"source":"contracts/BalancedPoolV2.algo.ts:62","pc":[297]},{"teal":216,"source":"contracts/BalancedPoolV2.algo.ts:62","pc":[298,299]},{"teal":217,"source":"contracts/BalancedPoolV2.algo.ts:62","pc":[300]},{"teal":220,"source":"contracts/BalancedPoolV2.algo.ts:62","errorMessage":"argument 0 (sender) for addLiquidity must be a address","pc":[301]},{"teal":223,"source":"contracts/BalancedPoolV2.algo.ts:62","pc":[302,303,304]},{"teal":224,"source":"contracts/BalancedPoolV2.algo.ts:62","pc":[305]},{"teal":227,"source":"contracts/BalancedPoolV2.algo.ts:62","pc":[306,307,308]},{"teal":228,"source":"contracts/BalancedPoolV2.algo.ts:62","pc":[309]},{"teal":231,"source":"contracts/BalancedPoolV2.algo.ts:62","pc":[310,311,312]},{"teal":232,"source":"contracts/BalancedPoolV2.algo.ts:62","pc":[313]},{"teal":233,"source":"contracts/BalancedPoolV2.algo.ts:62","pc":[314]},{"teal":242,"source":"contracts/BalancedPoolV2.algo.ts:62","pc":[315,316,317]},{"teal":245,"source":"contracts/BalancedPoolV2.algo.ts:62","pc":[318]},{"teal":249,"source":"contracts/BalancedPoolV2.algo.ts:63","pc":[319,320,321]},{"teal":253,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[322]},{"teal":254,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[323]},{"teal":255,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[324]},{"teal":256,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[325]},{"teal":259,"source":"contracts/BalancedPoolV2.algo.ts:64","errorMessage":"pool not bootstrapped","pc":[326]},{"teal":263,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[327,328]},{"teal":264,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[329]},{"teal":265,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[330,331,332]},{"teal":266,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[333,334]},{"teal":267,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[335]},{"teal":268,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[336,337]},{"teal":269,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[338]},{"teal":270,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[339]},{"teal":271,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[340]},{"teal":272,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[341,342]},{"teal":273,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[343]},{"teal":274,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[344]},{"teal":275,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[345]},{"teal":276,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[346]},{"teal":277,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[347,348]},{"teal":281,"source":"contracts/BalancedPoolV2.algo.ts:66","pc":[349,350,351,352,353,354,355,356,357,358,359,360,361,362]},{"teal":282,"source":"contracts/BalancedPoolV2.algo.ts:66","pc":[363,364]},{"teal":283,"source":"contracts/BalancedPoolV2.algo.ts:66","pc":[365]},{"teal":284,"source":"contracts/BalancedPoolV2.algo.ts:66","pc":[366]},{"teal":285,"source":"contracts/BalancedPoolV2.algo.ts:66","pc":[367]},{"teal":289,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[368,369]},{"teal":290,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[370,371,372]},{"teal":294,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[373]},{"teal":295,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[374,375]},{"teal":296,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[376]},{"teal":297,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[377]},{"teal":298,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[378]},{"teal":301,"source":"contracts/BalancedPoolV2.algo.ts:69","errorMessage":"box value does not exist: this.balances(assetId).value","pc":[379]},{"teal":302,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[380]},{"teal":303,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[381,382]},{"teal":304,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[383]},{"teal":305,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[384]},{"teal":306,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[385,386]},{"teal":307,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[387]},{"teal":308,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[388]},{"teal":309,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[389]},{"teal":310,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[390]},{"teal":311,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[391]},{"teal":316,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[392]},{"teal":317,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[393,394]},{"teal":318,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[395]},{"teal":319,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[396]},{"teal":320,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[397]},{"teal":321,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[398]},{"teal":322,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[399]},{"teal":323,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[400,401,402]},{"teal":328,"source":"contracts/BalancedPoolV2.algo.ts:72","pc":[403]},{"teal":329,"source":"contracts/BalancedPoolV2.algo.ts:72","pc":[404,405]},{"teal":330,"source":"contracts/BalancedPoolV2.algo.ts:72","pc":[406]},{"teal":331,"source":"contracts/BalancedPoolV2.algo.ts:72","pc":[407,408]},{"teal":332,"source":"contracts/BalancedPoolV2.algo.ts:72","pc":[409]},{"teal":333,"source":"contracts/BalancedPoolV2.algo.ts:72","pc":[410]},{"teal":338,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[411]},{"teal":339,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[412,413]},{"teal":340,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[414]},{"teal":341,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[415]},{"teal":344,"source":"contracts/BalancedPoolV2.algo.ts:75","errorMessage":"box value does not exist: this.provided(sender).value","pc":[416]},{"teal":345,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[417,418,419]},{"teal":346,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[420,421]},{"teal":347,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[422]},{"teal":348,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[423,424]},{"teal":349,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[425]},{"teal":350,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[426]},{"teal":351,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[427]},{"teal":352,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[428,429]},{"teal":353,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[430]},{"teal":354,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[431]},{"teal":355,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[432,433]},{"teal":356,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[434]},{"teal":357,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[435]},{"teal":360,"source":"contracts/BalancedPoolV2.algo.ts:75","errorMessage":"box value does not exist: this.provided(sender).value","pc":[436]},{"teal":361,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[437,438,439]},{"teal":362,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[440,441]},{"teal":363,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[442]},{"teal":364,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[443,444]},{"teal":365,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[445]},{"teal":366,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[446]},{"teal":367,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[447]},{"teal":368,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[448,449]},{"teal":369,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[450]},{"teal":370,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[451]},{"teal":371,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[452]},{"teal":372,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[453]},{"teal":373,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[454,455]},{"teal":374,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[456]},{"teal":375,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[457]},{"teal":376,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[458]},{"teal":377,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[459]},{"teal":378,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[460,461]},{"teal":379,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[462]},{"teal":380,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[463]},{"teal":381,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[464]},{"teal":382,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[465]},{"teal":383,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[466]},{"teal":384,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[467]},{"teal":385,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[468]},{"teal":386,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[469]},{"teal":387,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[470]},{"teal":388,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[471]},{"teal":389,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[472,473,474]},{"teal":390,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[475]},{"teal":391,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[476]},{"teal":392,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[477]},{"teal":393,"source":"contracts/BalancedPoolV2.algo.ts:62","pc":[478]},{"teal":398,"source":"contracts/BalancedPoolV2.algo.ts:101","pc":[479,480,481]},{"teal":399,"source":"contracts/BalancedPoolV2.algo.ts:101","pc":[482]},{"teal":400,"source":"contracts/BalancedPoolV2.algo.ts:101","pc":[483]},{"teal":401,"source":"contracts/BalancedPoolV2.algo.ts:101","pc":[484,485]},{"teal":402,"source":"contracts/BalancedPoolV2.algo.ts:101","pc":[486]},{"teal":405,"source":"contracts/BalancedPoolV2.algo.ts:101","errorMessage":"argument 0 (sender) for getLiquidity must be a address","pc":[487]},{"teal":408,"source":"contracts/BalancedPoolV2.algo.ts:101","pc":[488,489,490]},{"teal":409,"source":"contracts/BalancedPoolV2.algo.ts:101","pc":[491]},{"teal":410,"source":"contracts/BalancedPoolV2.algo.ts:101","pc":[492]},{"teal":418,"source":"contracts/BalancedPoolV2.algo.ts:101","pc":[493,494,495]},{"teal":421,"source":"contracts/BalancedPoolV2.algo.ts:101","pc":[496]},{"teal":422,"source":"contracts/BalancedPoolV2.algo.ts:101","pc":[497,498]},{"teal":426,"source":"contracts/BalancedPoolV2.algo.ts:102","pc":[499]},{"teal":427,"source":"contracts/BalancedPoolV2.algo.ts:102","pc":[500,501]},{"teal":428,"source":"contracts/BalancedPoolV2.algo.ts:102","pc":[502]},{"teal":429,"source":"contracts/BalancedPoolV2.algo.ts:102","pc":[503,504]},{"teal":433,"source":"contracts/BalancedPoolV2.algo.ts:103","pc":[505]},{"teal":434,"source":"contracts/BalancedPoolV2.algo.ts:103","pc":[506,507]},{"teal":438,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[508]},{"teal":439,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[509,510]},{"teal":444,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[511,512]},{"teal":445,"source":"contracts/BalancedPoolV2.algo.ts:102","pc":[513,514]},{"teal":446,"source":"contracts/BalancedPoolV2.algo.ts:102","pc":[515]},{"teal":449,"source":"contracts/BalancedPoolV2.algo.ts:102","errorMessage":"box value does not exist: this.provided(sender).value","pc":[516]},{"teal":450,"source":"contracts/BalancedPoolV2.algo.ts:102","pc":[517,518,519]},{"teal":451,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[520]},{"teal":452,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[521]},{"teal":453,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[522]},{"teal":454,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[523]},{"teal":455,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[524,525,526]},{"teal":460,"source":"contracts/BalancedPoolV2.algo.ts:102","pc":[527,528]},{"teal":461,"source":"contracts/BalancedPoolV2.algo.ts:102","pc":[529]},{"teal":464,"source":"contracts/BalancedPoolV2.algo.ts:102","errorMessage":"box value does not exist: this.provided(sender).value","pc":[530]},{"teal":465,"source":"contracts/BalancedPoolV2.algo.ts:102","pc":[531,532,533]},{"teal":466,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[534,535]},{"teal":467,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[536]},{"teal":468,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[537,538]},{"teal":469,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[539]},{"teal":470,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[540]},{"teal":471,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[541]},{"teal":472,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[542,543]},{"teal":473,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[544]},{"teal":474,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[545]},{"teal":475,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[546]},{"teal":476,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[547]},{"teal":477,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[548]},{"teal":478,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[549]},{"teal":479,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[550,551,552]},{"teal":484,"source":"contracts/BalancedPoolV2.algo.ts:106","pc":[553,554]},{"teal":485,"source":"contracts/BalancedPoolV2.algo.ts:106","pc":[555]},{"teal":486,"source":"contracts/BalancedPoolV2.algo.ts:106","pc":[556]},{"teal":487,"source":"contracts/BalancedPoolV2.algo.ts:106","pc":[557,558]},{"teal":494,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[559,560]},{"teal":495,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[561]},{"teal":496,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[562]},{"teal":497,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[563,564]},{"teal":498,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[565,566,567]},{"teal":503,"source":"contracts/BalancedPoolV2.algo.ts:110","pc":[568]},{"teal":504,"source":"contracts/BalancedPoolV2.algo.ts:110","pc":[569,570]},{"teal":509,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[571,572,573]},{"teal":510,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[574]},{"teal":511,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[575]},{"teal":512,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[576,577,578]},{"teal":517,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[579,580,581,582]},{"teal":518,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[583,584]},{"teal":519,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[585,586]},{"teal":520,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[587]},{"teal":521,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[588]},{"teal":522,"source":"contracts/BalancedPoolV2.algo.ts:114","pc":[589,590]},{"teal":523,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[591,592,593]},{"teal":528,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[594,595]},{"teal":529,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[596,597]},{"teal":530,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[598]},{"teal":531,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[599,600,601]},{"teal":532,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[602]},{"teal":533,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[603]},{"teal":534,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[604]},{"teal":535,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[605]},{"teal":536,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[606,607,608]},{"teal":541,"source":"contracts/BalancedPoolV2.algo.ts:117","pc":[609,610]},{"teal":542,"source":"contracts/BalancedPoolV2.algo.ts:117","pc":[611,612,613]},{"teal":543,"source":"contracts/BalancedPoolV2.algo.ts:117","pc":[614,615]},{"teal":544,"source":"contracts/BalancedPoolV2.algo.ts:115","pc":[616,617,618]},{"teal":549,"source":"contracts/BalancedPoolV2.algo.ts:118","pc":[619,620]},{"teal":550,"source":"contracts/BalancedPoolV2.algo.ts:118","pc":[621]},{"teal":551,"source":"contracts/BalancedPoolV2.algo.ts:118","pc":[622]},{"teal":552,"source":"contracts/BalancedPoolV2.algo.ts:118","pc":[623,624,625]},{"teal":555,"source":"contracts/BalancedPoolV2.algo.ts:118","pc":[626,627,628]},{"teal":562,"source":"contracts/BalancedPoolV2.algo.ts:124","pc":[629]},{"teal":563,"source":"contracts/BalancedPoolV2.algo.ts:124","pc":[630,631]},{"teal":568,"source":"contracts/BalancedPoolV2.algo.ts:124","pc":[632,633]},{"teal":569,"source":"contracts/BalancedPoolV2.algo.ts:124","pc":[634]},{"teal":570,"source":"contracts/BalancedPoolV2.algo.ts:124","pc":[635,636]},{"teal":571,"source":"contracts/BalancedPoolV2.algo.ts:124","pc":[637]},{"teal":572,"source":"contracts/BalancedPoolV2.algo.ts:124","pc":[638]},{"teal":575,"source":"contracts/BalancedPoolV2.algo.ts:124","errorMessage":"box value does not exist: this.provided(sender).value","pc":[639]},{"teal":576,"source":"contracts/BalancedPoolV2.algo.ts:124","pc":[640,641,642]},{"teal":577,"source":"contracts/BalancedPoolV2.algo.ts:124","pc":[643]},{"teal":578,"source":"contracts/BalancedPoolV2.algo.ts:124","pc":[644]},{"teal":579,"source":"contracts/BalancedPoolV2.algo.ts:124","pc":[645]},{"teal":580,"source":"contracts/BalancedPoolV2.algo.ts:124","pc":[646]},{"teal":581,"source":"contracts/BalancedPoolV2.algo.ts:124","pc":[647,648,649]},{"teal":585,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[650]},{"teal":586,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[651,652]},{"teal":587,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[653]},{"teal":588,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[654]},{"teal":591,"source":"contracts/BalancedPoolV2.algo.ts:125","errorMessage":"box value does not exist: this.provided(sender).value","pc":[655]},{"teal":592,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[656,657,658]},{"teal":593,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[659,660]},{"teal":594,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[661]},{"teal":595,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[662,663]},{"teal":596,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[664]},{"teal":597,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[665]},{"teal":598,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[666]},{"teal":599,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[667,668]},{"teal":600,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[669]},{"teal":601,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[670,671]},{"teal":602,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[672]},{"teal":603,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[673]},{"teal":604,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[674,675]},{"teal":605,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[676]},{"teal":606,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[677]},{"teal":607,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[678]},{"teal":608,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[679]},{"teal":609,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[680]},{"teal":610,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[681]},{"teal":611,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[682]},{"teal":612,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[683]},{"teal":613,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[684]},{"teal":614,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[685]},{"teal":615,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[686,687,688]},{"teal":616,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[689]},{"teal":617,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[690]},{"teal":618,"source":"contracts/BalancedPoolV2.algo.ts:125","pc":[691]},{"teal":623,"source":"contracts/BalancedPoolV2.algo.ts:124","pc":[692,693]},{"teal":624,"source":"contracts/BalancedPoolV2.algo.ts:124","pc":[694]},{"teal":625,"source":"contracts/BalancedPoolV2.algo.ts:124","pc":[695]},{"teal":626,"source":"contracts/BalancedPoolV2.algo.ts:124","pc":[696,697]},{"teal":627,"source":"contracts/BalancedPoolV2.algo.ts:124","pc":[698,699,700]},{"teal":636,"source":"contracts/BalancedPoolV2.algo.ts:128","pc":[701]},{"teal":637,"source":"contracts/BalancedPoolV2.algo.ts:128","pc":[702,703]},{"teal":638,"source":"contracts/BalancedPoolV2.algo.ts:128","pc":[704,705]},{"teal":642,"source":"contracts/BalancedPoolV2.algo.ts:129","pc":[706,707]},{"teal":643,"source":"contracts/BalancedPoolV2.algo.ts:129","pc":[708,709]},{"teal":647,"source":"contracts/BalancedPoolV2.algo.ts:130","pc":[710,711]},{"teal":648,"source":"contracts/BalancedPoolV2.algo.ts:130","pc":[712,713]},{"teal":652,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[714]},{"teal":653,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[715]},{"teal":654,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[716,717]},{"teal":657,"source":"contracts/BalancedPoolV2.algo.ts:128","pc":[718]},{"teal":658,"source":"contracts/BalancedPoolV2.algo.ts:128","pc":[719,720]},{"teal":661,"source":"contracts/BalancedPoolV2.algo.ts:128","pc":[721]},{"teal":662,"source":"contracts/BalancedPoolV2.algo.ts:101","pc":[722]},{"teal":667,"source":"contracts/BalancedPoolV2.algo.ts:135","pc":[723,724,725]},{"teal":668,"source":"contracts/BalancedPoolV2.algo.ts:135","pc":[726]},{"teal":671,"source":"contracts/BalancedPoolV2.algo.ts:135","pc":[727,728,729]},{"teal":672,"source":"contracts/BalancedPoolV2.algo.ts:135","pc":[730]},{"teal":673,"source":"contracts/BalancedPoolV2.algo.ts:135","pc":[731]},{"teal":674,"source":"contracts/BalancedPoolV2.algo.ts:135","pc":[732,733]},{"teal":675,"source":"contracts/BalancedPoolV2.algo.ts:135","pc":[734]},{"teal":678,"source":"contracts/BalancedPoolV2.algo.ts:135","errorMessage":"argument 1 (sender) for burnLiquidity must be a address","pc":[735]},{"teal":681,"source":"contracts/BalancedPoolV2.algo.ts:135","pc":[736,737,738]},{"teal":682,"source":"contracts/BalancedPoolV2.algo.ts:135","pc":[739]},{"teal":683,"source":"contracts/BalancedPoolV2.algo.ts:135","pc":[740]},{"teal":687,"source":"contracts/BalancedPoolV2.algo.ts:135","pc":[741,742,743]},{"teal":690,"source":"contracts/BalancedPoolV2.algo.ts:135","pc":[744]},{"teal":691,"source":"contracts/BalancedPoolV2.algo.ts:135","pc":[745,746]},{"teal":695,"source":"contracts/BalancedPoolV2.algo.ts:136","pc":[747,748]},{"teal":696,"source":"contracts/BalancedPoolV2.algo.ts:136","pc":[749]},{"teal":697,"source":"contracts/BalancedPoolV2.algo.ts:136","pc":[750]},{"teal":700,"source":"contracts/BalancedPoolV2.algo.ts:136","errorMessage":"must burn positive amount","pc":[751]},{"teal":704,"source":"contracts/BalancedPoolV2.algo.ts:138","pc":[752,753,754]},{"teal":705,"source":"contracts/BalancedPoolV2.algo.ts:138","pc":[755,756]},{"teal":709,"source":"contracts/BalancedPoolV2.algo.ts:139","pc":[757,758]},{"teal":710,"source":"contracts/BalancedPoolV2.algo.ts:139","pc":[759]},{"teal":711,"source":"contracts/BalancedPoolV2.algo.ts:139","pc":[760]},{"teal":714,"source":"contracts/BalancedPoolV2.algo.ts:139","errorMessage":"no LP tokens in circulation","pc":[761]},{"teal":718,"source":"contracts/BalancedPoolV2.algo.ts:141","pc":[762,763]},{"teal":719,"source":"contracts/BalancedPoolV2.algo.ts:141","pc":[764]},{"teal":720,"source":"contracts/BalancedPoolV2.algo.ts:141","pc":[765,766,767]},{"teal":721,"source":"contracts/BalancedPoolV2.algo.ts:141","pc":[768]},{"teal":722,"source":"contracts/BalancedPoolV2.algo.ts:141","pc":[769]},{"teal":723,"source":"contracts/BalancedPoolV2.algo.ts:141","pc":[770]},{"teal":724,"source":"contracts/BalancedPoolV2.algo.ts:141","pc":[771,772]},{"teal":728,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[773]},{"teal":729,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[774,775]},{"teal":734,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[776,777]},{"teal":735,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[778,779]},{"teal":736,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[780]},{"teal":737,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[781,782,783]},{"teal":741,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[784,785]},{"teal":742,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[786]},{"teal":743,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[787,788,789]},{"teal":744,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[790,791]},{"teal":745,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[792]},{"teal":746,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[793,794]},{"teal":747,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[795]},{"teal":748,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[796]},{"teal":749,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[797]},{"teal":750,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[798,799]},{"teal":751,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[800]},{"teal":752,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[801]},{"teal":753,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[802]},{"teal":754,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[803]},{"teal":755,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[804,805]},{"teal":759,"source":"contracts/BalancedPoolV2.algo.ts:145","pc":[806]},{"teal":760,"source":"contracts/BalancedPoolV2.algo.ts:145","pc":[807,808]},{"teal":761,"source":"contracts/BalancedPoolV2.algo.ts:145","pc":[809]},{"teal":762,"source":"contracts/BalancedPoolV2.algo.ts:145","pc":[810]},{"teal":763,"source":"contracts/BalancedPoolV2.algo.ts:145","pc":[811]},{"teal":766,"source":"contracts/BalancedPoolV2.algo.ts:145","errorMessage":"box value does not exist: this.balances(assetId).value","pc":[812]},{"teal":767,"source":"contracts/BalancedPoolV2.algo.ts:145","pc":[813]},{"teal":768,"source":"contracts/BalancedPoolV2.algo.ts:145","pc":[814,815]},{"teal":772,"source":"contracts/BalancedPoolV2.algo.ts:147","pc":[816,817]},{"teal":773,"source":"contracts/BalancedPoolV2.algo.ts:147","pc":[818,819]},{"teal":774,"source":"contracts/BalancedPoolV2.algo.ts:147","pc":[820]},{"teal":775,"source":"contracts/BalancedPoolV2.algo.ts:147","pc":[821]},{"teal":776,"source":"contracts/BalancedPoolV2.algo.ts:147","pc":[822,823]},{"teal":777,"source":"contracts/BalancedPoolV2.algo.ts:147","pc":[824]},{"teal":778,"source":"contracts/BalancedPoolV2.algo.ts:147","pc":[825]},{"teal":779,"source":"contracts/BalancedPoolV2.algo.ts:147","pc":[826]},{"teal":780,"source":"contracts/BalancedPoolV2.algo.ts:147","pc":[827]},{"teal":781,"source":"contracts/BalancedPoolV2.algo.ts:147","pc":[828]},{"teal":784,"source":"contracts/BalancedPoolV2.algo.ts:147","errorMessage":"wideRatio failed","pc":[829]},{"teal":785,"source":"contracts/BalancedPoolV2.algo.ts:147","pc":[830,831]},{"teal":789,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[832]},{"teal":790,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[833,834]},{"teal":791,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[835]},{"teal":792,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[836]},{"teal":793,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[837,838]},{"teal":794,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[839,840]},{"teal":795,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[841]},{"teal":796,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[842]},{"teal":797,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[843]},{"teal":805,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[844]},{"teal":806,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[845,846]},{"teal":807,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[847,848]},{"teal":811,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[849,850]},{"teal":812,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[851,852]},{"teal":816,"source":"contracts/BalancedPoolV2.algo.ts:153","pc":[853,854]},{"teal":817,"source":"contracts/BalancedPoolV2.algo.ts:153","pc":[855,856]},{"teal":821,"source":"contracts/BalancedPoolV2.algo.ts:154","pc":[857,858]},{"teal":822,"source":"contracts/BalancedPoolV2.algo.ts:154","pc":[859,860]},{"teal":825,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[861]},{"teal":826,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[862,863]},{"teal":829,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[864]},{"teal":834,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[865,866]},{"teal":835,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[867]},{"teal":836,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[868]},{"teal":837,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[869,870]},{"teal":838,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[871,872,873]},{"teal":843,"source":"contracts/BalancedPoolV2.algo.ts:158","pc":[874,875]},{"teal":844,"source":"contracts/BalancedPoolV2.algo.ts:158","pc":[876]},{"teal":845,"source":"contracts/BalancedPoolV2.algo.ts:158","pc":[877,878]},{"teal":846,"source":"contracts/BalancedPoolV2.algo.ts:158","pc":[879]},{"teal":847,"source":"contracts/BalancedPoolV2.algo.ts:158","pc":[880,881]},{"teal":848,"source":"contracts/BalancedPoolV2.algo.ts:158","pc":[882]},{"teal":849,"source":"contracts/BalancedPoolV2.algo.ts:158","pc":[883]},{"teal":850,"source":"contracts/BalancedPoolV2.algo.ts:135","pc":[884]},{"teal":854,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[885,886,887]},{"teal":857,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[888]},{"teal":858,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[889,890]},{"teal":862,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[891,892]},{"teal":863,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[893]},{"teal":864,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[894,895,896]},{"teal":865,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[897]},{"teal":866,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[898]},{"teal":867,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[899]},{"teal":868,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[900,901]},{"teal":872,"source":"contracts/BalancedPoolV2.algo.ts:163","pc":[902]},{"teal":873,"source":"contracts/BalancedPoolV2.algo.ts:163","pc":[903,904]},{"teal":877,"source":"contracts/BalancedPoolV2.algo.ts:165","pc":[905]},{"teal":878,"source":"contracts/BalancedPoolV2.algo.ts:165","pc":[906,907]},{"teal":879,"source":"contracts/BalancedPoolV2.algo.ts:165","pc":[908,909]},{"teal":880,"source":"contracts/BalancedPoolV2.algo.ts:165","pc":[910]},{"teal":881,"source":"contracts/BalancedPoolV2.algo.ts:165","pc":[911,912]},{"teal":882,"source":"contracts/BalancedPoolV2.algo.ts:165","pc":[913,914]},{"teal":883,"source":"contracts/BalancedPoolV2.algo.ts:165","pc":[915]},{"teal":884,"source":"contracts/BalancedPoolV2.algo.ts:165","pc":[916,917]},{"teal":885,"source":"contracts/BalancedPoolV2.algo.ts:165","pc":[918,919]},{"teal":886,"source":"contracts/BalancedPoolV2.algo.ts:165","pc":[920,921]},{"teal":887,"source":"contracts/BalancedPoolV2.algo.ts:165","pc":[922,923]},{"teal":888,"source":"contracts/BalancedPoolV2.algo.ts:165","pc":[924]},{"teal":892,"source":"contracts/BalancedPoolV2.algo.ts:167","pc":[925]},{"teal":893,"source":"contracts/BalancedPoolV2.algo.ts:167","pc":[926,927]},{"teal":898,"source":"contracts/BalancedPoolV2.algo.ts:167","pc":[928,929]},{"teal":899,"source":"contracts/BalancedPoolV2.algo.ts:167","pc":[930,931]},{"teal":900,"source":"contracts/BalancedPoolV2.algo.ts:167","pc":[932]},{"teal":901,"source":"contracts/BalancedPoolV2.algo.ts:167","pc":[933,934,935]},{"teal":905,"source":"contracts/BalancedPoolV2.algo.ts:168","pc":[936,937]},{"teal":906,"source":"contracts/BalancedPoolV2.algo.ts:168","pc":[938]},{"teal":907,"source":"contracts/BalancedPoolV2.algo.ts:168","pc":[939,940,941]},{"teal":908,"source":"contracts/BalancedPoolV2.algo.ts:168","pc":[942,943]},{"teal":909,"source":"contracts/BalancedPoolV2.algo.ts:168","pc":[944]},{"teal":910,"source":"contracts/BalancedPoolV2.algo.ts:168","pc":[945,946]},{"teal":911,"source":"contracts/BalancedPoolV2.algo.ts:168","pc":[947]},{"teal":912,"source":"contracts/BalancedPoolV2.algo.ts:168","pc":[948]},{"teal":913,"source":"contracts/BalancedPoolV2.algo.ts:168","pc":[949]},{"teal":914,"source":"contracts/BalancedPoolV2.algo.ts:168","pc":[950,951]},{"teal":915,"source":"contracts/BalancedPoolV2.algo.ts:168","pc":[952]},{"teal":916,"source":"contracts/BalancedPoolV2.algo.ts:168","pc":[953]},{"teal":917,"source":"contracts/BalancedPoolV2.algo.ts:168","pc":[954]},{"teal":918,"source":"contracts/BalancedPoolV2.algo.ts:168","pc":[955]},{"teal":919,"source":"contracts/BalancedPoolV2.algo.ts:168","pc":[956,957]},{"teal":923,"source":"contracts/BalancedPoolV2.algo.ts:169","pc":[958]},{"teal":924,"source":"contracts/BalancedPoolV2.algo.ts:169","pc":[959,960]},{"teal":925,"source":"contracts/BalancedPoolV2.algo.ts:169","pc":[961]},{"teal":926,"source":"contracts/BalancedPoolV2.algo.ts:169","pc":[962]},{"teal":927,"source":"contracts/BalancedPoolV2.algo.ts:169","pc":[963]},{"teal":930,"source":"contracts/BalancedPoolV2.algo.ts:169","errorMessage":"box value does not exist: this.balances(assetId).value","pc":[964]},{"teal":931,"source":"contracts/BalancedPoolV2.algo.ts:169","pc":[965]},{"teal":932,"source":"contracts/BalancedPoolV2.algo.ts:169","pc":[966,967]},{"teal":936,"source":"contracts/BalancedPoolV2.algo.ts:170","pc":[968]},{"teal":937,"source":"contracts/BalancedPoolV2.algo.ts:170","pc":[969,970]},{"teal":938,"source":"contracts/BalancedPoolV2.algo.ts:170","pc":[971]},{"teal":939,"source":"contracts/BalancedPoolV2.algo.ts:170","pc":[972]},{"teal":942,"source":"contracts/BalancedPoolV2.algo.ts:170","errorMessage":"box value does not exist: this.provided(sender).value","pc":[973]},{"teal":943,"source":"contracts/BalancedPoolV2.algo.ts:170","pc":[974,975,976]},{"teal":944,"source":"contracts/BalancedPoolV2.algo.ts:170","pc":[977,978]},{"teal":945,"source":"contracts/BalancedPoolV2.algo.ts:170","pc":[979]},{"teal":946,"source":"contracts/BalancedPoolV2.algo.ts:170","pc":[980,981]},{"teal":947,"source":"contracts/BalancedPoolV2.algo.ts:170","pc":[982]},{"teal":948,"source":"contracts/BalancedPoolV2.algo.ts:170","pc":[983]},{"teal":949,"source":"contracts/BalancedPoolV2.algo.ts:170","pc":[984]},{"teal":950,"source":"contracts/BalancedPoolV2.algo.ts:170","pc":[985,986]},{"teal":951,"source":"contracts/BalancedPoolV2.algo.ts:170","pc":[987]},{"teal":952,"source":"contracts/BalancedPoolV2.algo.ts:170","pc":[988]},{"teal":953,"source":"contracts/BalancedPoolV2.algo.ts:170","pc":[989]},{"teal":954,"source":"contracts/BalancedPoolV2.algo.ts:170","pc":[990]},{"teal":955,"source":"contracts/BalancedPoolV2.algo.ts:170","pc":[991,992]},{"teal":959,"source":"contracts/BalancedPoolV2.algo.ts:172","pc":[993,994]},{"teal":960,"source":"contracts/BalancedPoolV2.algo.ts:172","pc":[995]},{"teal":961,"source":"contracts/BalancedPoolV2.algo.ts:172","pc":[996]},{"teal":964,"source":"contracts/BalancedPoolV2.algo.ts:172","errorMessage":"Pool balance must be > 0","pc":[997]},{"teal":968,"source":"contracts/BalancedPoolV2.algo.ts:173","pc":[998,999]},{"teal":969,"source":"contracts/BalancedPoolV2.algo.ts:173","pc":[1000]},{"teal":970,"source":"contracts/BalancedPoolV2.algo.ts:173","pc":[1001]},{"teal":973,"source":"contracts/BalancedPoolV2.algo.ts:173","errorMessage":"Missing one asset contribution","pc":[1002]},{"teal":977,"source":"contracts/BalancedPoolV2.algo.ts:175","pc":[1003,1004]},{"teal":978,"source":"contracts/BalancedPoolV2.algo.ts:175","pc":[1005]},{"teal":979,"source":"contracts/BalancedPoolV2.algo.ts:175","pc":[1006]},{"teal":980,"source":"contracts/BalancedPoolV2.algo.ts:175","pc":[1007]},{"teal":981,"source":"contracts/BalancedPoolV2.algo.ts:175","pc":[1008,1009]},{"teal":982,"source":"contracts/BalancedPoolV2.algo.ts:175","pc":[1010]},{"teal":983,"source":"contracts/BalancedPoolV2.algo.ts:175","pc":[1011]},{"teal":984,"source":"contracts/BalancedPoolV2.algo.ts:175","pc":[1012]},{"teal":985,"source":"contracts/BalancedPoolV2.algo.ts:175","pc":[1013]},{"teal":986,"source":"contracts/BalancedPoolV2.algo.ts:175","pc":[1014]},{"teal":989,"source":"contracts/BalancedPoolV2.algo.ts:175","errorMessage":"wideRatio failed","pc":[1015]},{"teal":990,"source":"contracts/BalancedPoolV2.algo.ts:175","pc":[1016,1017]},{"teal":995,"source":"contracts/BalancedPoolV2.algo.ts:177","pc":[1018,1019]},{"teal":996,"source":"contracts/BalancedPoolV2.algo.ts:177","pc":[1020,1021]},{"teal":997,"source":"contracts/BalancedPoolV2.algo.ts:177","pc":[1022]},{"teal":998,"source":"contracts/BalancedPoolV2.algo.ts:177","pc":[1023,1024,1025]},{"teal":1003,"source":"contracts/BalancedPoolV2.algo.ts:178","pc":[1026,1027]},{"teal":1004,"source":"contracts/BalancedPoolV2.algo.ts:178","pc":[1028,1029]},{"teal":1011,"source":"contracts/BalancedPoolV2.algo.ts:167","pc":[1030,1031]},{"teal":1012,"source":"contracts/BalancedPoolV2.algo.ts:167","pc":[1032]},{"teal":1013,"source":"contracts/BalancedPoolV2.algo.ts:167","pc":[1033]},{"teal":1014,"source":"contracts/BalancedPoolV2.algo.ts:167","pc":[1034,1035]},{"teal":1015,"source":"contracts/BalancedPoolV2.algo.ts:167","pc":[1036,1037,1038]},{"teal":1020,"source":"contracts/BalancedPoolV2.algo.ts:182","pc":[1039]},{"teal":1021,"source":"contracts/BalancedPoolV2.algo.ts:182","pc":[1040]},{"teal":1022,"source":"contracts/BalancedPoolV2.algo.ts:182","pc":[1041,1042]},{"teal":1023,"source":"contracts/BalancedPoolV2.algo.ts:182","pc":[1043]},{"teal":1024,"source":"contracts/BalancedPoolV2.algo.ts:182","pc":[1044]},{"teal":1025,"source":"contracts/BalancedPoolV2.algo.ts:182","pc":[1045]},{"teal":1026,"source":"contracts/BalancedPoolV2.algo.ts:182","pc":[1046,1047]},{"teal":1027,"source":"contracts/BalancedPoolV2.algo.ts:182","pc":[1048]},{"teal":1028,"source":"contracts/BalancedPoolV2.algo.ts:182","pc":[1049,1050]},{"teal":1032,"source":"contracts/BalancedPoolV2.algo.ts:183","pc":[1051,1052]},{"teal":1033,"source":"contracts/BalancedPoolV2.algo.ts:183","pc":[1053,1054]},{"teal":1034,"source":"contracts/BalancedPoolV2.algo.ts:183","pc":[1055]},{"teal":1035,"source":"contracts/BalancedPoolV2.algo.ts:183","pc":[1056]},{"teal":1036,"source":"contracts/BalancedPoolV2.algo.ts:183","pc":[1057]},{"teal":1037,"source":"contracts/BalancedPoolV2.algo.ts:183","pc":[1058]},{"teal":1038,"source":"contracts/BalancedPoolV2.algo.ts:183","pc":[1059]},{"teal":1039,"source":"contracts/BalancedPoolV2.algo.ts:183","pc":[1060]},{"teal":1040,"source":"contracts/BalancedPoolV2.algo.ts:183","pc":[1061]},{"teal":1041,"source":"contracts/BalancedPoolV2.algo.ts:183","pc":[1062]},{"teal":1044,"source":"contracts/BalancedPoolV2.algo.ts:183","errorMessage":"wideRatio failed","pc":[1063]},{"teal":1047,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[1064,1065]},{"teal":1050,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[1066,1067]},{"teal":1051,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[1068]},{"teal":1055,"source":"contracts/BalancedPoolV2.algo.ts:186","pc":[1069,1070,1071]},{"teal":1059,"source":"contracts/BalancedPoolV2.algo.ts:187","pc":[1072]},{"teal":1060,"source":"contracts/BalancedPoolV2.algo.ts:187","pc":[1073]},{"teal":1061,"source":"contracts/BalancedPoolV2.algo.ts:187","pc":[1074,1075]},{"teal":1062,"source":"contracts/BalancedPoolV2.algo.ts:187","pc":[1076]},{"teal":1063,"source":"contracts/BalancedPoolV2.algo.ts:187","pc":[1077]},{"teal":1064,"source":"contracts/BalancedPoolV2.algo.ts:187","pc":[1078]},{"teal":1065,"source":"contracts/BalancedPoolV2.algo.ts:187","pc":[1079,1080]},{"teal":1066,"source":"contracts/BalancedPoolV2.algo.ts:187","pc":[1081]},{"teal":1067,"source":"contracts/BalancedPoolV2.algo.ts:187","pc":[1082]},{"teal":1068,"source":"contracts/BalancedPoolV2.algo.ts:187","pc":[1083]},{"teal":1069,"source":"contracts/BalancedPoolV2.algo.ts:187","pc":[1084,1085]},{"teal":1070,"source":"contracts/BalancedPoolV2.algo.ts:187","pc":[1086]},{"teal":1071,"source":"contracts/BalancedPoolV2.algo.ts:187","pc":[1087]},{"teal":1072,"source":"contracts/BalancedPoolV2.algo.ts:187","pc":[1088,1089]},{"teal":1073,"source":"contracts/BalancedPoolV2.algo.ts:187","pc":[1090]},{"teal":1074,"source":"contracts/BalancedPoolV2.algo.ts:187","pc":[1091]},{"teal":1075,"source":"contracts/BalancedPoolV2.algo.ts:186","pc":[1092]},{"teal":1080,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1093,1094,1095]},{"teal":1081,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1096]},{"teal":1084,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1097,1098,1099]},{"teal":1085,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1100]},{"teal":1088,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1101,1102,1103]},{"teal":1089,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1104]},{"teal":1092,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1105,1106,1107]},{"teal":1093,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1108]},{"teal":1094,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1109]},{"teal":1095,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1110,1111]},{"teal":1096,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1112]},{"teal":1099,"source":"contracts/BalancedPoolV2.algo.ts:190","errorMessage":"argument 3 (sender) for swap must be a address","pc":[1113]},{"teal":1102,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1114,1115,1116]},{"teal":1103,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1117]},{"teal":1104,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1118]},{"teal":1108,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1119,1120,1121]},{"teal":1111,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1122]},{"teal":1112,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1123,1124]},{"teal":1116,"source":"contracts/BalancedPoolV2.algo.ts:191","pc":[1125]},{"teal":1117,"source":"contracts/BalancedPoolV2.algo.ts:191","pc":[1126]},{"teal":1118,"source":"contracts/BalancedPoolV2.algo.ts:191","pc":[1127]},{"teal":1119,"source":"contracts/BalancedPoolV2.algo.ts:191","pc":[1128]},{"teal":1122,"source":"contracts/BalancedPoolV2.algo.ts:191","errorMessage":"pool not bootstrapped","pc":[1129]},{"teal":1126,"source":"contracts/BalancedPoolV2.algo.ts:193","pc":[1130,1131]},{"teal":1127,"source":"contracts/BalancedPoolV2.algo.ts:193","pc":[1132]},{"teal":1128,"source":"contracts/BalancedPoolV2.algo.ts:193","pc":[1133,1134,1135]},{"teal":1129,"source":"contracts/BalancedPoolV2.algo.ts:193","pc":[1136,1137]},{"teal":1130,"source":"contracts/BalancedPoolV2.algo.ts:193","pc":[1138]},{"teal":1131,"source":"contracts/BalancedPoolV2.algo.ts:193","pc":[1139,1140]},{"teal":1132,"source":"contracts/BalancedPoolV2.algo.ts:193","pc":[1141]},{"teal":1133,"source":"contracts/BalancedPoolV2.algo.ts:193","pc":[1142]},{"teal":1134,"source":"contracts/BalancedPoolV2.algo.ts:193","pc":[1143]},{"teal":1135,"source":"contracts/BalancedPoolV2.algo.ts:193","pc":[1144,1145]},{"teal":1136,"source":"contracts/BalancedPoolV2.algo.ts:193","pc":[1146]},{"teal":1137,"source":"contracts/BalancedPoolV2.algo.ts:193","pc":[1147]},{"teal":1138,"source":"contracts/BalancedPoolV2.algo.ts:193","pc":[1148]},{"teal":1139,"source":"contracts/BalancedPoolV2.algo.ts:193","pc":[1149]},{"teal":1140,"source":"contracts/BalancedPoolV2.algo.ts:193","pc":[1150,1151]},{"teal":1144,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1152,1153]},{"teal":1145,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1154]},{"teal":1146,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1155,1156,1157]},{"teal":1147,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1158,1159]},{"teal":1148,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1160]},{"teal":1149,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1161,1162]},{"teal":1150,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1163]},{"teal":1151,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1164]},{"teal":1152,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1165]},{"teal":1153,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1166,1167]},{"teal":1154,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1168]},{"teal":1155,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1169]},{"teal":1156,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1170]},{"teal":1157,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1171]},{"teal":1158,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1172,1173]},{"teal":1162,"source":"contracts/BalancedPoolV2.algo.ts:196","pc":[1174]},{"teal":1163,"source":"contracts/BalancedPoolV2.algo.ts:196","pc":[1175,1176]},{"teal":1164,"source":"contracts/BalancedPoolV2.algo.ts:196","pc":[1177]},{"teal":1165,"source":"contracts/BalancedPoolV2.algo.ts:196","pc":[1178]},{"teal":1166,"source":"contracts/BalancedPoolV2.algo.ts:196","pc":[1179]},{"teal":1169,"source":"contracts/BalancedPoolV2.algo.ts:196","errorMessage":"box value does not exist: this.balances(assetIn).value","pc":[1180]},{"teal":1170,"source":"contracts/BalancedPoolV2.algo.ts:196","pc":[1181]},{"teal":1171,"source":"contracts/BalancedPoolV2.algo.ts:196","pc":[1182,1183]},{"teal":1175,"source":"contracts/BalancedPoolV2.algo.ts:197","pc":[1184]},{"teal":1176,"source":"contracts/BalancedPoolV2.algo.ts:197","pc":[1185,1186]},{"teal":1177,"source":"contracts/BalancedPoolV2.algo.ts:197","pc":[1187]},{"teal":1178,"source":"contracts/BalancedPoolV2.algo.ts:197","pc":[1188]},{"teal":1179,"source":"contracts/BalancedPoolV2.algo.ts:197","pc":[1189]},{"teal":1182,"source":"contracts/BalancedPoolV2.algo.ts:197","errorMessage":"box value does not exist: this.balances(assetOut).value","pc":[1190]},{"teal":1183,"source":"contracts/BalancedPoolV2.algo.ts:197","pc":[1191]},{"teal":1184,"source":"contracts/BalancedPoolV2.algo.ts:197","pc":[1192,1193]},{"teal":1188,"source":"contracts/BalancedPoolV2.algo.ts:199","pc":[1194,1195]},{"teal":1189,"source":"contracts/BalancedPoolV2.algo.ts:199","pc":[1196,1197]},{"teal":1190,"source":"contracts/BalancedPoolV2.algo.ts:199","pc":[1198]},{"teal":1191,"source":"contracts/BalancedPoolV2.algo.ts:199","pc":[1199]},{"teal":1192,"source":"contracts/BalancedPoolV2.algo.ts:199","pc":[1200]},{"teal":1195,"source":"contracts/BalancedPoolV2.algo.ts:199","errorMessage":"box value does not exist: this.weights(from).value","pc":[1201]},{"teal":1196,"source":"contracts/BalancedPoolV2.algo.ts:199","pc":[1202]},{"teal":1197,"source":"contracts/BalancedPoolV2.algo.ts:199","pc":[1203,1204]},{"teal":1201,"source":"contracts/BalancedPoolV2.algo.ts:200","pc":[1205,1206]},{"teal":1202,"source":"contracts/BalancedPoolV2.algo.ts:200","pc":[1207,1208]},{"teal":1203,"source":"contracts/BalancedPoolV2.algo.ts:200","pc":[1209]},{"teal":1204,"source":"contracts/BalancedPoolV2.algo.ts:200","pc":[1210]},{"teal":1205,"source":"contracts/BalancedPoolV2.algo.ts:200","pc":[1211]},{"teal":1208,"source":"contracts/BalancedPoolV2.algo.ts:200","errorMessage":"box value does not exist: this.weights(to).value","pc":[1212]},{"teal":1209,"source":"contracts/BalancedPoolV2.algo.ts:200","pc":[1213]},{"teal":1210,"source":"contracts/BalancedPoolV2.algo.ts:200","pc":[1214,1215]},{"teal":1214,"source":"contracts/BalancedPoolV2.algo.ts:202","pc":[1216,1217]},{"teal":1215,"source":"contracts/BalancedPoolV2.algo.ts:202","pc":[1218]},{"teal":1216,"source":"contracts/BalancedPoolV2.algo.ts:202","pc":[1219]},{"teal":1220,"source":"contracts/BalancedPoolV2.algo.ts:203","pc":[1220,1221]},{"teal":1221,"source":"contracts/BalancedPoolV2.algo.ts:203","pc":[1222]},{"teal":1222,"source":"contracts/BalancedPoolV2.algo.ts:203","pc":[1223]},{"teal":1226,"source":"contracts/BalancedPoolV2.algo.ts:204","pc":[1224,1225]},{"teal":1227,"source":"contracts/BalancedPoolV2.algo.ts:204","pc":[1226]},{"teal":1228,"source":"contracts/BalancedPoolV2.algo.ts:204","pc":[1227]},{"teal":1232,"source":"contracts/BalancedPoolV2.algo.ts:205","pc":[1228,1229]},{"teal":1233,"source":"contracts/BalancedPoolV2.algo.ts:205","pc":[1230]},{"teal":1234,"source":"contracts/BalancedPoolV2.algo.ts:205","pc":[1231]},{"teal":1238,"source":"contracts/BalancedPoolV2.algo.ts:207","pc":[1232,1233]},{"teal":1239,"source":"contracts/BalancedPoolV2.algo.ts:207","pc":[1234,1235]},{"teal":1240,"source":"contracts/BalancedPoolV2.algo.ts:207","pc":[1236,1237]},{"teal":1241,"source":"contracts/BalancedPoolV2.algo.ts:207","pc":[1238,1239]},{"teal":1242,"source":"contracts/BalancedPoolV2.algo.ts:207","pc":[1240,1241]},{"teal":1243,"source":"contracts/BalancedPoolV2.algo.ts:207","pc":[1242,1243,1244]},{"teal":1244,"source":"contracts/BalancedPoolV2.algo.ts:207","pc":[1245,1246]},{"teal":1248,"source":"contracts/BalancedPoolV2.algo.ts:209","pc":[1247,1248]},{"teal":1249,"source":"contracts/BalancedPoolV2.algo.ts:209","pc":[1249]},{"teal":1250,"source":"contracts/BalancedPoolV2.algo.ts:209","pc":[1250]},{"teal":1254,"source":"contracts/BalancedPoolV2.algo.ts:211","pc":[1251]},{"teal":1255,"source":"contracts/BalancedPoolV2.algo.ts:211","pc":[1252,1253]},{"teal":1256,"source":"contracts/BalancedPoolV2.algo.ts:211","pc":[1254]},{"teal":1257,"source":"contracts/BalancedPoolV2.algo.ts:211","pc":[1255]},{"teal":1258,"source":"contracts/BalancedPoolV2.algo.ts:211","pc":[1256,1257]},{"teal":1259,"source":"contracts/BalancedPoolV2.algo.ts:211","pc":[1258,1259]},{"teal":1260,"source":"contracts/BalancedPoolV2.algo.ts:211","pc":[1260]},{"teal":1261,"source":"contracts/BalancedPoolV2.algo.ts:211","pc":[1261]},{"teal":1262,"source":"contracts/BalancedPoolV2.algo.ts:211","pc":[1262]},{"teal":1266,"source":"contracts/BalancedPoolV2.algo.ts:212","pc":[1263]},{"teal":1267,"source":"contracts/BalancedPoolV2.algo.ts:212","pc":[1264,1265]},{"teal":1268,"source":"contracts/BalancedPoolV2.algo.ts:212","pc":[1266]},{"teal":1269,"source":"contracts/BalancedPoolV2.algo.ts:212","pc":[1267]},{"teal":1270,"source":"contracts/BalancedPoolV2.algo.ts:212","pc":[1268,1269]},{"teal":1271,"source":"contracts/BalancedPoolV2.algo.ts:212","pc":[1270,1271]},{"teal":1272,"source":"contracts/BalancedPoolV2.algo.ts:212","pc":[1272]},{"teal":1273,"source":"contracts/BalancedPoolV2.algo.ts:212","pc":[1273]},{"teal":1274,"source":"contracts/BalancedPoolV2.algo.ts:212","pc":[1274]},{"teal":1282,"source":"contracts/BalancedPoolV2.algo.ts:214","pc":[1275]},{"teal":1283,"source":"contracts/BalancedPoolV2.algo.ts:214","pc":[1276,1277]},{"teal":1284,"source":"contracts/BalancedPoolV2.algo.ts:214","pc":[1278,1279]},{"teal":1288,"source":"contracts/BalancedPoolV2.algo.ts:215","pc":[1280,1281]},{"teal":1289,"source":"contracts/BalancedPoolV2.algo.ts:215","pc":[1282,1283]},{"teal":1293,"source":"contracts/BalancedPoolV2.algo.ts:216","pc":[1284,1285]},{"teal":1294,"source":"contracts/BalancedPoolV2.algo.ts:216","pc":[1286,1287]},{"teal":1298,"source":"contracts/BalancedPoolV2.algo.ts:217","pc":[1288,1289]},{"teal":1299,"source":"contracts/BalancedPoolV2.algo.ts:217","pc":[1290,1291]},{"teal":1302,"source":"contracts/BalancedPoolV2.algo.ts:214","pc":[1292]},{"teal":1303,"source":"contracts/BalancedPoolV2.algo.ts:214","pc":[1293,1294]},{"teal":1306,"source":"contracts/BalancedPoolV2.algo.ts:214","pc":[1295]},{"teal":1307,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1296]},{"teal":1312,"source":"contracts/BalancedPoolV2.algo.ts:225","pc":[1297,1298,1299]},{"teal":1313,"source":"contracts/BalancedPoolV2.algo.ts:225","pc":[1300]},{"teal":1316,"source":"contracts/BalancedPoolV2.algo.ts:225","pc":[1301,1302,1303]},{"teal":1317,"source":"contracts/BalancedPoolV2.algo.ts:225","pc":[1304]},{"teal":1318,"source":"contracts/BalancedPoolV2.algo.ts:225","pc":[1305]},{"teal":1325,"source":"contracts/BalancedPoolV2.algo.ts:225","pc":[1306,1307,1308]},{"teal":1330,"source":"contracts/BalancedPoolV2.algo.ts:226","pc":[1309,1310]},{"teal":1331,"source":"contracts/BalancedPoolV2.algo.ts:226","pc":[1311,1312]},{"teal":1332,"source":"contracts/BalancedPoolV2.algo.ts:226","pc":[1313,1314]},{"teal":1333,"source":"contracts/BalancedPoolV2.algo.ts:226","pc":[1315]},{"teal":1334,"source":"contracts/BalancedPoolV2.algo.ts:226","pc":[1316]},{"teal":1335,"source":"contracts/BalancedPoolV2.algo.ts:226","pc":[1317,1318,1319]},{"teal":1340,"source":"contracts/BalancedPoolV2.algo.ts:227","pc":[1320]},{"teal":1349,"source":"contracts/BalancedPoolV2.algo.ts:230","pc":[1321]},{"teal":1350,"source":"contracts/BalancedPoolV2.algo.ts:230","pc":[1322,1323]},{"teal":1351,"source":"contracts/BalancedPoolV2.algo.ts:230","pc":[1324,1325]},{"teal":1355,"source":"contracts/BalancedPoolV2.algo.ts:231","pc":[1326,1327]},{"teal":1356,"source":"contracts/BalancedPoolV2.algo.ts:231","pc":[1328,1329]},{"teal":1360,"source":"contracts/BalancedPoolV2.algo.ts:232","pc":[1330,1331]},{"teal":1361,"source":"contracts/BalancedPoolV2.algo.ts:232","pc":[1332,1333]},{"teal":1365,"source":"contracts/BalancedPoolV2.algo.ts:233","pc":[1334]},{"teal":1366,"source":"contracts/BalancedPoolV2.algo.ts:233","pc":[1335,1336]},{"teal":1369,"source":"contracts/BalancedPoolV2.algo.ts:230","pc":[1337]},{"teal":1370,"source":"contracts/BalancedPoolV2.algo.ts:230","pc":[1338,1339]},{"teal":1373,"source":"contracts/BalancedPoolV2.algo.ts:230","pc":[1340]},{"teal":1374,"source":"contracts/BalancedPoolV2.algo.ts:225","pc":[1341]},{"teal":1385,"source":"contracts/BalancedPoolV2.algo.ts:245","pc":[1342,1343,1344]},{"teal":1390,"source":"contracts/BalancedPoolV2.algo.ts:246","pc":[1345,1346]},{"teal":1391,"source":"contracts/BalancedPoolV2.algo.ts:246","pc":[1347,1348]},{"teal":1392,"source":"contracts/BalancedPoolV2.algo.ts:246","pc":[1349]},{"teal":1393,"source":"contracts/BalancedPoolV2.algo.ts:246","pc":[1350]},{"teal":1394,"source":"contracts/BalancedPoolV2.algo.ts:246","pc":[1351]},{"teal":1395,"source":"contracts/BalancedPoolV2.algo.ts:246","pc":[1352]},{"teal":1396,"source":"contracts/BalancedPoolV2.algo.ts:246","pc":[1353]},{"teal":1397,"source":"contracts/BalancedPoolV2.algo.ts:246","pc":[1354]},{"teal":1398,"source":"contracts/BalancedPoolV2.algo.ts:246","pc":[1355,1356,1357]},{"teal":1403,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1358,1359]},{"teal":1404,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1360,1361]},{"teal":1405,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1362]},{"teal":1406,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1363]},{"teal":1407,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1364]},{"teal":1408,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1365]},{"teal":1409,"source":"contracts/BalancedPoolV2.algo.ts:247","pc":[1366]},{"teal":1415,"source":"contracts/BalancedPoolV2.algo.ts:250","pc":[1367]},{"teal":1416,"source":"contracts/BalancedPoolV2.algo.ts:250","pc":[1368,1369]},{"teal":1417,"source":"contracts/BalancedPoolV2.algo.ts:250","pc":[1370]},{"teal":1418,"source":"contracts/BalancedPoolV2.algo.ts:250","pc":[1371]},{"teal":1419,"source":"contracts/BalancedPoolV2.algo.ts:250","pc":[1372]},{"teal":1420,"source":"contracts/BalancedPoolV2.algo.ts:250","pc":[1373]},{"teal":1421,"source":"contracts/BalancedPoolV2.algo.ts:250","pc":[1374]},{"teal":1422,"source":"contracts/BalancedPoolV2.algo.ts:250","pc":[1375]},{"teal":1423,"source":"contracts/BalancedPoolV2.algo.ts:250","pc":[1376,1377,1378]},{"teal":1428,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1379]},{"teal":1429,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1380,1381]},{"teal":1430,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1382]},{"teal":1431,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1383]},{"teal":1432,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1384]},{"teal":1433,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1385]},{"teal":1434,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1386]},{"teal":1439,"source":"contracts/BalancedPoolV2.algo.ts:254","pc":[1387,1388]},{"teal":1440,"source":"contracts/BalancedPoolV2.algo.ts:254","pc":[1389,1390]},{"teal":1441,"source":"contracts/BalancedPoolV2.algo.ts:254","pc":[1391]},{"teal":1442,"source":"contracts/BalancedPoolV2.algo.ts:254","pc":[1392]},{"teal":1443,"source":"contracts/BalancedPoolV2.algo.ts:254","pc":[1393,1394]},{"teal":1444,"source":"contracts/BalancedPoolV2.algo.ts:254","pc":[1395]},{"teal":1445,"source":"contracts/BalancedPoolV2.algo.ts:254","pc":[1396]},{"teal":1449,"source":"contracts/BalancedPoolV2.algo.ts:255","pc":[1397]},{"teal":1450,"source":"contracts/BalancedPoolV2.algo.ts:255","pc":[1398,1399]},{"teal":1451,"source":"contracts/BalancedPoolV2.algo.ts:255","pc":[1400]},{"teal":1452,"source":"contracts/BalancedPoolV2.algo.ts:255","pc":[1401]},{"teal":1453,"source":"contracts/BalancedPoolV2.algo.ts:255","pc":[1402,1403]},{"teal":1454,"source":"contracts/BalancedPoolV2.algo.ts:255","pc":[1404]},{"teal":1455,"source":"contracts/BalancedPoolV2.algo.ts:245","pc":[1405]},{"teal":1461,"source":"contracts/BalancedPoolV2.algo.ts:261","pc":[1406,1407,1408]},{"teal":1466,"source":"contracts/BalancedPoolV2.algo.ts:262","pc":[1409]},{"teal":1467,"source":"contracts/BalancedPoolV2.algo.ts:262","pc":[1410]},{"teal":1468,"source":"contracts/BalancedPoolV2.algo.ts:262","pc":[1411]},{"teal":1469,"source":"contracts/BalancedPoolV2.algo.ts:262","pc":[1412]},{"teal":1470,"source":"contracts/BalancedPoolV2.algo.ts:262","pc":[1413,1414,1415]},{"teal":1485,"source":"contracts/BalancedPoolV2.algo.ts:263","pc":[1416]},{"teal":1486,"source":"contracts/BalancedPoolV2.algo.ts:263","pc":[1417]},{"teal":1487,"source":"contracts/BalancedPoolV2.algo.ts:263","pc":[1418,1419]},{"teal":1488,"source":"contracts/BalancedPoolV2.algo.ts:263","pc":[1420,1421]},{"teal":1492,"source":"contracts/BalancedPoolV2.algo.ts:3","pc":[1422,1423]},{"teal":1493,"source":"contracts/BalancedPoolV2.algo.ts:3","pc":[1424,1425]},{"teal":1494,"source":"contracts/BalancedPoolV2.algo.ts:3","pc":[1426]},{"teal":1495,"source":"contracts/BalancedPoolV2.algo.ts:264","pc":[1427,1428]},{"teal":1499,"source":"contracts/BalancedPoolV2.algo.ts:265","pc":[1429,1430]},{"teal":1500,"source":"contracts/BalancedPoolV2.algo.ts:265","pc":[1431,1432]},{"teal":1504,"source":"contracts/BalancedPoolV2.algo.ts:266","pc":[1433,1434]},{"teal":1505,"source":"contracts/BalancedPoolV2.algo.ts:266","pc":[1435,1436]},{"teal":1509,"source":"contracts/BalancedPoolV2.algo.ts:267","pc":[1437,1438]},{"teal":1510,"source":"contracts/BalancedPoolV2.algo.ts:267","pc":[1439,1440]},{"teal":1514,"source":"contracts/BalancedPoolV2.algo.ts:268","pc":[1441,1442]},{"teal":1515,"source":"contracts/BalancedPoolV2.algo.ts:268","pc":[1443,1444]},{"teal":1519,"source":"contracts/BalancedPoolV2.algo.ts:269","pc":[1445,1446]},{"teal":1520,"source":"contracts/BalancedPoolV2.algo.ts:269","pc":[1447,1448]},{"teal":1524,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1449]},{"teal":1525,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1450,1451]},{"teal":1529,"source":"contracts/BalancedPoolV2.algo.ts:271","pc":[1452,1453,1454,1455,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466]},{"teal":1530,"source":"contracts/BalancedPoolV2.algo.ts:271","pc":[1467,1468,1469]},{"teal":1531,"source":"contracts/BalancedPoolV2.algo.ts:271","pc":[1470,1471,1472]},{"teal":1532,"source":"contracts/BalancedPoolV2.algo.ts:271","pc":[1473]},{"teal":1533,"source":"contracts/BalancedPoolV2.algo.ts:271","pc":[1474,1475]},{"teal":1537,"source":"contracts/BalancedPoolV2.algo.ts:272","pc":[1476,1477,1478,1479]},{"teal":1538,"source":"contracts/BalancedPoolV2.algo.ts:272","pc":[1480,1481]},{"teal":1541,"source":"contracts/BalancedPoolV2.algo.ts:263","pc":[1482]},{"teal":1542,"source":"contracts/BalancedPoolV2.algo.ts:263","pc":[1483,1484]},{"teal":1545,"source":"contracts/BalancedPoolV2.algo.ts:263","pc":[1485]},{"teal":1546,"source":"contracts/BalancedPoolV2.algo.ts:263","pc":[1486,1487]},{"teal":1547,"source":"contracts/BalancedPoolV2.algo.ts:263","pc":[1488]},{"teal":1550,"source":"contracts/BalancedPoolV2.algo.ts:261","pc":[1489]},{"teal":1556,"source":"contracts/BalancedPoolV2.algo.ts:280","pc":[1490,1491,1492]},{"teal":1560,"source":"contracts/BalancedPoolV2.algo.ts:281","pc":[1493,1494]},{"teal":1561,"source":"contracts/BalancedPoolV2.algo.ts:281","pc":[1495,1496]},{"teal":1562,"source":"contracts/BalancedPoolV2.algo.ts:281","pc":[1497]},{"teal":1563,"source":"contracts/BalancedPoolV2.algo.ts:281","pc":[1498]},{"teal":1566,"source":"contracts/BalancedPoolV2.algo.ts:281","errorMessage":"only the manager can call this method","pc":[1499]},{"teal":1567,"source":"contracts/BalancedPoolV2.algo.ts:280","pc":[1500]},{"teal":1571,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1501,1502,1503]},{"teal":1574,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1504]},{"teal":1575,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1505,1506]},{"teal":1579,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1507,1508]},{"teal":1580,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1509]},{"teal":1581,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1510]},{"teal":1584,"source":"contracts/BalancedPoolV2.algo.ts:285","errorMessage":"log undefined for x ≤ 0","pc":[1511]},{"teal":1588,"source":"contracts/BalancedPoolV2.algo.ts:287","pc":[1512]},{"teal":1589,"source":"contracts/BalancedPoolV2.algo.ts:287","pc":[1513,1514]},{"teal":1594,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1515,1516]},{"teal":1595,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1517]},{"teal":1596,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1518]},{"teal":1597,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1519,1520,1521]},{"teal":1602,"source":"contracts/BalancedPoolV2.algo.ts:291","pc":[1522]},{"teal":1603,"source":"contracts/BalancedPoolV2.algo.ts:291","pc":[1523,1524]},{"teal":1607,"source":"contracts/BalancedPoolV2.algo.ts:292","pc":[1525]},{"teal":1608,"source":"contracts/BalancedPoolV2.algo.ts:292","pc":[1526]},{"teal":1609,"source":"contracts/BalancedPoolV2.algo.ts:292","pc":[1527]},{"teal":1610,"source":"contracts/BalancedPoolV2.algo.ts:292","pc":[1528]},{"teal":1611,"source":"contracts/BalancedPoolV2.algo.ts:292","pc":[1529,1530]},{"teal":1612,"source":"contracts/BalancedPoolV2.algo.ts:292","pc":[1531]},{"teal":1613,"source":"contracts/BalancedPoolV2.algo.ts:292","pc":[1532]},{"teal":1614,"source":"contracts/BalancedPoolV2.algo.ts:292","pc":[1533]},{"teal":1615,"source":"contracts/BalancedPoolV2.algo.ts:292","pc":[1534]},{"teal":1616,"source":"contracts/BalancedPoolV2.algo.ts:292","pc":[1535]},{"teal":1619,"source":"contracts/BalancedPoolV2.algo.ts:292","errorMessage":"wideRatio failed","pc":[1536]},{"teal":1620,"source":"contracts/BalancedPoolV2.algo.ts:292","pc":[1537,1538]},{"teal":1624,"source":"contracts/BalancedPoolV2.algo.ts:293","pc":[1539,1540]},{"teal":1625,"source":"contracts/BalancedPoolV2.algo.ts:293","pc":[1541]},{"teal":1626,"source":"contracts/BalancedPoolV2.algo.ts:293","pc":[1542]},{"teal":1627,"source":"contracts/BalancedPoolV2.algo.ts:293","pc":[1543]},{"teal":1628,"source":"contracts/BalancedPoolV2.algo.ts:293","pc":[1544]},{"teal":1629,"source":"contracts/BalancedPoolV2.algo.ts:293","pc":[1545]},{"teal":1630,"source":"contracts/BalancedPoolV2.algo.ts:293","pc":[1546,1547]},{"teal":1631,"source":"contracts/BalancedPoolV2.algo.ts:293","pc":[1548]},{"teal":1632,"source":"contracts/BalancedPoolV2.algo.ts:293","pc":[1549]},{"teal":1633,"source":"contracts/BalancedPoolV2.algo.ts:293","pc":[1550]},{"teal":1634,"source":"contracts/BalancedPoolV2.algo.ts:293","pc":[1551]},{"teal":1635,"source":"contracts/BalancedPoolV2.algo.ts:293","pc":[1552]},{"teal":1638,"source":"contracts/BalancedPoolV2.algo.ts:293","errorMessage":"wideRatio failed","pc":[1553]},{"teal":1639,"source":"contracts/BalancedPoolV2.algo.ts:293","pc":[1554,1555]},{"teal":1640,"source":"contracts/BalancedPoolV2.algo.ts:290","pc":[1556,1557,1558]},{"teal":1645,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1559,1560]},{"teal":1646,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1561]},{"teal":1647,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1562]},{"teal":1648,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1563]},{"teal":1649,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1564]},{"teal":1650,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1565]},{"teal":1651,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1566,1567]},{"teal":1652,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1568]},{"teal":1653,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1569]},{"teal":1654,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1570]},{"teal":1655,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1571]},{"teal":1656,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1572]},{"teal":1659,"source":"contracts/BalancedPoolV2.algo.ts:295","errorMessage":"wideRatio failed","pc":[1573]},{"teal":1660,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1574,1575]},{"teal":1665,"source":"contracts/BalancedPoolV2.algo.ts:298","pc":[1576,1577]},{"teal":1666,"source":"contracts/BalancedPoolV2.algo.ts:298","pc":[1578,1579]},{"teal":1670,"source":"contracts/BalancedPoolV2.algo.ts:299","pc":[1580,1581]},{"teal":1671,"source":"contracts/BalancedPoolV2.algo.ts:299","pc":[1582,1583]},{"teal":1675,"source":"contracts/BalancedPoolV2.algo.ts:300","pc":[1584]},{"teal":1676,"source":"contracts/BalancedPoolV2.algo.ts:300","pc":[1585,1586]},{"teal":1680,"source":"contracts/BalancedPoolV2.algo.ts:302","pc":[1587]},{"teal":1681,"source":"contracts/BalancedPoolV2.algo.ts:302","pc":[1588,1589]},{"teal":1682,"source":"contracts/BalancedPoolV2.algo.ts:302","pc":[1590,1591]},{"teal":1683,"source":"contracts/BalancedPoolV2.algo.ts:302","pc":[1592]},{"teal":1684,"source":"contracts/BalancedPoolV2.algo.ts:302","pc":[1593,1594]},{"teal":1685,"source":"contracts/BalancedPoolV2.algo.ts:302","pc":[1595,1596]},{"teal":1686,"source":"contracts/BalancedPoolV2.algo.ts:302","pc":[1597]},{"teal":1687,"source":"contracts/BalancedPoolV2.algo.ts:302","pc":[1598,1599]},{"teal":1688,"source":"contracts/BalancedPoolV2.algo.ts:302","pc":[1600,1601]},{"teal":1689,"source":"contracts/BalancedPoolV2.algo.ts:302","pc":[1602,1603]},{"teal":1690,"source":"contracts/BalancedPoolV2.algo.ts:302","pc":[1604,1605]},{"teal":1691,"source":"contracts/BalancedPoolV2.algo.ts:302","pc":[1606]},{"teal":1695,"source":"contracts/BalancedPoolV2.algo.ts:304","pc":[1607,1608]},{"teal":1696,"source":"contracts/BalancedPoolV2.algo.ts:304","pc":[1609,1610]},{"teal":1701,"source":"contracts/BalancedPoolV2.algo.ts:304","pc":[1611,1612]},{"teal":1702,"source":"contracts/BalancedPoolV2.algo.ts:304","pc":[1613,1614]},{"teal":1703,"source":"contracts/BalancedPoolV2.algo.ts:304","pc":[1615]},{"teal":1704,"source":"contracts/BalancedPoolV2.algo.ts:304","pc":[1616,1617,1618]},{"teal":1708,"source":"contracts/BalancedPoolV2.algo.ts:305","pc":[1619,1620]},{"teal":1709,"source":"contracts/BalancedPoolV2.algo.ts:305","pc":[1621,1622]},{"teal":1710,"source":"contracts/BalancedPoolV2.algo.ts:305","pc":[1623]},{"teal":1711,"source":"contracts/BalancedPoolV2.algo.ts:305","pc":[1624]},{"teal":1712,"source":"contracts/BalancedPoolV2.algo.ts:305","pc":[1625]},{"teal":1713,"source":"contracts/BalancedPoolV2.algo.ts:305","pc":[1626]},{"teal":1714,"source":"contracts/BalancedPoolV2.algo.ts:305","pc":[1627]},{"teal":1715,"source":"contracts/BalancedPoolV2.algo.ts:305","pc":[1628]},{"teal":1716,"source":"contracts/BalancedPoolV2.algo.ts:305","pc":[1629]},{"teal":1717,"source":"contracts/BalancedPoolV2.algo.ts:305","pc":[1630]},{"teal":1720,"source":"contracts/BalancedPoolV2.algo.ts:305","errorMessage":"wideRatio failed","pc":[1631]},{"teal":1721,"source":"contracts/BalancedPoolV2.algo.ts:305","pc":[1632,1633]},{"teal":1725,"source":"contracts/BalancedPoolV2.algo.ts:306","pc":[1634]},{"teal":1726,"source":"contracts/BalancedPoolV2.algo.ts:306","pc":[1635,1636]},{"teal":1727,"source":"contracts/BalancedPoolV2.algo.ts:306","pc":[1637]},{"teal":1728,"source":"contracts/BalancedPoolV2.algo.ts:306","pc":[1638,1639]},{"teal":1729,"source":"contracts/BalancedPoolV2.algo.ts:306","pc":[1640]},{"teal":1730,"source":"contracts/BalancedPoolV2.algo.ts:306","pc":[1641]},{"teal":1731,"source":"contracts/BalancedPoolV2.algo.ts:306","pc":[1642]},{"teal":1732,"source":"contracts/BalancedPoolV2.algo.ts:306","pc":[1643]},{"teal":1733,"source":"contracts/BalancedPoolV2.algo.ts:306","pc":[1644]},{"teal":1736,"source":"contracts/BalancedPoolV2.algo.ts:306","errorMessage":"wideRatio failed","pc":[1645]},{"teal":1737,"source":"contracts/BalancedPoolV2.algo.ts:306","pc":[1646,1647]},{"teal":1741,"source":"contracts/BalancedPoolV2.algo.ts:307","pc":[1648,1649]},{"teal":1742,"source":"contracts/BalancedPoolV2.algo.ts:307","pc":[1650,1651,1652]},{"teal":1743,"source":"contracts/BalancedPoolV2.algo.ts:307","pc":[1653,1654]},{"teal":1744,"source":"contracts/BalancedPoolV2.algo.ts:307","pc":[1655,1656]},{"teal":1745,"source":"contracts/BalancedPoolV2.algo.ts:307","pc":[1657]},{"teal":1746,"source":"contracts/BalancedPoolV2.algo.ts:307","pc":[1658,1659,1660]},{"teal":1749,"source":"contracts/BalancedPoolV2.algo.ts:307","pc":[1661,1662]},{"teal":1750,"source":"contracts/BalancedPoolV2.algo.ts:307","pc":[1663,1664]},{"teal":1751,"source":"contracts/BalancedPoolV2.algo.ts:307","pc":[1665]},{"teal":1754,"source":"contracts/BalancedPoolV2.algo.ts:307","pc":[1666,1667]},{"teal":1758,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1668,1669]},{"teal":1759,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1670]},{"teal":1760,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1671,1672]},{"teal":1765,"source":"contracts/BalancedPoolV2.algo.ts:304","pc":[1673,1674]},{"teal":1766,"source":"contracts/BalancedPoolV2.algo.ts:304","pc":[1675]},{"teal":1767,"source":"contracts/BalancedPoolV2.algo.ts:304","pc":[1676]},{"teal":1768,"source":"contracts/BalancedPoolV2.algo.ts:304","pc":[1677,1678]},{"teal":1769,"source":"contracts/BalancedPoolV2.algo.ts:304","pc":[1679,1680,1681]},{"teal":1774,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1682,1683]},{"teal":1775,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1684]},{"teal":1776,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1685,1686]},{"teal":1777,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1687]},{"teal":1778,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1688]},{"teal":1781,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1689,1690]},{"teal":1784,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1691,1692]},{"teal":1785,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1693]},{"teal":1789,"source":"contracts/BalancedPoolV2.algo.ts:314","pc":[1694,1695,1696]},{"teal":1792,"source":"contracts/BalancedPoolV2.algo.ts:314","pc":[1697]},{"teal":1793,"source":"contracts/BalancedPoolV2.algo.ts:314","pc":[1698,1699]},{"teal":1797,"source":"contracts/BalancedPoolV2.algo.ts:315","pc":[1700]},{"teal":1798,"source":"contracts/BalancedPoolV2.algo.ts:315","pc":[1701,1702]},{"teal":1802,"source":"contracts/BalancedPoolV2.algo.ts:316","pc":[1703]},{"teal":1803,"source":"contracts/BalancedPoolV2.algo.ts:316","pc":[1704,1705]},{"teal":1807,"source":"contracts/BalancedPoolV2.algo.ts:318","pc":[1706]},{"teal":1808,"source":"contracts/BalancedPoolV2.algo.ts:318","pc":[1707,1708]},{"teal":1813,"source":"contracts/BalancedPoolV2.algo.ts:318","pc":[1709,1710]},{"teal":1814,"source":"contracts/BalancedPoolV2.algo.ts:318","pc":[1711,1712]},{"teal":1815,"source":"contracts/BalancedPoolV2.algo.ts:318","pc":[1713]},{"teal":1816,"source":"contracts/BalancedPoolV2.algo.ts:318","pc":[1714,1715,1716]},{"teal":1820,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1717,1718]},{"teal":1821,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1719,1720]},{"teal":1822,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1721]},{"teal":1823,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1722]},{"teal":1824,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1723,1724]},{"teal":1825,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1725]},{"teal":1826,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1726]},{"teal":1827,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1727]},{"teal":1828,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1728]},{"teal":1829,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1729]},{"teal":1830,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1730]},{"teal":1831,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1731]},{"teal":1834,"source":"contracts/BalancedPoolV2.algo.ts:319","errorMessage":"wideRatio failed","pc":[1732]},{"teal":1835,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1733,1734]},{"teal":1839,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1735,1736]},{"teal":1840,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1737,1738]},{"teal":1841,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1739]},{"teal":1842,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1740,1741]},{"teal":1847,"source":"contracts/BalancedPoolV2.algo.ts:318","pc":[1742,1743]},{"teal":1848,"source":"contracts/BalancedPoolV2.algo.ts:318","pc":[1744]},{"teal":1849,"source":"contracts/BalancedPoolV2.algo.ts:318","pc":[1745]},{"teal":1850,"source":"contracts/BalancedPoolV2.algo.ts:318","pc":[1746,1747]},{"teal":1851,"source":"contracts/BalancedPoolV2.algo.ts:318","pc":[1748,1749,1750]},{"teal":1856,"source":"contracts/BalancedPoolV2.algo.ts:323","pc":[1751,1752]},{"teal":1859,"source":"contracts/BalancedPoolV2.algo.ts:314","pc":[1753,1754]},{"teal":1862,"source":"contracts/BalancedPoolV2.algo.ts:314","pc":[1755,1756]},{"teal":1863,"source":"contracts/BalancedPoolV2.algo.ts:314","pc":[1757]},{"teal":1867,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1758,1759,1760]},{"teal":1870,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1761]},{"teal":1871,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1762,1763]},{"teal":1876,"source":"contracts/BalancedPoolV2.algo.ts:327","pc":[1764,1765]},{"teal":1877,"source":"contracts/BalancedPoolV2.algo.ts:327","pc":[1766]},{"teal":1878,"source":"contracts/BalancedPoolV2.algo.ts:327","pc":[1767]},{"teal":1879,"source":"contracts/BalancedPoolV2.algo.ts:327","pc":[1768,1769,1770]},{"teal":1884,"source":"contracts/BalancedPoolV2.algo.ts:327","pc":[1771]},{"teal":1885,"source":"contracts/BalancedPoolV2.algo.ts:327","pc":[1772,1773,1774]},{"teal":1890,"source":"contracts/BalancedPoolV2.algo.ts:329","pc":[1775,1776]},{"teal":1891,"source":"contracts/BalancedPoolV2.algo.ts:329","pc":[1777,1778,1779]},{"teal":1892,"source":"contracts/BalancedPoolV2.algo.ts:329","pc":[1780,1781]},{"teal":1896,"source":"contracts/BalancedPoolV2.algo.ts:330","pc":[1782,1783]},{"teal":1897,"source":"contracts/BalancedPoolV2.algo.ts:330","pc":[1784,1785]},{"teal":1898,"source":"contracts/BalancedPoolV2.algo.ts:330","pc":[1786,1787]},{"teal":1899,"source":"contracts/BalancedPoolV2.algo.ts:330","pc":[1788,1789,1790]},{"teal":1900,"source":"contracts/BalancedPoolV2.algo.ts:330","pc":[1791]},{"teal":1901,"source":"contracts/BalancedPoolV2.algo.ts:330","pc":[1792,1793]},{"teal":1905,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1794,1795]},{"teal":1906,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1796,1797]},{"teal":1907,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1798,1799]},{"teal":1908,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1800,1801,1802]},{"teal":1909,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1803]},{"teal":1910,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1804,1805]},{"teal":1914,"source":"contracts/BalancedPoolV2.algo.ts:333","pc":[1806,1807]},{"teal":1915,"source":"contracts/BalancedPoolV2.algo.ts:333","pc":[1808,1809]},{"teal":1916,"source":"contracts/BalancedPoolV2.algo.ts:333","pc":[1810]},{"teal":1917,"source":"contracts/BalancedPoolV2.algo.ts:333","pc":[1811]},{"teal":1918,"source":"contracts/BalancedPoolV2.algo.ts:333","pc":[1812]},{"teal":1919,"source":"contracts/BalancedPoolV2.algo.ts:333","pc":[1813]},{"teal":1920,"source":"contracts/BalancedPoolV2.algo.ts:333","pc":[1814]},{"teal":1921,"source":"contracts/BalancedPoolV2.algo.ts:333","pc":[1815]},{"teal":1922,"source":"contracts/BalancedPoolV2.algo.ts:333","pc":[1816]},{"teal":1923,"source":"contracts/BalancedPoolV2.algo.ts:333","pc":[1817]},{"teal":1926,"source":"contracts/BalancedPoolV2.algo.ts:333","errorMessage":"wideRatio failed","pc":[1818]},{"teal":1927,"source":"contracts/BalancedPoolV2.algo.ts:333","pc":[1819,1820]},{"teal":1931,"source":"contracts/BalancedPoolV2.algo.ts:335","pc":[1821,1822]},{"teal":1932,"source":"contracts/BalancedPoolV2.algo.ts:335","pc":[1823,1824,1825]},{"teal":1933,"source":"contracts/BalancedPoolV2.algo.ts:335","pc":[1826,1827]},{"teal":1938,"source":"contracts/BalancedPoolV2.algo.ts:337","pc":[1828,1829]},{"teal":1939,"source":"contracts/BalancedPoolV2.algo.ts:337","pc":[1830]},{"teal":1940,"source":"contracts/BalancedPoolV2.algo.ts:337","pc":[1831]},{"teal":1941,"source":"contracts/BalancedPoolV2.algo.ts:337","pc":[1832,1833,1834]},{"teal":1946,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1835]},{"teal":1947,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1836]},{"teal":1948,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1837]},{"teal":1949,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1838]},{"teal":1950,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1839,1840]},{"teal":1951,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1841]},{"teal":1952,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1842]},{"teal":1953,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1843]},{"teal":1954,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1844]},{"teal":1955,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1845]},{"teal":1958,"source":"contracts/BalancedPoolV2.algo.ts:338","errorMessage":"wideRatio failed","pc":[1846]},{"teal":1959,"source":"contracts/BalancedPoolV2.algo.ts:338","pc":[1847,1848,1849]},{"teal":1964,"source":"contracts/BalancedPoolV2.algo.ts:341","pc":[1850,1851]},{"teal":1968,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1852,1853]},{"teal":1971,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1854,1855]},{"teal":1972,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1856]},{"teal":1976,"source":"contracts/BalancedPoolV2.algo.ts:344","pc":[1857,1858,1859]},{"teal":1979,"source":"contracts/BalancedPoolV2.algo.ts:344","pc":[1860]},{"teal":1980,"source":"contracts/BalancedPoolV2.algo.ts:344","pc":[1861,1862]},{"teal":1984,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1863,1864]},{"teal":1985,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1865,1866,1867,1868]},{"teal":1986,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1869]},{"teal":1987,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1870]},{"teal":1988,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1871]},{"teal":1989,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1872]},{"teal":1990,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1873]},{"teal":1991,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1874]},{"teal":1992,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1875]},{"teal":1993,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1876]},{"teal":1996,"source":"contracts/BalancedPoolV2.algo.ts:353","errorMessage":"wideRatio failed","pc":[1877]},{"teal":1997,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1878,1879]},{"teal":2001,"source":"contracts/BalancedPoolV2.algo.ts:356","pc":[1880,1881]},{"teal":2002,"source":"contracts/BalancedPoolV2.algo.ts:356","pc":[1882]},{"teal":2003,"source":"contracts/BalancedPoolV2.algo.ts:356","pc":[1883]},{"teal":2004,"source":"contracts/BalancedPoolV2.algo.ts:356","pc":[1884]},{"teal":2005,"source":"contracts/BalancedPoolV2.algo.ts:356","pc":[1885,1886]},{"teal":2006,"source":"contracts/BalancedPoolV2.algo.ts:356","pc":[1887,1888]},{"teal":2007,"source":"contracts/BalancedPoolV2.algo.ts:356","pc":[1889]},{"teal":2008,"source":"contracts/BalancedPoolV2.algo.ts:356","pc":[1890]},{"teal":2009,"source":"contracts/BalancedPoolV2.algo.ts:356","pc":[1891]},{"teal":2010,"source":"contracts/BalancedPoolV2.algo.ts:356","pc":[1892]},{"teal":2011,"source":"contracts/BalancedPoolV2.algo.ts:356","pc":[1893]},{"teal":2012,"source":"contracts/BalancedPoolV2.algo.ts:356","pc":[1894]},{"teal":2015,"source":"contracts/BalancedPoolV2.algo.ts:356","errorMessage":"wideRatio failed","pc":[1895]},{"teal":2016,"source":"contracts/BalancedPoolV2.algo.ts:356","pc":[1896,1897]},{"teal":2020,"source":"contracts/BalancedPoolV2.algo.ts:358","pc":[1898,1899]},{"teal":2021,"source":"contracts/BalancedPoolV2.algo.ts:358","pc":[1900]},{"teal":2022,"source":"contracts/BalancedPoolV2.algo.ts:358","pc":[1901]},{"teal":2023,"source":"contracts/BalancedPoolV2.algo.ts:358","pc":[1902]},{"teal":2024,"source":"contracts/BalancedPoolV2.algo.ts:358","pc":[1903,1904]},{"teal":2025,"source":"contracts/BalancedPoolV2.algo.ts:358","pc":[1905]},{"teal":2026,"source":"contracts/BalancedPoolV2.algo.ts:358","pc":[1906]},{"teal":2027,"source":"contracts/BalancedPoolV2.algo.ts:358","pc":[1907]},{"teal":2028,"source":"contracts/BalancedPoolV2.algo.ts:358","pc":[1908]},{"teal":2029,"source":"contracts/BalancedPoolV2.algo.ts:358","pc":[1909]},{"teal":2032,"source":"contracts/BalancedPoolV2.algo.ts:358","errorMessage":"wideRatio failed","pc":[1910]},{"teal":2033,"source":"contracts/BalancedPoolV2.algo.ts:358","pc":[1911,1912]},{"teal":2037,"source":"contracts/BalancedPoolV2.algo.ts:360","pc":[1913,1914]},{"teal":2038,"source":"contracts/BalancedPoolV2.algo.ts:360","pc":[1915]},{"teal":2039,"source":"contracts/BalancedPoolV2.algo.ts:360","pc":[1916]},{"teal":2043,"source":"contracts/BalancedPoolV2.algo.ts:361","pc":[1917,1918]},{"teal":2044,"source":"contracts/BalancedPoolV2.algo.ts:361","pc":[1919]},{"teal":2045,"source":"contracts/BalancedPoolV2.algo.ts:361","pc":[1920]},{"teal":2049,"source":"contracts/BalancedPoolV2.algo.ts:364","pc":[1921,1922]},{"teal":2050,"source":"contracts/BalancedPoolV2.algo.ts:364","pc":[1923,1924]},{"teal":2051,"source":"contracts/BalancedPoolV2.algo.ts:364","pc":[1925,1926,1927]},{"teal":2052,"source":"contracts/BalancedPoolV2.algo.ts:364","pc":[1928,1929]},{"teal":2056,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1930,1931]},{"teal":2057,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1932]},{"teal":2058,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1933,1934]},{"teal":2059,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1935]},{"teal":2060,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1936]},{"teal":2061,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1937]},{"teal":2062,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1938]},{"teal":2063,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1939]},{"teal":2064,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1940]},{"teal":2065,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1941]},{"teal":2066,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1942]},{"teal":2067,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1943]},{"teal":2070,"source":"contracts/BalancedPoolV2.algo.ts:366","errorMessage":"wideRatio failed","pc":[1944]},{"teal":2073,"source":"contracts/BalancedPoolV2.algo.ts:344","pc":[1945,1946]},{"teal":2076,"source":"contracts/BalancedPoolV2.algo.ts:344","pc":[1947,1948]},{"teal":2077,"source":"contracts/BalancedPoolV2.algo.ts:344","pc":[1949]},{"teal":2080,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[1950,1951]},{"teal":2081,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[1952,1953,1954]},{"teal":2082,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[1955,1956,1957,1958,1959,1960]},{"teal":2083,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[1961,1962,1963]},{"teal":2084,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[1964,1965,1966,1967]},{"teal":2087,"source":"contracts/BalancedPoolV2.algo.ts:7","errorMessage":"this contract does not implement the given ABI method for create NoOp","pc":[1968]},{"teal":2090,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[1969,1970,1971,1972,1973,1974]},{"teal":2091,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[1975,1976,1977,1978,1979,1980]},{"teal":2092,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[1981,1982,1983,1984,1985,1986]},{"teal":2093,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[1987,1988,1989,1990,1991,1992]},{"teal":2094,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[1993,1994,1995,1996,1997,1998]},{"teal":2095,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[1999,2000,2001,2002,2003,2004]},{"teal":2096,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2005,2006,2007]},{"teal":2097,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021]},{"teal":2100,"source":"contracts/BalancedPoolV2.algo.ts:7","errorMessage":"this contract does not implement the given ABI method for call NoOp","pc":[2022]},{"teal":2103,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2023,2024,2025]},{"teal":2104,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037]},{"teal":2105,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2038,2039]},{"teal":2106,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2040]},{"teal":2107,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2041]},{"teal":2108,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2042]},{"teal":2112,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2043,2044,2045]},{"teal":2113,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2046,2047]},{"teal":2114,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2048]},{"teal":2115,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2049]},{"teal":2116,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2050,2051,2052]},{"teal":2117,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2053,2054,2055]},{"teal":2118,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2056]},{"teal":2121,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2057,2058]},{"teal":2122,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2059,2060]},{"teal":2123,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2061]},{"teal":2124,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2062]},{"teal":2125,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2063]},{"teal":2126,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2064,2065,2066]},{"teal":2127,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2067,2068]},{"teal":2128,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2069,2070]},{"teal":2129,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2071]},{"teal":2130,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2072,2073,2074]},{"teal":2131,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2075,2076,2077]},{"teal":2134,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2078]},{"teal":2137,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2079,2080]},{"teal":2138,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2081,2082]},{"teal":2139,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2083]},{"teal":2140,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2084,2085,2086]},{"teal":2141,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2087]},{"teal":2142,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2088]}],"pcOffsetMethod":"none"},"clear":{"sourceInfo":[],"pcOffsetMethod":"none"}},"source":{"approval":"","clear":"I3ByYWdtYSB2ZXJzaW9uIDEw"},"byteCode":{"approval":"CiAJAAjAhD0BCgYEIAUmCgAJYmFsYW5jZXNfBXRva2VuCXByb3ZpZGVkXwZhc3NldHMId2VpZ2h0c18GYnVybmVkAwqBAQgAAAAAAAAAAAdtYW5hZ2VyMRgUIQULMRkIjQwHNwAAAAAAAAAAAAAHJAAAAAAAAAAAAAAAiAACJUOKAAAnCTYyAHIHSGcnBiJniYAEFR98dTYaAlcCADYaAVcCAIgABRZQsCVDigIBKEmIBR8ijAAijAGLAYv/FSMKDEEAQ4v+Nf8iiwEjCwg0/0wjWBeL/zX/IosBIwsINP9MI1gXiwGIBFWLAIv+Nf8iiwEjCwg0/0wjWBcIjACLASUIjAFC/7InBIv/SRUjChZXBgJMUGeLACQSRIgEYCpkjABGAYk2GgNJFSEHEkQ2GgIXNhoBF4gAAiVDigMAKIgEkCpkIhNEJwRkVwIANf8ii/8jCwg0/0wjWBeMAIAMQXNzZXQgSUQgPT4giwAWULCLAIgDpSmLABZQvkQXi/4IKYsAFlBMFr8ri/1QvUxIFEEACCuL/VCBQLlIK4v9UL5EVwIANf8ii/8jCwg0/0wri/1QvkRXAgA1/yKL/yMLCDT/TCNYF4v+CBZdK4v9UEm8SExJFSMKFlcGAkxQv4k2GgFJFSEHEkSIAAIlQ4oBAChHBCuL/1CMACKMASKMAosCiwC+RFcCABUjCgxBACmLAL5EVwIANf8iiwIjCwg0/0wjWBciDUEABosBJQiMAYsCJQiMAkL/xyKMA4gB7yISQQAPgcCEPSEEIQWUC4wDQgAjiwEnBGRXAgAVIwoSQQAKi/+IAQ+MA0IACosBJRJBAANCAAAijASLBCuL/1C+RFcCABUjCgxBADMri/9QvkRXAgA1/yKLBCMLCDT/TCcIXSuL/1BJvEhMSRUjChZXBgJMUL+LBCUIjARC/7uxIQayEIv/shSLA7ISKmSyESKyAbOJNhoCFzYaAUkVIQcSRIgAAiVDigIAKEcFi/4iDUSIATqMAIsAIg1EJwRkVwIAFSMKjAEijAKLAosBDEEAWicEZFcCADX/IosCIwsINP9MI1gXjAMpiwMWUL5EF4wEi/6LBB0iiwAfSEhMFESMBSmLAxZQiwSLBQkWv7EhBrIQi/+yFIsFshKLA7IRIrIBs4sCJQiMAkL/nicGZIv+CCcGTGeJigEBKEcHJwRkVwIAFSMKjAAkjAGxIQWyECKyAScHSbIesh8hCLIZsyKMAosCiwAMQQBnJwRkVwIANf8iiwIjCwg0/0wjWBeMAymLAxZQvkQXjAQri/9QvkRXAgA1/yKLAiMLCDT/TCNYF4wFiwQiDUSLBSINRIsFJB0iiwQfSEhMFESMBosGiwEMQQAEiwaMAYsCJQiMAkL/kSpkcQhIKmRwAEiMB4sHiwEdIiQfSEhMFESMAEYHiYoAASpkcQBIKmRxCEgqZHAASAknBmQJiTYaBBc2GgMXNhoCFzYaAUkVIQcSRIgAAiVDigQAKEcGKmQiE0QnBGRXAgA1/yKL/iMLCDT/TCNYF4wAJwRkVwIANf8ii/0jCwg0/0wjWBeMASmLABZQvkQXjAIpiwEWUL5EF4wDJwWL/hZQvkQXjAQnBYv9FlC+RBeMBYsCFrCLAxawiwQWsIsFFrCL/IsFiwOLBIsCiAJkjAaLBhawKYsAFlCLAov8CBa/KYsBFlCLA4sGCRa/sSEGshCL/7IUiwayEosBshEisgGziTYaAReIAAIlQ4oBADIKi/9wAExIQQABibEhBrIQMgqyFIv/shEishIisgGziYoDACcFi/8WUL1MSBRBAAknBYv/FlAjuUgpi/4WUL1MSBRBAAgpi/4WUCO5SCcFi/8WUIv9Fr8pi/4WUCcIv4mKAAAqZCISQQBJKrGBA7IQIQSBEJSyIiEFsiMyCrIqMgqyKTIDsiwyA7IrIrIkgA1CYWxhbmNlZFBvb2wtNjIAiAI6ULImgAJMULIlIrIBs7Q8Z4mKAAAxACcJZBJEiYoBAShHB4v/Ig1EIowAi/8kDEEAJSWMACRJHSKL/x9ISEwURIwCiwIkCSQdIosCH0hITBREjAFCABGL/yQJJB0ii/8fSEhMFESMAYsBjAOLAYwEIowFsSEFshAisgEnB0myHrIfIQiyGbOBAowGiwYhBA5BAD+LBIsBHSIkH0hITBREjAQiiwQiiwYfSEhMFESMB4sFQQAIiwOLBwlCAAWLA4sHCIwDiwUUjAWLBiUIjAZC/7mLABaLAxZQjABGB4mKAQEoRwIkjAAkjAEljAKLAiEEDkEAIosBi/8dIosCJAsfSEhMFESMAYsAiwEIjACLAiUIjAJC/9aLAIwARgKJigIBKEcEi/8iEkEABCJCAE2L/4j+6YwAiwA1/zT/VwAIF4wBiwA1/zT/VwgIF4wCi/6LAh0iJB9ISEwURIwDiwOI/3yMBIsBJRJBAA8kSR0iiwQfSEhMFERCAAKLBIwARgSJigUBKEcDi/uB2Pw8HSIkH0hITBREjACL/yQdIov/iwAIH0hITBREjAGL/iQdIov8H0hITBREjAKLARawiwIWsIsCiwGI/1aMA4v9JIsDCR0iJB9ISEwURIwARgOJMRtB+NiABLhEezY2GgCOAfjLAIAE5jX9tYAEq99+FYAE36twY4AEP7HQm4AEBKpcfoAEH8TD4zYaAI4G+Kv5P/n5+u38X/0rAIoBAYAKMDEyMzQ1Njc4OYv/JViJigEBi/8iEkEABIABMImL/yEECiINQQALi/8hBAqI/+BCAAEoi/8hBBiI/8BQiQ==","clear":"Cg=="},"compilerInfo":{"compiler":"algod","compilerVersion":{"major":4,"minor":0,"patch":2,"commitHash":"6b940281"}}} as unknown as Arc56Contract

/**
 * A state record containing binary data
 */
export interface BinaryState {
  /**
   * Gets the state value as a Uint8Array
   */
  asByteArray(): Uint8Array | undefined
  /**
   * Gets the state value as a string
   */
  asString(): string | undefined
}

class BinaryStateValue implements BinaryState {
  constructor(private value: Uint8Array | undefined) {}

  asByteArray(): Uint8Array | undefined {
    return this.value
  }

  asString(): string | undefined {
    return this.value !== undefined ? Buffer.from(this.value).toString('utf-8') : undefined
  }
}

/**
 * Expands types for IntelliSense so they are more human readable
 * See https://stackoverflow.com/a/69288824
 */
export type Expand<T> = T extends (...args: infer A) => infer R
  ? (...args: Expand<A>) => Expand<R>
  : T extends infer O
    ? { [K in keyof O]: O[K] }
    : never


/**
 * The argument types for the BalancedPoolV2 contract
 */
export type BalancedPoolV2Args = {
  /**
   * The object representation of the arguments for each method
   */
  obj: {
    'createApplication()void': Record<string, never>
    'bootstrap(uint64[],uint64[])uint64': {
      /**
       * assets of the pool
       */
      assetIds: bigint[] | number[]
      /**
      * weights of the pool
      uint64 - LP Token created ID

       */
      weights: bigint[] | number[]
    }
    'addLiquidity(uint64,uint64,address)void': {
      /**
       * index of the token in the pool
       */
      index: bigint | number
      /**
       * amount of token sent
       */
      amount: bigint | number
      /**
       * the sender
       */
      sender: string
    }
    'getLiquidity(address)void': {
      /**
       * the sender
       */
      sender: string
    }
    'burnLiquidity(address,uint64)void': {
      sender: string
      amountLp: bigint | number
    }
    'swap(address,uint64,uint64,uint64)void': {
      sender: string
      from: bigint | number
      to: bigint | number
      amount: bigint | number
    }
    'optIn(uint64)void': {
      /**
      * asset to opt-in
      why?

       */
      assetId: bigint | number
    }
  }
  /**
   * The tuple representation of the arguments for each method
   */
  tuple: {
    'createApplication()void': []
    'bootstrap(uint64[],uint64[])uint64': [assetIds: bigint[] | number[], weights: bigint[] | number[]]
    'addLiquidity(uint64,uint64,address)void': [index: bigint | number, amount: bigint | number, sender: string]
    'getLiquidity(address)void': [sender: string]
    'burnLiquidity(address,uint64)void': [sender: string, amountLp: bigint | number]
    'swap(address,uint64,uint64,uint64)void': [sender: string, from: bigint | number, to: bigint | number, amount: bigint | number]
    'optIn(uint64)void': [assetId: bigint | number]
  }
}

/**
 * The return type for each method
 */
export type BalancedPoolV2Returns = {
  'createApplication()void': void
  'bootstrap(uint64[],uint64[])uint64': bigint
  'addLiquidity(uint64,uint64,address)void': void
  'getLiquidity(address)void': void
  'burnLiquidity(address,uint64)void': void
  'swap(address,uint64,uint64,uint64)void': void
  'optIn(uint64)void': void
}

/**
 * Defines the types of available calls and state of the BalancedPoolV2 smart contract.
 */
export type BalancedPoolV2Types = {
  /**
   * Maps method signatures / names to their argument and return types.
   */
  methods:
    & Record<'createApplication()void' | 'createApplication', {
      argsObj: BalancedPoolV2Args['obj']['createApplication()void']
      argsTuple: BalancedPoolV2Args['tuple']['createApplication()void']
      returns: BalancedPoolV2Returns['createApplication()void']
    }>
    & Record<'bootstrap(uint64[],uint64[])uint64' | 'bootstrap', {
      argsObj: BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64']
      argsTuple: BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']
      returns: BalancedPoolV2Returns['bootstrap(uint64[],uint64[])uint64']
    }>
    & Record<'addLiquidity(uint64,uint64,address)void' | 'addLiquidity', {
      argsObj: BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void']
      argsTuple: BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']
      returns: BalancedPoolV2Returns['addLiquidity(uint64,uint64,address)void']
    }>
    & Record<'getLiquidity(address)void' | 'getLiquidity', {
      argsObj: BalancedPoolV2Args['obj']['getLiquidity(address)void']
      argsTuple: BalancedPoolV2Args['tuple']['getLiquidity(address)void']
      returns: BalancedPoolV2Returns['getLiquidity(address)void']
    }>
    & Record<'burnLiquidity(address,uint64)void' | 'burnLiquidity', {
      argsObj: BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void']
      argsTuple: BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']
      returns: BalancedPoolV2Returns['burnLiquidity(address,uint64)void']
    }>
    & Record<'swap(address,uint64,uint64,uint64)void' | 'swap', {
      argsObj: BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)void']
      argsTuple: BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)void']
      returns: BalancedPoolV2Returns['swap(address,uint64,uint64,uint64)void']
    }>
    & Record<'optIn(uint64)void' | 'optIn', {
      argsObj: BalancedPoolV2Args['obj']['optIn(uint64)void']
      argsTuple: BalancedPoolV2Args['tuple']['optIn(uint64)void']
      returns: BalancedPoolV2Returns['optIn(uint64)void']
    }>
  /**
   * Defines the shape of the state of the application.
   */
  state: {
    global: {
      keys: {
        manager: string
        token: bigint
        burned: bigint
        assets: bigint[]
      }
      maps: {}
    }
    box: {
      keys: {}
      maps: {
        weights: Map<bigint | number, bigint>
        balances: Map<bigint | number, bigint>
        provided: Map<string, bigint[]>
        minRatios: Map<string, bigint>
      }
    }
  }
}

/**
 * Defines the possible abi call signatures.
 */
export type BalancedPoolV2Signatures = keyof BalancedPoolV2Types['methods']
/**
 * Defines the possible abi call signatures for methods that return a non-void value.
 */
export type BalancedPoolV2NonVoidMethodSignatures = keyof BalancedPoolV2Types['methods'] extends infer T ? T extends keyof BalancedPoolV2Types['methods'] ? MethodReturn<T> extends void ? never : T  : never : never
/**
 * Defines an object containing all relevant parameters for a single call to the contract.
 */
export type CallParams<TArgs> = Expand<
  Omit<AppClientMethodCallParams, 'method' | 'args' | 'onComplete'> &
    {
      /** The args for the ABI method call, either as an ordered array or an object */
      args: Expand<TArgs>
    }
>
/**
 * Maps a method signature from the BalancedPoolV2 smart contract to the method's arguments in either tuple or struct form
 */
export type MethodArgs<TSignature extends BalancedPoolV2Signatures> = BalancedPoolV2Types['methods'][TSignature]['argsObj' | 'argsTuple']
/**
 * Maps a method signature from the BalancedPoolV2 smart contract to the method's return type
 */
export type MethodReturn<TSignature extends BalancedPoolV2Signatures> = BalancedPoolV2Types['methods'][TSignature]['returns']

/**
 * Defines the shape of the keyed global state of the application.
 */
export type GlobalKeysState = BalancedPoolV2Types['state']['global']['keys']

/**
 * Defines the shape of the keyed box state of the application.
 */
export type BoxKeysState = BalancedPoolV2Types['state']['box']['keys']


/**
 * Defines supported create method params for this smart contract
 */
export type BalancedPoolV2CreateCallParams =
  | Expand<CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & {method: 'createApplication'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
  | Expand<CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & {method: 'createApplication()void'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
/**
 * Defines arguments required for the deploy method.
 */
export type BalancedPoolV2DeployParams = Expand<Omit<AppFactoryDeployParams, 'createParams' | 'updateParams' | 'deleteParams'> & {
  /**
   * Create transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  createParams?: BalancedPoolV2CreateCallParams
}>


/**
 * Exposes methods for constructing `AppClient` params objects for ABI calls to the BalancedPoolV2 smart contract
 */
export abstract class BalancedPoolV2ParamsFactory {
  /**
   * Gets available create ABI call param factories
   */
  static get create() {
    return {
      _resolveByMethod<TParams extends BalancedPoolV2CreateCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'createApplication':
          case 'createApplication()void':
            return BalancedPoolV2ParamsFactory.create.createApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs create ABI call params for the BalancedPoolV2 smart contract using the createApplication()void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      createApplication(params: CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC}): AppClientMethodCallParams & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC} {
        return {
          ...params,
          method: 'createApplication()void' as const,
          args: Array.isArray(params.args) ? params.args : [],
        }
      },
    }
  }

  /**
   * Constructs a no op call for the bootstrap(uint64[],uint64[])uint64 ABI method
   *
   * Bootstrap the pool by assigning assets and weights, create the LP tokens
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static bootstrap(params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'bootstrap(uint64[],uint64[])uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.assetIds, params.args.weights],
    }
  }
  /**
   * Constructs a no op call for the addLiquidity(uint64,uint64,address)void ABI method
   *
   * Provide one token liquidity to the pool
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static addLiquidity(params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'addLiquidity(uint64,uint64,address)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.index, params.args.amount, params.args.sender],
    }
  }
  /**
   * Constructs a no op call for the getLiquidity(address)void ABI method
   *
  * Compute the liquidity for the given sender based on the state
  in the contract

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getLiquidity(params: CallParams<BalancedPoolV2Args['obj']['getLiquidity(address)void'] | BalancedPoolV2Args['tuple']['getLiquidity(address)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getLiquidity(address)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.sender],
    }
  }
  /**
   * Constructs a no op call for the burnLiquidity(address,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static burnLiquidity(params: CallParams<BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void'] | BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'burnLiquidity(address,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.sender, params.args.amountLp],
    }
  }
  /**
   * Constructs a no op call for the swap(address,uint64,uint64,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static swap(params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)void'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'swap(address,uint64,uint64,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.sender, params.args.from, params.args.to, params.args.amount],
    }
  }
  /**
   * Constructs a no op call for the optIn(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static optIn(params: CallParams<BalancedPoolV2Args['obj']['optIn(uint64)void'] | BalancedPoolV2Args['tuple']['optIn(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'optIn(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.assetId],
    }
  }
}

/**
 * A factory to create and deploy one or more instance of the BalancedPoolV2 smart contract and to create one or more app clients to interact with those (or other) app instances
 */
export class BalancedPoolV2Factory {
  /**
   * The underlying `AppFactory` for when you want to have more flexibility
   */
  public readonly appFactory: _AppFactory

  /**
   * Creates a new instance of `BalancedPoolV2Factory`
   *
   * @param params The parameters to initialise the app factory with
   */
  constructor(params: Omit<AppFactoryParams, 'appSpec'>) {
    this.appFactory = new _AppFactory({
      ...params,
      appSpec: APP_SPEC,
    })
  }
  
  /** The name of the app (from the ARC-32 / ARC-56 app spec or override). */
  public get appName() {
    return this.appFactory.appName
  }
  
  /** The ARC-56 app spec being used */
  get appSpec() {
    return APP_SPEC
  }
  
  /** A reference to the underlying `AlgorandClient` this app factory is using. */
  public get algorand(): AlgorandClientInterface {
    return this.appFactory.algorand
  }
  
  /**
   * Returns a new `AppClient` client for an app instance of the given ID.
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public getAppClientById(params: AppFactoryAppClientParams) {
    return new BalancedPoolV2Client(this.appFactory.getAppClientById(params))
  }
  
  /**
   * Returns a new `AppClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public async getAppClientByCreatorAndName(
    params: AppFactoryResolveAppClientByCreatorAndNameParams,
  ) {
    return new BalancedPoolV2Client(await this.appFactory.getAppClientByCreatorAndName(params))
  }

  /**
   * Idempotently deploys the BalancedPoolV2 smart contract.
   *
   * @param params The arguments for the contract calls and any additional parameters for the call
   * @returns The deployment result
   */
  public async deploy(params: BalancedPoolV2DeployParams = {}) {
    const result = await this.appFactory.deploy({
      ...params,
      createParams: params.createParams?.method ? BalancedPoolV2ParamsFactory.create._resolveByMethod(params.createParams) : params.createParams ? params.createParams as (BalancedPoolV2CreateCallParams & { args: Uint8Array[] }) : undefined,
    })
    return { result: result.result, appClient: new BalancedPoolV2Client(result.appClient) }
  }

  /**
   * Get parameters to create transactions (create and deploy related calls) for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the BalancedPoolV2 smart contract using the createApplication()void ABI method.
       *
       * createApplication method called at creation
       *
       * @param params The params for the smart contract call
       * @returns The create params
       */
      createApplication: (params: CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.params.create(BalancedPoolV2ParamsFactory.create.createApplication(params))
      },
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the BalancedPoolV2 smart contract using the createApplication()void ABI method.
       *
       * createApplication method called at creation
       *
       * @param params The params for the smart contract call
       * @returns The create transaction
       */
      createApplication: (params: CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.createTransaction.create(BalancedPoolV2ParamsFactory.create.createApplication(params))
      },
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the BalancedPoolV2 smart contract using an ABI method call using the createApplication()void ABI method.
       *
       * createApplication method called at creation
       *
       * @param params The params for the smart contract call
       * @returns The create result
       */
      createApplication: async (params: CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        const result = await this.appFactory.send.create(BalancedPoolV2ParamsFactory.create.createApplication(params))
        return { result: { ...result.result, return: result.result.return as unknown as (undefined | BalancedPoolV2Returns['createApplication()void']) }, appClient: new BalancedPoolV2Client(result.appClient) }
      },
    },

  }

}
/**
 * A client to make calls to the BalancedPoolV2 smart contract
 */
export class BalancedPoolV2Client {
  /**
   * The underlying `AppClient` for when you want to have more flexibility
   */
  public readonly appClient: _AppClient

  /**
   * Creates a new instance of `BalancedPoolV2Client`
   *
   * @param appClient An `AppClient` instance which has been created with the BalancedPoolV2 app spec
   */
  constructor(appClient: _AppClient)
  /**
   * Creates a new instance of `BalancedPoolV2Client`
   *
   * @param params The parameters to initialise the app client with
   */
  constructor(params: Omit<AppClientParams, 'appSpec'>)
  constructor(appClientOrParams: _AppClient | Omit<AppClientParams, 'appSpec'>) {
    this.appClient = appClientOrParams instanceof _AppClient ? appClientOrParams : new _AppClient({
      ...appClientOrParams,
      appSpec: APP_SPEC,
    })
  }
  
  /**
   * Checks for decode errors on the given return value and maps the return value to the return type for the given method
   * @returns The typed return value or undefined if there was no value
   */
  decodeReturnValue<TSignature extends BalancedPoolV2NonVoidMethodSignatures>(method: TSignature, returnValue: ABIReturn | undefined) {
    return returnValue !== undefined ? getArc56ReturnValue<MethodReturn<TSignature>>(returnValue, this.appClient.getABIMethod(method), APP_SPEC.structs) : undefined
  }
  
  /**
   * Returns a new `BalancedPoolV2Client` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   * @param params The parameters to create the app client
   */
  public static async fromCreatorAndName(params: Omit<ResolveAppClientByCreatorAndName, 'appSpec'>): Promise<BalancedPoolV2Client> {
    return new BalancedPoolV2Client(await _AppClient.fromCreatorAndName({...params, appSpec: APP_SPEC}))
  }
  
  /**
   * Returns an `BalancedPoolV2Client` instance for the current network based on
   * pre-determined network-specific app IDs specified in the ARC-56 app spec.
   *
   * If no IDs are in the app spec or the network isn't recognised, an error is thrown.
   * @param params The parameters to create the app client
   */
  static async fromNetwork(
    params: Omit<ResolveAppClientByNetwork, 'appSpec'>
  ): Promise<BalancedPoolV2Client> {
    return new BalancedPoolV2Client(await _AppClient.fromNetwork({...params, appSpec: APP_SPEC}))
  }
  
  /** The ID of the app instance this client is linked to. */
  public get appId() {
    return this.appClient.appId
  }
  
  /** The app address of the app instance this client is linked to. */
  public get appAddress() {
    return this.appClient.appAddress
  }
  
  /** The name of the app. */
  public get appName() {
    return this.appClient.appName
  }
  
  /** The ARC-56 app spec being used */
  public get appSpec() {
    return this.appClient.appSpec
  }
  
  /** A reference to the underlying `AlgorandClient` this app client is using. */
  public get algorand(): AlgorandClientInterface {
    return this.appClient.algorand
  }

  /**
   * Get parameters to create transactions for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Makes a clear_state call to an existing instance of the BalancedPoolV2 smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.params.bare.clearState(params)
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `bootstrap(uint64[],uint64[])uint64` ABI method.
     *
     * Bootstrap the pool by assigning assets and weights, create the LP tokens
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    bootstrap: (params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.bootstrap(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `addLiquidity(uint64,uint64,address)void` ABI method.
     *
     * Provide one token liquidity to the pool
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    addLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.addLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getLiquidity(address)void` ABI method.
     *
    * Compute the liquidity for the given sender based on the state
    in the contract

     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['getLiquidity(address)void'] | BalancedPoolV2Args['tuple']['getLiquidity(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.getLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `burnLiquidity(address,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    burnLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void'] | BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.burnLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `swap(address,uint64,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    swap: (params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)void'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.swap(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `optIn(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    optIn: (params: CallParams<BalancedPoolV2Args['obj']['optIn(uint64)void'] | BalancedPoolV2Args['tuple']['optIn(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.optIn(params))
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Makes a clear_state call to an existing instance of the BalancedPoolV2 smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.createTransaction.bare.clearState(params)
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `bootstrap(uint64[],uint64[])uint64` ABI method.
     *
     * Bootstrap the pool by assigning assets and weights, create the LP tokens
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    bootstrap: (params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.bootstrap(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `addLiquidity(uint64,uint64,address)void` ABI method.
     *
     * Provide one token liquidity to the pool
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    addLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.addLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getLiquidity(address)void` ABI method.
     *
    * Compute the liquidity for the given sender based on the state
    in the contract

     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['getLiquidity(address)void'] | BalancedPoolV2Args['tuple']['getLiquidity(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.getLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `burnLiquidity(address,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    burnLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void'] | BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.burnLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `swap(address,uint64,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    swap: (params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)void'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.swap(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `optIn(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    optIn: (params: CallParams<BalancedPoolV2Args['obj']['optIn(uint64)void'] | BalancedPoolV2Args['tuple']['optIn(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.optIn(params))
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Makes a clear_state call to an existing instance of the BalancedPoolV2 smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams & SendParams>) => {
      return this.appClient.send.bare.clearState(params)
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `bootstrap(uint64[],uint64[])uint64` ABI method.
     *
     * Bootstrap the pool by assigning assets and weights, create the LP tokens
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    bootstrap: async (params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.bootstrap(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['bootstrap(uint64[],uint64[])uint64'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `addLiquidity(uint64,uint64,address)void` ABI method.
     *
     * Provide one token liquidity to the pool
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    addLiquidity: async (params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.addLiquidity(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['addLiquidity(uint64,uint64,address)void'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getLiquidity(address)void` ABI method.
     *
    * Compute the liquidity for the given sender based on the state
    in the contract

     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getLiquidity: async (params: CallParams<BalancedPoolV2Args['obj']['getLiquidity(address)void'] | BalancedPoolV2Args['tuple']['getLiquidity(address)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.getLiquidity(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['getLiquidity(address)void'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `burnLiquidity(address,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    burnLiquidity: async (params: CallParams<BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void'] | BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.burnLiquidity(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['burnLiquidity(address,uint64)void'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `swap(address,uint64,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    swap: async (params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)void'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.swap(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['swap(address,uint64,uint64,uint64)void'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `optIn(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    optIn: async (params: CallParams<BalancedPoolV2Args['obj']['optIn(uint64)void'] | BalancedPoolV2Args['tuple']['optIn(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.optIn(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['optIn(uint64)void'])}
    },

  }

  /**
   * Clone this app client with different params
   *
   * @param params The params to use for the the cloned app client. Omit a param to keep the original value. Set a param to override the original value. Setting to undefined will clear the original value.
   * @returns A new app client with the altered params
   */
  public clone(params: CloneAppClientParams) {
    return new BalancedPoolV2Client(this.appClient.clone(params))
  }

  /**
   * Methods to access state for the current BalancedPoolV2 app
   */
  state = {
    /**
     * Methods to access global state for the current BalancedPoolV2 app
     */
    global: {
      /**
       * Get all current keyed values from global state
       */
      getAll: async (): Promise<Partial<Expand<GlobalKeysState>>> => {
        const result = await this.appClient.state.global.getAll()
        return {
          manager: result.manager,
          token: result.token,
          burned: result.burned,
          assets: result.assets,
        }
      },
      /**
       * Get the current value of the manager key in global state
       */
      manager: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("manager")) as string | undefined },
      /**
       * Get the current value of the token key in global state
       */
      token: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("token")) as bigint | undefined },
      /**
       * Get the current value of the burned key in global state
       */
      burned: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("burned")) as bigint | undefined },
      /**
       * Get the current value of the assets key in global state
       */
      assets: async (): Promise<bigint[] | undefined> => { return (await this.appClient.state.global.getValue("assets")) as bigint[] | undefined },
    },
    /**
     * Methods to access box state for the current BalancedPoolV2 app
     */
    box: {
      /**
       * Get all current keyed values from box state
       */
      getAll: async (): Promise<Partial<Expand<BoxKeysState>>> => {
        const result = await this.appClient.state.box.getAll()
        return {
        }
      },
      /**
       * Get values from the weights map in box state
       */
      weights: {
        /**
         * Get all current values of the weights map in box state
         */
        getMap: async (): Promise<Map<bigint, bigint>> => { return (await this.appClient.state.box.getMap("weights")) as Map<bigint, bigint> },
        /**
         * Get a current value of the weights map by key from box state
         */
        value: async (key: bigint | number): Promise<bigint | undefined> => { return await this.appClient.state.box.getMapValue("weights", key) as bigint | undefined },
      },
      /**
       * Get values from the balances map in box state
       */
      balances: {
        /**
         * Get all current values of the balances map in box state
         */
        getMap: async (): Promise<Map<bigint, bigint>> => { return (await this.appClient.state.box.getMap("balances")) as Map<bigint, bigint> },
        /**
         * Get a current value of the balances map by key from box state
         */
        value: async (key: bigint | number): Promise<bigint | undefined> => { return await this.appClient.state.box.getMapValue("balances", key) as bigint | undefined },
      },
      /**
       * Get values from the provided map in box state
       */
      provided: {
        /**
         * Get all current values of the provided map in box state
         */
        getMap: async (): Promise<Map<string, bigint[]>> => { return (await this.appClient.state.box.getMap("provided")) as Map<string, bigint[]> },
        /**
         * Get a current value of the provided map by key from box state
         */
        value: async (key: string): Promise<bigint[] | undefined> => { return await this.appClient.state.box.getMapValue("provided", key) as bigint[] | undefined },
      },
      /**
       * Get values from the minRatios map in box state
       */
      minRatios: {
        /**
         * Get all current values of the minRatios map in box state
         */
        getMap: async (): Promise<Map<string, bigint>> => { return (await this.appClient.state.box.getMap("minRatios")) as Map<string, bigint> },
        /**
         * Get a current value of the minRatios map by key from box state
         */
        value: async (key: string): Promise<bigint | undefined> => { return await this.appClient.state.box.getMapValue("minRatios", key) as bigint | undefined },
      },
    },
  }

  public newGroup(): BalancedPoolV2Composer {
    const client = this
    const composer = this.algorand.newGroup()
    let promiseChain:Promise<unknown> = Promise.resolve()
    const resultMappers: Array<undefined | ((x: ABIReturn | undefined) => any)> = []
    return {
      /**
       * Add a bootstrap(uint64[],uint64[])uint64 method call against the BalancedPoolV2 contract
       */
      bootstrap(params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.bootstrap(params)))
        resultMappers.push((v) => client.decodeReturnValue('bootstrap(uint64[],uint64[])uint64', v))
        return this
      },
      /**
       * Add a addLiquidity(uint64,uint64,address)void method call against the BalancedPoolV2 contract
       */
      addLiquidity(params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.addLiquidity(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a getLiquidity(address)void method call against the BalancedPoolV2 contract
       */
      getLiquidity(params: CallParams<BalancedPoolV2Args['obj']['getLiquidity(address)void'] | BalancedPoolV2Args['tuple']['getLiquidity(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getLiquidity(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a burnLiquidity(address,uint64)void method call against the BalancedPoolV2 contract
       */
      burnLiquidity(params: CallParams<BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void'] | BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.burnLiquidity(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a swap(address,uint64,uint64,uint64)void method call against the BalancedPoolV2 contract
       */
      swap(params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)void'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.swap(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a optIn(uint64)void method call against the BalancedPoolV2 contract
       */
      optIn(params: CallParams<BalancedPoolV2Args['obj']['optIn(uint64)void'] | BalancedPoolV2Args['tuple']['optIn(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.optIn(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a clear state call to the BalancedPoolV2 contract
       */
      clearState(params: AppClientBareCallParams) {
        promiseChain = promiseChain.then(() => composer.addAppCall(client.params.clearState(params)))
        return this
      },
      addTransaction(txn: Transaction, signer?: TransactionSigner) {
        promiseChain = promiseChain.then(() => composer.addTransaction(txn, signer))
        return this
      },
      async composer() {
        await promiseChain
        return composer
      },
      async simulate(options?: SimulateOptions) {
        await promiseChain
        const result = await (!options ? composer.simulate() : composer.simulate(options))
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      },
      async send(params?: SendParams) {
        await promiseChain
        const result = await composer.send(params)
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      }
    } as unknown as BalancedPoolV2Composer
  }
}
export type BalancedPoolV2Composer<TReturns extends [...any[]] = []> = {
  /**
   * Calls the bootstrap(uint64[],uint64[])uint64 ABI method.
   *
   * Bootstrap the pool by assigning assets and weights, create the LP tokens
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  bootstrap(params?: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['bootstrap(uint64[],uint64[])uint64'] | undefined]>

  /**
   * Calls the addLiquidity(uint64,uint64,address)void ABI method.
   *
   * Provide one token liquidity to the pool
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  addLiquidity(params?: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['addLiquidity(uint64,uint64,address)void'] | undefined]>

  /**
   * Calls the getLiquidity(address)void ABI method.
   *
  * Compute the liquidity for the given sender based on the state
  in the contract

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getLiquidity(params?: CallParams<BalancedPoolV2Args['obj']['getLiquidity(address)void'] | BalancedPoolV2Args['tuple']['getLiquidity(address)void']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['getLiquidity(address)void'] | undefined]>

  /**
   * Calls the burnLiquidity(address,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  burnLiquidity(params?: CallParams<BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void'] | BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['burnLiquidity(address,uint64)void'] | undefined]>

  /**
   * Calls the swap(address,uint64,uint64,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  swap(params?: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)void'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)void']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['swap(address,uint64,uint64,uint64)void'] | undefined]>

  /**
   * Calls the optIn(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  optIn(params?: CallParams<BalancedPoolV2Args['obj']['optIn(uint64)void'] | BalancedPoolV2Args['tuple']['optIn(uint64)void']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['optIn(uint64)void'] | undefined]>

  /**
   * Makes a clear_state call to an existing instance of the BalancedPoolV2 smart contract.
   *
   * @param args The arguments for the bare call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  clearState(params?: AppClientBareCallParams): BalancedPoolV2Composer<[...TReturns, undefined]>

  /**
   * Adds a transaction to the composer
   *
   * @param txn A transaction to add to the transaction group
   * @param signer The optional signer to use when signing this transaction.
   */
  addTransaction(txn: Transaction, signer?: TransactionSigner): BalancedPoolV2Composer<TReturns>
  /**
   * Returns the underlying AtomicTransactionComposer instance
   */
  composer(): Promise<TransactionComposer>
  /**
   * Simulates the transaction group and returns the result
   */
  simulate(): Promise<BalancedPoolV2ComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: SkipSignaturesSimulateOptions): Promise<BalancedPoolV2ComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: RawSimulateOptions): Promise<BalancedPoolV2ComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  /**
   * Sends the transaction group to the network and returns the results
   */
  send(params?: SendParams): Promise<BalancedPoolV2ComposerResults<TReturns>>
}
export type BalancedPoolV2ComposerResults<TReturns extends [...any[]]> = Expand<SendAtomicTransactionComposerResults & {
  returns: TReturns
}>

