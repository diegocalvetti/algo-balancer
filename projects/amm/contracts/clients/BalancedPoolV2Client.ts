/* eslint-disable */
/**
 * This file was automatically generated by @algorandfoundation/algokit-client-generator.
 * DO NOT MODIFY IT BY HAND.
 * requires: @algorandfoundation/algokit-utils: ^7
 */
import { AlgorandClientInterface } from '@algorandfoundation/algokit-utils/types/algorand-client-interface'
import { ABIReturn, AppReturn, SendAppTransactionResult } from '@algorandfoundation/algokit-utils/types/app'
import { Arc56Contract, getArc56ReturnValue, getABIStructFromABITuple } from '@algorandfoundation/algokit-utils/types/app-arc56'
import {
  AppClient as _AppClient,
  AppClientMethodCallParams,
  AppClientParams,
  AppClientBareCallParams,
  CallOnComplete,
  AppClientCompilationParams,
  ResolveAppClientByCreatorAndName,
  ResolveAppClientByNetwork,
  CloneAppClientParams,
} from '@algorandfoundation/algokit-utils/types/app-client'
import { AppFactory as _AppFactory, AppFactoryAppClientParams, AppFactoryResolveAppClientByCreatorAndNameParams, AppFactoryDeployParams, AppFactoryParams, CreateSchema } from '@algorandfoundation/algokit-utils/types/app-factory'
import { TransactionComposer, AppCallMethodCall, AppMethodCallTransactionArgument, SimulateOptions, RawSimulateOptions, SkipSignaturesSimulateOptions } from '@algorandfoundation/algokit-utils/types/composer'
import { SendParams, SendSingleTransactionResult, SendAtomicTransactionComposerResults } from '@algorandfoundation/algokit-utils/types/transaction'
import { Address, encodeAddress, modelsv2, OnApplicationComplete, Transaction, TransactionSigner } from 'algosdk'
import SimulateResponse = modelsv2.SimulateResponse

export const APP_SPEC: Arc56Contract = {"name":"BalancedPoolV2","desc":"","methods":[{"name":"createApplication","desc":"createApplication method called at creation","args":[],"returns":{"type":"void"},"actions":{"create":["NoOp"],"call":[]}},{"name":"bootstrap","desc":"Bootstrap the pool by assigning assets and weights, create the LP tokens","args":[{"name":"assetIds","type":"uint64[]","desc":"assets of the pool"},{"name":"weights","type":"uint64[]","desc":"weights of the pool\n uint64 - LP Token created ID"}],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"addLiquidity","desc":"Provide one token liquidity to the pool","args":[{"name":"index","type":"uint64","desc":"index of the token in the pool"},{"name":"amount","type":"uint64","desc":"amount of token sent"},{"name":"sender","type":"address","desc":"the sender"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"getLiquidity","desc":"Compute the liquidity for the given sender based on the state\nin the contract","args":[{"name":"sender","type":"address","desc":"the sender"}],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"burnLiquidity","args":[{"name":"sender","type":"address"},{"name":"amountLP","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"swap","desc":"Swap the token from for the token to","args":[{"name":"sender","type":"address"},{"name":"from","type":"uint64"},{"name":"to","type":"uint64"},{"name":"amount","type":"uint64"}],"returns":{"type":"uint64"},"actions":{"create":[],"call":["NoOp"]}},{"name":"optIn","args":[{"name":"assetId","type":"uint64","desc":"asset to opt-in\n why?"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}}],"arcs":[4,56],"structs":{},"state":{"schema":{"global":{"bytes":2,"ints":2},"local":{"bytes":0,"ints":0}},"keys":{"global":{"manager":{"key":"bWFuYWdlcg==","keyType":"AVMBytes","valueType":"address"},"token":{"key":"dG9rZW4=","keyType":"AVMBytes","valueType":"uint64"},"burned":{"key":"YnVybmVk","keyType":"AVMBytes","valueType":"uint64"},"assets":{"key":"YXNzZXRz","keyType":"AVMBytes","valueType":"uint64[]"}},"local":{},"box":{}},"maps":{"global":{},"local":{},"box":{"weights":{"keyType":"uint64","valueType":"uint64","prefix":"weights_"},"balances":{"keyType":"uint64","valueType":"uint64","prefix":"balances_"},"provided":{"keyType":"address","valueType":"uint64[]","prefix":"provided_"},"minRatios":{"keyType":"address","valueType":"uint64","prefix":"minratio_"}}}},"bareActions":{"create":[],"call":[]},"sourceInfo":{"approval":{"sourceInfo":[{"teal":1,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[0]},{"teal":2,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[1,2,3,4,5,6,7,8,9,10,11,12,13,14]},{"teal":3,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92]},{"teal":15,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[93,94]},{"teal":16,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[95]},{"teal":17,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[96,97]},{"teal":18,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[98]},{"teal":19,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[99,100]},{"teal":20,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[101]},{"teal":21,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127]},{"teal":25,"source":"contracts/BalancedPoolV2.algo.ts:7","errorMessage":"The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?","pc":[128]},{"teal":30,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[129,130,131]},{"teal":31,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[132]},{"teal":32,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[133]},{"teal":38,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[134,135,136]},{"teal":42,"source":"contracts/BalancedPoolV2.algo.ts:29","pc":[137,138]},{"teal":43,"source":"contracts/BalancedPoolV2.algo.ts:29","pc":[139,140,141]},{"teal":44,"source":"contracts/BalancedPoolV2.algo.ts:29","pc":[142,143]},{"teal":45,"source":"contracts/BalancedPoolV2.algo.ts:29","pc":[144]},{"teal":46,"source":"contracts/BalancedPoolV2.algo.ts:29","pc":[145]},{"teal":50,"source":"contracts/BalancedPoolV2.algo.ts:30","pc":[146,147]},{"teal":51,"source":"contracts/BalancedPoolV2.algo.ts:30","pc":[148]},{"teal":52,"source":"contracts/BalancedPoolV2.algo.ts:30","pc":[149]},{"teal":53,"source":"contracts/BalancedPoolV2.algo.ts:27","pc":[150]},{"teal":58,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[151,152]},{"teal":61,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[153,154,155]},{"teal":62,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[156,157,158]},{"teal":65,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[159,160,161]},{"teal":66,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[162,163,164]},{"teal":69,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[165,166,167]},{"teal":70,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[168]},{"teal":71,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[169]},{"teal":72,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[170]},{"teal":73,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[171]},{"teal":74,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[172]},{"teal":83,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[173,174,175]},{"teal":86,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[176]},{"teal":87,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[177]},{"teal":91,"source":"contracts/BalancedPoolV2.algo.ts:40","pc":[178,179,180]},{"teal":95,"source":"contracts/BalancedPoolV2.algo.ts:41","pc":[181,182]},{"teal":96,"source":"contracts/BalancedPoolV2.algo.ts:41","pc":[183]},{"teal":97,"source":"contracts/BalancedPoolV2.algo.ts:41","pc":[184]},{"teal":98,"source":"contracts/BalancedPoolV2.algo.ts:41","pc":[185]},{"teal":99,"source":"contracts/BalancedPoolV2.algo.ts:41","pc":[186,187]},{"teal":100,"source":"contracts/BalancedPoolV2.algo.ts:41","pc":[188]},{"teal":103,"source":"contracts/BalancedPoolV2.algo.ts:41","errorMessage":"At least 2 tokens needed","pc":[189]},{"teal":107,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[190,191]},{"teal":108,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[192]},{"teal":109,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[193]},{"teal":110,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[194]},{"teal":111,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[195,196]},{"teal":112,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[197]},{"teal":113,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[198]},{"teal":114,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[199]},{"teal":115,"source":"contracts/BalancedPoolV2.algo.ts:42","pc":[200]},{"teal":118,"source":"contracts/BalancedPoolV2.algo.ts:42","errorMessage":"Weights and Assets length must be the same","pc":[201]},{"teal":122,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[202]},{"teal":123,"source":"contracts/BalancedPoolV2.algo.ts:43","pc":[203,204]},{"teal":127,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[205]},{"teal":128,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[206,207]},{"teal":133,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[208,209]},{"teal":134,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[210,211]},{"teal":135,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[212]},{"teal":136,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[213]},{"teal":137,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[214]},{"teal":138,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[215]},{"teal":139,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[216,217,218]},{"teal":143,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[219,220]},{"teal":144,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[221,222]},{"teal":145,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[223]},{"teal":146,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[224,225]},{"teal":147,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[226]},{"teal":148,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[227]},{"teal":149,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[228]},{"teal":150,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[229,230]},{"teal":151,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[231]},{"teal":152,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[232]},{"teal":153,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[233]},{"teal":154,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[234]},{"teal":155,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[235,236]},{"teal":156,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[237,238]},{"teal":157,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[239]},{"teal":158,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[240,241]},{"teal":159,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[242]},{"teal":160,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[243]},{"teal":161,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[244]},{"teal":162,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[245,246]},{"teal":163,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[247]},{"teal":164,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[248]},{"teal":165,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[249]},{"teal":166,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[250]},{"teal":167,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[251,252]},{"teal":168,"source":"contracts/BalancedPoolV2.algo.ts:46","pc":[253,254,255]},{"teal":172,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[256,257]},{"teal":173,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[258,259]},{"teal":174,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[260,261]},{"teal":175,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[262]},{"teal":176,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[263,264]},{"teal":177,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[265]},{"teal":178,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[266]},{"teal":179,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[267]},{"teal":180,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[268,269]},{"teal":181,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[270]},{"teal":182,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[271]},{"teal":183,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[272]},{"teal":184,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[273]},{"teal":185,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[274]},{"teal":186,"source":"contracts/BalancedPoolV2.algo.ts:47","pc":[275,276]},{"teal":191,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[277,278]},{"teal":192,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[279]},{"teal":193,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[280]},{"teal":194,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[281,282]},{"teal":195,"source":"contracts/BalancedPoolV2.algo.ts:45","pc":[283,284,285]},{"teal":200,"source":"contracts/BalancedPoolV2.algo.ts:50","pc":[286,287]},{"teal":201,"source":"contracts/BalancedPoolV2.algo.ts:50","pc":[288,289]},{"teal":202,"source":"contracts/BalancedPoolV2.algo.ts:50","pc":[290]},{"teal":203,"source":"contracts/BalancedPoolV2.algo.ts:50","pc":[291]},{"teal":204,"source":"contracts/BalancedPoolV2.algo.ts:50","pc":[292]},{"teal":205,"source":"contracts/BalancedPoolV2.algo.ts:50","pc":[293]},{"teal":206,"source":"contracts/BalancedPoolV2.algo.ts:50","pc":[294]},{"teal":207,"source":"contracts/BalancedPoolV2.algo.ts:50","pc":[295,296,297]},{"teal":208,"source":"contracts/BalancedPoolV2.algo.ts:50","pc":[298]},{"teal":209,"source":"contracts/BalancedPoolV2.algo.ts:50","pc":[299]},{"teal":210,"source":"contracts/BalancedPoolV2.algo.ts:50","pc":[300]},{"teal":214,"source":"contracts/BalancedPoolV2.algo.ts:52","pc":[301,302]},{"teal":215,"source":"contracts/BalancedPoolV2.algo.ts:52","pc":[303]},{"teal":216,"source":"contracts/BalancedPoolV2.algo.ts:52","pc":[304]},{"teal":219,"source":"contracts/BalancedPoolV2.algo.ts:52","errorMessage":"Weights must sum to 1","pc":[305]},{"teal":223,"source":"contracts/BalancedPoolV2.algo.ts:53","pc":[306,307,308]},{"teal":227,"source":"contracts/BalancedPoolV2.algo.ts:55","pc":[309]},{"teal":228,"source":"contracts/BalancedPoolV2.algo.ts:55","pc":[310]},{"teal":231,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[311,312]},{"teal":234,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[313,314]},{"teal":235,"source":"contracts/BalancedPoolV2.algo.ts:39","pc":[315]},{"teal":240,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[316,317,318]},{"teal":241,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[319]},{"teal":242,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[320]},{"teal":243,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[321,322]},{"teal":244,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[323]},{"teal":247,"source":"contracts/BalancedPoolV2.algo.ts:64","errorMessage":"argument 0 (sender) for addLiquidity must be a address","pc":[324]},{"teal":250,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[325,326,327]},{"teal":251,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[328]},{"teal":254,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[329,330,331]},{"teal":255,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[332]},{"teal":258,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[333,334,335]},{"teal":259,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[336]},{"teal":260,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[337]},{"teal":269,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[338,339,340]},{"teal":272,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[341]},{"teal":276,"source":"contracts/BalancedPoolV2.algo.ts:65","pc":[342,343,344]},{"teal":280,"source":"contracts/BalancedPoolV2.algo.ts:66","pc":[345,346,347]},{"teal":284,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[348,349]},{"teal":285,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[350]},{"teal":286,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[351,352,353]},{"teal":287,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[354,355]},{"teal":288,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[356]},{"teal":289,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[357,358]},{"teal":290,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[359]},{"teal":291,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[360]},{"teal":292,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[361]},{"teal":293,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[362,363]},{"teal":294,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[364]},{"teal":295,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[365]},{"teal":296,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[366]},{"teal":297,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[367]},{"teal":298,"source":"contracts/BalancedPoolV2.algo.ts:68","pc":[368,369]},{"teal":302,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[370,371,372,373,374,375,376,377,378,379,380,381,382,383]},{"teal":303,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[384,385]},{"teal":304,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[386]},{"teal":305,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[387]},{"teal":306,"source":"contracts/BalancedPoolV2.algo.ts:69","pc":[388]},{"teal":310,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[389,390]},{"teal":311,"source":"contracts/BalancedPoolV2.algo.ts:71","pc":[391,392,393]},{"teal":315,"source":"contracts/BalancedPoolV2.algo.ts:72","pc":[394]},{"teal":316,"source":"contracts/BalancedPoolV2.algo.ts:72","pc":[395,396]},{"teal":317,"source":"contracts/BalancedPoolV2.algo.ts:72","pc":[397]},{"teal":318,"source":"contracts/BalancedPoolV2.algo.ts:72","pc":[398]},{"teal":319,"source":"contracts/BalancedPoolV2.algo.ts:72","pc":[399]},{"teal":322,"source":"contracts/BalancedPoolV2.algo.ts:72","errorMessage":"box value does not exist: this.balances(assetId).value","pc":[400]},{"teal":323,"source":"contracts/BalancedPoolV2.algo.ts:72","pc":[401]},{"teal":324,"source":"contracts/BalancedPoolV2.algo.ts:72","pc":[402,403]},{"teal":325,"source":"contracts/BalancedPoolV2.algo.ts:72","pc":[404]},{"teal":326,"source":"contracts/BalancedPoolV2.algo.ts:72","pc":[405]},{"teal":327,"source":"contracts/BalancedPoolV2.algo.ts:72","pc":[406,407]},{"teal":328,"source":"contracts/BalancedPoolV2.algo.ts:72","pc":[408]},{"teal":329,"source":"contracts/BalancedPoolV2.algo.ts:72","pc":[409]},{"teal":330,"source":"contracts/BalancedPoolV2.algo.ts:72","pc":[410]},{"teal":331,"source":"contracts/BalancedPoolV2.algo.ts:72","pc":[411]},{"teal":332,"source":"contracts/BalancedPoolV2.algo.ts:72","pc":[412]},{"teal":337,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[413]},{"teal":338,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[414,415]},{"teal":339,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[416]},{"teal":340,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[417]},{"teal":341,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[418]},{"teal":342,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[419]},{"teal":343,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[420]},{"teal":344,"source":"contracts/BalancedPoolV2.algo.ts:74","pc":[421,422,423]},{"teal":349,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[424]},{"teal":350,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[425,426]},{"teal":351,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[427]},{"teal":352,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[428,429]},{"teal":353,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[430]},{"teal":354,"source":"contracts/BalancedPoolV2.algo.ts:75","pc":[431]},{"teal":359,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[432]},{"teal":360,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[433,434]},{"teal":361,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[435]},{"teal":362,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[436]},{"teal":365,"source":"contracts/BalancedPoolV2.algo.ts:78","errorMessage":"box value does not exist: this.provided(sender).value","pc":[437]},{"teal":366,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[438,439,440]},{"teal":367,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[441,442]},{"teal":368,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[443]},{"teal":369,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[444,445]},{"teal":370,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[446]},{"teal":371,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[447]},{"teal":372,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[448]},{"teal":373,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[449,450]},{"teal":374,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[451]},{"teal":375,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[452]},{"teal":376,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[453,454]},{"teal":377,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[455]},{"teal":378,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[456]},{"teal":381,"source":"contracts/BalancedPoolV2.algo.ts:78","errorMessage":"box value does not exist: this.provided(sender).value","pc":[457]},{"teal":382,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[458,459,460]},{"teal":383,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[461,462]},{"teal":384,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[463]},{"teal":385,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[464,465]},{"teal":386,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[466]},{"teal":387,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[467]},{"teal":388,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[468]},{"teal":389,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[469,470]},{"teal":390,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[471]},{"teal":391,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[472]},{"teal":392,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[473]},{"teal":393,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[474]},{"teal":394,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[475,476]},{"teal":395,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[477]},{"teal":396,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[478]},{"teal":397,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[479]},{"teal":398,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[480]},{"teal":399,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[481,482]},{"teal":400,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[483]},{"teal":401,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[484]},{"teal":402,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[485]},{"teal":403,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[486]},{"teal":404,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[487]},{"teal":405,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[488]},{"teal":406,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[489]},{"teal":407,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[490]},{"teal":408,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[491]},{"teal":409,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[492]},{"teal":410,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[493,494,495]},{"teal":411,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[496]},{"teal":412,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[497]},{"teal":413,"source":"contracts/BalancedPoolV2.algo.ts:78","pc":[498]},{"teal":414,"source":"contracts/BalancedPoolV2.algo.ts:64","pc":[499]},{"teal":419,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[500,501]},{"teal":422,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[502,503,504]},{"teal":423,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[505]},{"teal":424,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[506]},{"teal":425,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[507,508]},{"teal":426,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[509]},{"teal":429,"source":"contracts/BalancedPoolV2.algo.ts:104","errorMessage":"argument 0 (sender) for getLiquidity must be a address","pc":[510]},{"teal":432,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[511,512,513]},{"teal":433,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[514]},{"teal":434,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[515]},{"teal":435,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[516]},{"teal":436,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[517]},{"teal":437,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[518]},{"teal":445,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[519,520,521]},{"teal":448,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[522]},{"teal":449,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[523,524]},{"teal":453,"source":"contracts/BalancedPoolV2.algo.ts:105","pc":[525,526,527]},{"teal":457,"source":"contracts/BalancedPoolV2.algo.ts:106","pc":[528,529,530]},{"teal":461,"source":"contracts/BalancedPoolV2.algo.ts:108","pc":[531]},{"teal":462,"source":"contracts/BalancedPoolV2.algo.ts:108","pc":[532,533]},{"teal":463,"source":"contracts/BalancedPoolV2.algo.ts:108","pc":[534]},{"teal":464,"source":"contracts/BalancedPoolV2.algo.ts:108","pc":[535,536]},{"teal":468,"source":"contracts/BalancedPoolV2.algo.ts:109","pc":[537]},{"teal":469,"source":"contracts/BalancedPoolV2.algo.ts:109","pc":[538,539]},{"teal":473,"source":"contracts/BalancedPoolV2.algo.ts:110","pc":[540]},{"teal":474,"source":"contracts/BalancedPoolV2.algo.ts:110","pc":[541,542]},{"teal":479,"source":"contracts/BalancedPoolV2.algo.ts:110","pc":[543,544]},{"teal":480,"source":"contracts/BalancedPoolV2.algo.ts:108","pc":[545,546]},{"teal":481,"source":"contracts/BalancedPoolV2.algo.ts:108","pc":[547]},{"teal":484,"source":"contracts/BalancedPoolV2.algo.ts:108","errorMessage":"box value does not exist: this.provided(sender).value","pc":[548]},{"teal":485,"source":"contracts/BalancedPoolV2.algo.ts:108","pc":[549,550,551]},{"teal":486,"source":"contracts/BalancedPoolV2.algo.ts:110","pc":[552]},{"teal":487,"source":"contracts/BalancedPoolV2.algo.ts:110","pc":[553]},{"teal":488,"source":"contracts/BalancedPoolV2.algo.ts:110","pc":[554]},{"teal":489,"source":"contracts/BalancedPoolV2.algo.ts:110","pc":[555]},{"teal":490,"source":"contracts/BalancedPoolV2.algo.ts:110","pc":[556,557,558]},{"teal":495,"source":"contracts/BalancedPoolV2.algo.ts:108","pc":[559,560]},{"teal":496,"source":"contracts/BalancedPoolV2.algo.ts:108","pc":[561]},{"teal":499,"source":"contracts/BalancedPoolV2.algo.ts:108","errorMessage":"box value does not exist: this.provided(sender).value","pc":[562]},{"teal":500,"source":"contracts/BalancedPoolV2.algo.ts:108","pc":[563,564,565]},{"teal":501,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[566,567]},{"teal":502,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[568]},{"teal":503,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[569,570]},{"teal":504,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[571]},{"teal":505,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[572]},{"teal":506,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[573]},{"teal":507,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[574,575]},{"teal":508,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[576]},{"teal":509,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[577]},{"teal":510,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[578]},{"teal":511,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[579]},{"teal":512,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[580]},{"teal":513,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[581]},{"teal":514,"source":"contracts/BalancedPoolV2.algo.ts:111","pc":[582,583,584]},{"teal":519,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[585,586]},{"teal":520,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[587]},{"teal":521,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[588]},{"teal":522,"source":"contracts/BalancedPoolV2.algo.ts:112","pc":[589,590]},{"teal":529,"source":"contracts/BalancedPoolV2.algo.ts:110","pc":[591,592]},{"teal":530,"source":"contracts/BalancedPoolV2.algo.ts:110","pc":[593]},{"teal":531,"source":"contracts/BalancedPoolV2.algo.ts:110","pc":[594]},{"teal":532,"source":"contracts/BalancedPoolV2.algo.ts:110","pc":[595,596]},{"teal":533,"source":"contracts/BalancedPoolV2.algo.ts:110","pc":[597,598,599]},{"teal":538,"source":"contracts/BalancedPoolV2.algo.ts:116","pc":[600]},{"teal":539,"source":"contracts/BalancedPoolV2.algo.ts:116","pc":[601,602]},{"teal":544,"source":"contracts/BalancedPoolV2.algo.ts:118","pc":[603,604,605]},{"teal":545,"source":"contracts/BalancedPoolV2.algo.ts:118","pc":[606]},{"teal":546,"source":"contracts/BalancedPoolV2.algo.ts:118","pc":[607]},{"teal":547,"source":"contracts/BalancedPoolV2.algo.ts:118","pc":[608,609,610]},{"teal":552,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[611,612,613,614]},{"teal":553,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[615,616]},{"teal":554,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[617,618]},{"teal":555,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[619]},{"teal":556,"source":"contracts/BalancedPoolV2.algo.ts:4","pc":[620]},{"teal":557,"source":"contracts/BalancedPoolV2.algo.ts:120","pc":[621,622]},{"teal":558,"source":"contracts/BalancedPoolV2.algo.ts:118","pc":[623,624,625]},{"teal":563,"source":"contracts/BalancedPoolV2.algo.ts:121","pc":[626,627]},{"teal":564,"source":"contracts/BalancedPoolV2.algo.ts:121","pc":[628,629]},{"teal":565,"source":"contracts/BalancedPoolV2.algo.ts:121","pc":[630]},{"teal":566,"source":"contracts/BalancedPoolV2.algo.ts:121","pc":[631,632,633]},{"teal":567,"source":"contracts/BalancedPoolV2.algo.ts:121","pc":[634]},{"teal":568,"source":"contracts/BalancedPoolV2.algo.ts:121","pc":[635]},{"teal":569,"source":"contracts/BalancedPoolV2.algo.ts:121","pc":[636]},{"teal":570,"source":"contracts/BalancedPoolV2.algo.ts:121","pc":[637]},{"teal":571,"source":"contracts/BalancedPoolV2.algo.ts:121","pc":[638,639,640]},{"teal":576,"source":"contracts/BalancedPoolV2.algo.ts:123","pc":[641,642]},{"teal":577,"source":"contracts/BalancedPoolV2.algo.ts:123","pc":[643,644,645]},{"teal":578,"source":"contracts/BalancedPoolV2.algo.ts:123","pc":[646,647]},{"teal":579,"source":"contracts/BalancedPoolV2.algo.ts:121","pc":[648,649,650]},{"teal":584,"source":"contracts/BalancedPoolV2.algo.ts:124","pc":[651,652]},{"teal":585,"source":"contracts/BalancedPoolV2.algo.ts:124","pc":[653]},{"teal":586,"source":"contracts/BalancedPoolV2.algo.ts:124","pc":[654]},{"teal":587,"source":"contracts/BalancedPoolV2.algo.ts:124","pc":[655,656,657]},{"teal":590,"source":"contracts/BalancedPoolV2.algo.ts:124","pc":[658,659,660]},{"teal":597,"source":"contracts/BalancedPoolV2.algo.ts:130","pc":[661]},{"teal":598,"source":"contracts/BalancedPoolV2.algo.ts:130","pc":[662,663]},{"teal":603,"source":"contracts/BalancedPoolV2.algo.ts:130","pc":[664,665]},{"teal":604,"source":"contracts/BalancedPoolV2.algo.ts:130","pc":[666]},{"teal":605,"source":"contracts/BalancedPoolV2.algo.ts:130","pc":[667,668]},{"teal":606,"source":"contracts/BalancedPoolV2.algo.ts:130","pc":[669]},{"teal":607,"source":"contracts/BalancedPoolV2.algo.ts:130","pc":[670]},{"teal":610,"source":"contracts/BalancedPoolV2.algo.ts:130","errorMessage":"box value does not exist: this.provided(sender).value","pc":[671]},{"teal":611,"source":"contracts/BalancedPoolV2.algo.ts:130","pc":[672,673,674]},{"teal":612,"source":"contracts/BalancedPoolV2.algo.ts:130","pc":[675]},{"teal":613,"source":"contracts/BalancedPoolV2.algo.ts:130","pc":[676]},{"teal":614,"source":"contracts/BalancedPoolV2.algo.ts:130","pc":[677]},{"teal":615,"source":"contracts/BalancedPoolV2.algo.ts:130","pc":[678]},{"teal":616,"source":"contracts/BalancedPoolV2.algo.ts:130","pc":[679,680,681]},{"teal":620,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[682]},{"teal":621,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[683,684]},{"teal":622,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[685]},{"teal":623,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[686]},{"teal":626,"source":"contracts/BalancedPoolV2.algo.ts:131","errorMessage":"box value does not exist: this.provided(sender).value","pc":[687]},{"teal":627,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[688,689,690]},{"teal":628,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[691,692]},{"teal":629,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[693]},{"teal":630,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[694,695]},{"teal":631,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[696]},{"teal":632,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[697]},{"teal":633,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[698]},{"teal":634,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[699,700]},{"teal":635,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[701]},{"teal":636,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[702,703]},{"teal":637,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[704]},{"teal":638,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[705]},{"teal":639,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[706,707]},{"teal":640,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[708]},{"teal":641,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[709]},{"teal":642,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[710]},{"teal":643,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[711]},{"teal":644,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[712]},{"teal":645,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[713]},{"teal":646,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[714]},{"teal":647,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[715]},{"teal":648,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[716]},{"teal":649,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[717]},{"teal":650,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[718,719,720]},{"teal":651,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[721]},{"teal":652,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[722]},{"teal":653,"source":"contracts/BalancedPoolV2.algo.ts:131","pc":[723]},{"teal":658,"source":"contracts/BalancedPoolV2.algo.ts:130","pc":[724,725]},{"teal":659,"source":"contracts/BalancedPoolV2.algo.ts:130","pc":[726]},{"teal":660,"source":"contracts/BalancedPoolV2.algo.ts:130","pc":[727]},{"teal":661,"source":"contracts/BalancedPoolV2.algo.ts:130","pc":[728,729]},{"teal":662,"source":"contracts/BalancedPoolV2.algo.ts:130","pc":[730,731,732]},{"teal":671,"source":"contracts/BalancedPoolV2.algo.ts:134","pc":[733]},{"teal":672,"source":"contracts/BalancedPoolV2.algo.ts:134","pc":[734,735]},{"teal":673,"source":"contracts/BalancedPoolV2.algo.ts:134","pc":[736,737]},{"teal":677,"source":"contracts/BalancedPoolV2.algo.ts:135","pc":[738,739]},{"teal":678,"source":"contracts/BalancedPoolV2.algo.ts:135","pc":[740,741]},{"teal":682,"source":"contracts/BalancedPoolV2.algo.ts:136","pc":[742,743]},{"teal":683,"source":"contracts/BalancedPoolV2.algo.ts:136","pc":[744,745]},{"teal":687,"source":"contracts/BalancedPoolV2.algo.ts:137","pc":[746]},{"teal":688,"source":"contracts/BalancedPoolV2.algo.ts:137","pc":[747]},{"teal":689,"source":"contracts/BalancedPoolV2.algo.ts:137","pc":[748,749]},{"teal":692,"source":"contracts/BalancedPoolV2.algo.ts:134","pc":[750]},{"teal":693,"source":"contracts/BalancedPoolV2.algo.ts:134","pc":[751,752]},{"teal":696,"source":"contracts/BalancedPoolV2.algo.ts:134","pc":[753]},{"teal":700,"source":"contracts/BalancedPoolV2.algo.ts:140","pc":[754,755]},{"teal":703,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[756,757]},{"teal":706,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[758,759]},{"teal":707,"source":"contracts/BalancedPoolV2.algo.ts:104","pc":[760]},{"teal":712,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[761,762,763]},{"teal":713,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[764]},{"teal":716,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[765,766,767]},{"teal":717,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[768]},{"teal":718,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[769]},{"teal":719,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[770,771]},{"teal":720,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[772]},{"teal":723,"source":"contracts/BalancedPoolV2.algo.ts:143","errorMessage":"argument 1 (sender) for burnLiquidity must be a address","pc":[773]},{"teal":726,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[774,775,776]},{"teal":727,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[777]},{"teal":728,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[778]},{"teal":732,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[779,780,781]},{"teal":735,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[782]},{"teal":736,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[783,784]},{"teal":740,"source":"contracts/BalancedPoolV2.algo.ts:144","pc":[785,786,787]},{"teal":744,"source":"contracts/BalancedPoolV2.algo.ts:145","pc":[788,789,790]},{"teal":748,"source":"contracts/BalancedPoolV2.algo.ts:146","pc":[791,792]},{"teal":749,"source":"contracts/BalancedPoolV2.algo.ts:146","pc":[793]},{"teal":750,"source":"contracts/BalancedPoolV2.algo.ts:146","pc":[794]},{"teal":753,"source":"contracts/BalancedPoolV2.algo.ts:146","errorMessage":"Must burn positive amount","pc":[795]},{"teal":757,"source":"contracts/BalancedPoolV2.algo.ts:148","pc":[796,797,798]},{"teal":758,"source":"contracts/BalancedPoolV2.algo.ts:148","pc":[799,800]},{"teal":762,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[801,802]},{"teal":763,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[803]},{"teal":764,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[804,805,806]},{"teal":765,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[807]},{"teal":766,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[808]},{"teal":767,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[809]},{"teal":768,"source":"contracts/BalancedPoolV2.algo.ts:149","pc":[810,811]},{"teal":772,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[812]},{"teal":773,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[813,814]},{"teal":778,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[815,816]},{"teal":779,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[817,818]},{"teal":780,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[819]},{"teal":781,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[820,821,822]},{"teal":785,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[823,824]},{"teal":786,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[825]},{"teal":787,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[826,827,828]},{"teal":788,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[829,830]},{"teal":789,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[831]},{"teal":790,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[832,833]},{"teal":791,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[834]},{"teal":792,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[835]},{"teal":793,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[836]},{"teal":794,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[837,838]},{"teal":795,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[839]},{"teal":796,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[840]},{"teal":797,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[841]},{"teal":798,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[842]},{"teal":799,"source":"contracts/BalancedPoolV2.algo.ts:152","pc":[843,844]},{"teal":803,"source":"contracts/BalancedPoolV2.algo.ts:153","pc":[845]},{"teal":804,"source":"contracts/BalancedPoolV2.algo.ts:153","pc":[846,847]},{"teal":805,"source":"contracts/BalancedPoolV2.algo.ts:153","pc":[848]},{"teal":806,"source":"contracts/BalancedPoolV2.algo.ts:153","pc":[849]},{"teal":807,"source":"contracts/BalancedPoolV2.algo.ts:153","pc":[850]},{"teal":810,"source":"contracts/BalancedPoolV2.algo.ts:153","errorMessage":"box value does not exist: this.balances(assetId).value","pc":[851]},{"teal":811,"source":"contracts/BalancedPoolV2.algo.ts:153","pc":[852]},{"teal":812,"source":"contracts/BalancedPoolV2.algo.ts:153","pc":[853,854]},{"teal":816,"source":"contracts/BalancedPoolV2.algo.ts:155","pc":[855,856]},{"teal":817,"source":"contracts/BalancedPoolV2.algo.ts:155","pc":[857,858]},{"teal":818,"source":"contracts/BalancedPoolV2.algo.ts:155","pc":[859]},{"teal":819,"source":"contracts/BalancedPoolV2.algo.ts:155","pc":[860]},{"teal":820,"source":"contracts/BalancedPoolV2.algo.ts:155","pc":[861,862]},{"teal":821,"source":"contracts/BalancedPoolV2.algo.ts:155","pc":[863]},{"teal":822,"source":"contracts/BalancedPoolV2.algo.ts:155","pc":[864]},{"teal":823,"source":"contracts/BalancedPoolV2.algo.ts:155","pc":[865]},{"teal":824,"source":"contracts/BalancedPoolV2.algo.ts:155","pc":[866]},{"teal":825,"source":"contracts/BalancedPoolV2.algo.ts:155","pc":[867]},{"teal":828,"source":"contracts/BalancedPoolV2.algo.ts:155","errorMessage":"wideRatio failed","pc":[868]},{"teal":829,"source":"contracts/BalancedPoolV2.algo.ts:155","pc":[869,870]},{"teal":833,"source":"contracts/BalancedPoolV2.algo.ts:157","pc":[871]},{"teal":834,"source":"contracts/BalancedPoolV2.algo.ts:157","pc":[872,873]},{"teal":835,"source":"contracts/BalancedPoolV2.algo.ts:157","pc":[874]},{"teal":836,"source":"contracts/BalancedPoolV2.algo.ts:157","pc":[875]},{"teal":837,"source":"contracts/BalancedPoolV2.algo.ts:157","pc":[876,877]},{"teal":838,"source":"contracts/BalancedPoolV2.algo.ts:157","pc":[878,879]},{"teal":839,"source":"contracts/BalancedPoolV2.algo.ts:157","pc":[880]},{"teal":840,"source":"contracts/BalancedPoolV2.algo.ts:157","pc":[881]},{"teal":841,"source":"contracts/BalancedPoolV2.algo.ts:157","pc":[882]},{"teal":849,"source":"contracts/BalancedPoolV2.algo.ts:159","pc":[883]},{"teal":850,"source":"contracts/BalancedPoolV2.algo.ts:159","pc":[884,885]},{"teal":851,"source":"contracts/BalancedPoolV2.algo.ts:159","pc":[886,887]},{"teal":855,"source":"contracts/BalancedPoolV2.algo.ts:160","pc":[888,889]},{"teal":856,"source":"contracts/BalancedPoolV2.algo.ts:160","pc":[890,891]},{"teal":860,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[892,893]},{"teal":861,"source":"contracts/BalancedPoolV2.algo.ts:161","pc":[894,895]},{"teal":865,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[896,897]},{"teal":866,"source":"contracts/BalancedPoolV2.algo.ts:162","pc":[898,899]},{"teal":869,"source":"contracts/BalancedPoolV2.algo.ts:159","pc":[900]},{"teal":870,"source":"contracts/BalancedPoolV2.algo.ts:159","pc":[901,902]},{"teal":873,"source":"contracts/BalancedPoolV2.algo.ts:159","pc":[903]},{"teal":878,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[904,905]},{"teal":879,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[906]},{"teal":880,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[907]},{"teal":881,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[908,909]},{"teal":882,"source":"contracts/BalancedPoolV2.algo.ts:151","pc":[910,911,912]},{"teal":887,"source":"contracts/BalancedPoolV2.algo.ts:166","pc":[913,914]},{"teal":888,"source":"contracts/BalancedPoolV2.algo.ts:166","pc":[915]},{"teal":889,"source":"contracts/BalancedPoolV2.algo.ts:166","pc":[916,917]},{"teal":890,"source":"contracts/BalancedPoolV2.algo.ts:166","pc":[918]},{"teal":891,"source":"contracts/BalancedPoolV2.algo.ts:166","pc":[919,920]},{"teal":892,"source":"contracts/BalancedPoolV2.algo.ts:166","pc":[921]},{"teal":893,"source":"contracts/BalancedPoolV2.algo.ts:166","pc":[922]},{"teal":894,"source":"contracts/BalancedPoolV2.algo.ts:143","pc":[923]},{"teal":899,"source":"contracts/BalancedPoolV2.algo.ts:176","pc":[924,925]},{"teal":902,"source":"contracts/BalancedPoolV2.algo.ts:176","pc":[926,927,928]},{"teal":903,"source":"contracts/BalancedPoolV2.algo.ts:176","pc":[929]},{"teal":906,"source":"contracts/BalancedPoolV2.algo.ts:176","pc":[930,931,932]},{"teal":907,"source":"contracts/BalancedPoolV2.algo.ts:176","pc":[933]},{"teal":910,"source":"contracts/BalancedPoolV2.algo.ts:176","pc":[934,935,936]},{"teal":911,"source":"contracts/BalancedPoolV2.algo.ts:176","pc":[937]},{"teal":914,"source":"contracts/BalancedPoolV2.algo.ts:176","pc":[938,939,940]},{"teal":915,"source":"contracts/BalancedPoolV2.algo.ts:176","pc":[941]},{"teal":916,"source":"contracts/BalancedPoolV2.algo.ts:176","pc":[942]},{"teal":917,"source":"contracts/BalancedPoolV2.algo.ts:176","pc":[943,944]},{"teal":918,"source":"contracts/BalancedPoolV2.algo.ts:176","pc":[945]},{"teal":921,"source":"contracts/BalancedPoolV2.algo.ts:176","errorMessage":"argument 3 (sender) for swap must be a address","pc":[946]},{"teal":924,"source":"contracts/BalancedPoolV2.algo.ts:176","pc":[947,948,949]},{"teal":925,"source":"contracts/BalancedPoolV2.algo.ts:176","pc":[950]},{"teal":926,"source":"contracts/BalancedPoolV2.algo.ts:176","pc":[951]},{"teal":927,"source":"contracts/BalancedPoolV2.algo.ts:176","pc":[952]},{"teal":928,"source":"contracts/BalancedPoolV2.algo.ts:176","pc":[953]},{"teal":929,"source":"contracts/BalancedPoolV2.algo.ts:176","pc":[954]},{"teal":939,"source":"contracts/BalancedPoolV2.algo.ts:176","pc":[955,956,957]},{"teal":942,"source":"contracts/BalancedPoolV2.algo.ts:176","pc":[958]},{"teal":943,"source":"contracts/BalancedPoolV2.algo.ts:176","pc":[959,960]},{"teal":947,"source":"contracts/BalancedPoolV2.algo.ts:177","pc":[961,962,963]},{"teal":951,"source":"contracts/BalancedPoolV2.algo.ts:178","pc":[964,965,966]},{"teal":955,"source":"contracts/BalancedPoolV2.algo.ts:180","pc":[967,968]},{"teal":956,"source":"contracts/BalancedPoolV2.algo.ts:180","pc":[969]},{"teal":957,"source":"contracts/BalancedPoolV2.algo.ts:180","pc":[970,971,972]},{"teal":958,"source":"contracts/BalancedPoolV2.algo.ts:180","pc":[973,974]},{"teal":959,"source":"contracts/BalancedPoolV2.algo.ts:180","pc":[975]},{"teal":960,"source":"contracts/BalancedPoolV2.algo.ts:180","pc":[976,977]},{"teal":961,"source":"contracts/BalancedPoolV2.algo.ts:180","pc":[978]},{"teal":962,"source":"contracts/BalancedPoolV2.algo.ts:180","pc":[979]},{"teal":963,"source":"contracts/BalancedPoolV2.algo.ts:180","pc":[980]},{"teal":964,"source":"contracts/BalancedPoolV2.algo.ts:180","pc":[981,982]},{"teal":965,"source":"contracts/BalancedPoolV2.algo.ts:180","pc":[983]},{"teal":966,"source":"contracts/BalancedPoolV2.algo.ts:180","pc":[984]},{"teal":967,"source":"contracts/BalancedPoolV2.algo.ts:180","pc":[985]},{"teal":968,"source":"contracts/BalancedPoolV2.algo.ts:180","pc":[986]},{"teal":969,"source":"contracts/BalancedPoolV2.algo.ts:180","pc":[987,988]},{"teal":973,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[989,990]},{"teal":974,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[991]},{"teal":975,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[992,993,994]},{"teal":976,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[995,996]},{"teal":977,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[997]},{"teal":978,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[998,999]},{"teal":979,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[1000]},{"teal":980,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[1001]},{"teal":981,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[1002]},{"teal":982,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[1003,1004]},{"teal":983,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[1005]},{"teal":984,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[1006]},{"teal":985,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[1007]},{"teal":986,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[1008]},{"teal":987,"source":"contracts/BalancedPoolV2.algo.ts:181","pc":[1009,1010]},{"teal":991,"source":"contracts/BalancedPoolV2.algo.ts:183","pc":[1011]},{"teal":992,"source":"contracts/BalancedPoolV2.algo.ts:183","pc":[1012,1013]},{"teal":993,"source":"contracts/BalancedPoolV2.algo.ts:183","pc":[1014]},{"teal":994,"source":"contracts/BalancedPoolV2.algo.ts:183","pc":[1015]},{"teal":995,"source":"contracts/BalancedPoolV2.algo.ts:183","pc":[1016]},{"teal":998,"source":"contracts/BalancedPoolV2.algo.ts:183","errorMessage":"box value does not exist: this.balances(assetIn).value","pc":[1017]},{"teal":999,"source":"contracts/BalancedPoolV2.algo.ts:183","pc":[1018]},{"teal":1000,"source":"contracts/BalancedPoolV2.algo.ts:183","pc":[1019,1020]},{"teal":1004,"source":"contracts/BalancedPoolV2.algo.ts:184","pc":[1021]},{"teal":1005,"source":"contracts/BalancedPoolV2.algo.ts:184","pc":[1022,1023]},{"teal":1006,"source":"contracts/BalancedPoolV2.algo.ts:184","pc":[1024]},{"teal":1007,"source":"contracts/BalancedPoolV2.algo.ts:184","pc":[1025]},{"teal":1008,"source":"contracts/BalancedPoolV2.algo.ts:184","pc":[1026]},{"teal":1011,"source":"contracts/BalancedPoolV2.algo.ts:184","errorMessage":"box value does not exist: this.balances(assetOut).value","pc":[1027]},{"teal":1012,"source":"contracts/BalancedPoolV2.algo.ts:184","pc":[1028]},{"teal":1013,"source":"contracts/BalancedPoolV2.algo.ts:184","pc":[1029,1030]},{"teal":1017,"source":"contracts/BalancedPoolV2.algo.ts:186","pc":[1031,1032]},{"teal":1018,"source":"contracts/BalancedPoolV2.algo.ts:186","pc":[1033,1034]},{"teal":1019,"source":"contracts/BalancedPoolV2.algo.ts:186","pc":[1035]},{"teal":1020,"source":"contracts/BalancedPoolV2.algo.ts:186","pc":[1036]},{"teal":1021,"source":"contracts/BalancedPoolV2.algo.ts:186","pc":[1037]},{"teal":1024,"source":"contracts/BalancedPoolV2.algo.ts:186","errorMessage":"box value does not exist: this.weights(from).value","pc":[1038]},{"teal":1025,"source":"contracts/BalancedPoolV2.algo.ts:186","pc":[1039]},{"teal":1026,"source":"contracts/BalancedPoolV2.algo.ts:186","pc":[1040,1041]},{"teal":1030,"source":"contracts/BalancedPoolV2.algo.ts:187","pc":[1042,1043]},{"teal":1031,"source":"contracts/BalancedPoolV2.algo.ts:187","pc":[1044,1045]},{"teal":1032,"source":"contracts/BalancedPoolV2.algo.ts:187","pc":[1046]},{"teal":1033,"source":"contracts/BalancedPoolV2.algo.ts:187","pc":[1047]},{"teal":1034,"source":"contracts/BalancedPoolV2.algo.ts:187","pc":[1048]},{"teal":1037,"source":"contracts/BalancedPoolV2.algo.ts:187","errorMessage":"box value does not exist: this.weights(to).value","pc":[1049]},{"teal":1038,"source":"contracts/BalancedPoolV2.algo.ts:187","pc":[1050]},{"teal":1039,"source":"contracts/BalancedPoolV2.algo.ts:187","pc":[1051,1052]},{"teal":1043,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[1053,1054]},{"teal":1044,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[1055]},{"teal":1045,"source":"contracts/BalancedPoolV2.algo.ts:189","pc":[1056]},{"teal":1049,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1057,1058]},{"teal":1050,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1059]},{"teal":1051,"source":"contracts/BalancedPoolV2.algo.ts:190","pc":[1060]},{"teal":1055,"source":"contracts/BalancedPoolV2.algo.ts:191","pc":[1061,1062]},{"teal":1056,"source":"contracts/BalancedPoolV2.algo.ts:191","pc":[1063]},{"teal":1057,"source":"contracts/BalancedPoolV2.algo.ts:191","pc":[1064]},{"teal":1061,"source":"contracts/BalancedPoolV2.algo.ts:192","pc":[1065,1066]},{"teal":1062,"source":"contracts/BalancedPoolV2.algo.ts:192","pc":[1067]},{"teal":1063,"source":"contracts/BalancedPoolV2.algo.ts:192","pc":[1068]},{"teal":1067,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1069,1070]},{"teal":1068,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1071,1072]},{"teal":1069,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1073,1074]},{"teal":1070,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1075,1076]},{"teal":1071,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1077,1078]},{"teal":1072,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1079,1080,1081]},{"teal":1073,"source":"contracts/BalancedPoolV2.algo.ts:194","pc":[1082,1083]},{"teal":1077,"source":"contracts/BalancedPoolV2.algo.ts:196","pc":[1084,1085]},{"teal":1078,"source":"contracts/BalancedPoolV2.algo.ts:196","pc":[1086]},{"teal":1079,"source":"contracts/BalancedPoolV2.algo.ts:196","pc":[1087]},{"teal":1083,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1088]},{"teal":1084,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1089,1090]},{"teal":1085,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1091]},{"teal":1086,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1092]},{"teal":1087,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1093,1094]},{"teal":1088,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1095,1096]},{"teal":1089,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1097]},{"teal":1090,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1098]},{"teal":1091,"source":"contracts/BalancedPoolV2.algo.ts:198","pc":[1099]},{"teal":1095,"source":"contracts/BalancedPoolV2.algo.ts:199","pc":[1100]},{"teal":1096,"source":"contracts/BalancedPoolV2.algo.ts:199","pc":[1101,1102]},{"teal":1097,"source":"contracts/BalancedPoolV2.algo.ts:199","pc":[1103]},{"teal":1098,"source":"contracts/BalancedPoolV2.algo.ts:199","pc":[1104]},{"teal":1099,"source":"contracts/BalancedPoolV2.algo.ts:199","pc":[1105,1106]},{"teal":1100,"source":"contracts/BalancedPoolV2.algo.ts:199","pc":[1107,1108]},{"teal":1101,"source":"contracts/BalancedPoolV2.algo.ts:199","pc":[1109]},{"teal":1102,"source":"contracts/BalancedPoolV2.algo.ts:199","pc":[1110]},{"teal":1103,"source":"contracts/BalancedPoolV2.algo.ts:199","pc":[1111]},{"teal":1111,"source":"contracts/BalancedPoolV2.algo.ts:201","pc":[1112]},{"teal":1112,"source":"contracts/BalancedPoolV2.algo.ts:201","pc":[1113,1114]},{"teal":1113,"source":"contracts/BalancedPoolV2.algo.ts:201","pc":[1115,1116]},{"teal":1117,"source":"contracts/BalancedPoolV2.algo.ts:202","pc":[1117,1118]},{"teal":1118,"source":"contracts/BalancedPoolV2.algo.ts:202","pc":[1119,1120]},{"teal":1122,"source":"contracts/BalancedPoolV2.algo.ts:203","pc":[1121,1122]},{"teal":1123,"source":"contracts/BalancedPoolV2.algo.ts:203","pc":[1123,1124]},{"teal":1127,"source":"contracts/BalancedPoolV2.algo.ts:204","pc":[1125,1126]},{"teal":1128,"source":"contracts/BalancedPoolV2.algo.ts:204","pc":[1127,1128]},{"teal":1131,"source":"contracts/BalancedPoolV2.algo.ts:201","pc":[1129]},{"teal":1132,"source":"contracts/BalancedPoolV2.algo.ts:201","pc":[1130,1131]},{"teal":1135,"source":"contracts/BalancedPoolV2.algo.ts:201","pc":[1132]},{"teal":1139,"source":"contracts/BalancedPoolV2.algo.ts:207","pc":[1133,1134]},{"teal":1142,"source":"contracts/BalancedPoolV2.algo.ts:176","pc":[1135,1136]},{"teal":1145,"source":"contracts/BalancedPoolV2.algo.ts:176","pc":[1137,1138]},{"teal":1146,"source":"contracts/BalancedPoolV2.algo.ts:176","pc":[1139]},{"teal":1151,"source":"contracts/BalancedPoolV2.algo.ts:214","pc":[1140,1141,1142]},{"teal":1152,"source":"contracts/BalancedPoolV2.algo.ts:214","pc":[1143]},{"teal":1155,"source":"contracts/BalancedPoolV2.algo.ts:214","pc":[1144,1145,1146]},{"teal":1156,"source":"contracts/BalancedPoolV2.algo.ts:214","pc":[1147]},{"teal":1157,"source":"contracts/BalancedPoolV2.algo.ts:214","pc":[1148]},{"teal":1164,"source":"contracts/BalancedPoolV2.algo.ts:214","pc":[1149,1150,1151]},{"teal":1169,"source":"contracts/BalancedPoolV2.algo.ts:215","pc":[1152,1153]},{"teal":1170,"source":"contracts/BalancedPoolV2.algo.ts:215","pc":[1154,1155]},{"teal":1171,"source":"contracts/BalancedPoolV2.algo.ts:215","pc":[1156,1157]},{"teal":1172,"source":"contracts/BalancedPoolV2.algo.ts:215","pc":[1158]},{"teal":1173,"source":"contracts/BalancedPoolV2.algo.ts:215","pc":[1159]},{"teal":1174,"source":"contracts/BalancedPoolV2.algo.ts:215","pc":[1160,1161,1162]},{"teal":1179,"source":"contracts/BalancedPoolV2.algo.ts:216","pc":[1163]},{"teal":1188,"source":"contracts/BalancedPoolV2.algo.ts:219","pc":[1164]},{"teal":1189,"source":"contracts/BalancedPoolV2.algo.ts:219","pc":[1165,1166]},{"teal":1190,"source":"contracts/BalancedPoolV2.algo.ts:219","pc":[1167,1168]},{"teal":1194,"source":"contracts/BalancedPoolV2.algo.ts:220","pc":[1169,1170]},{"teal":1195,"source":"contracts/BalancedPoolV2.algo.ts:220","pc":[1171,1172]},{"teal":1199,"source":"contracts/BalancedPoolV2.algo.ts:221","pc":[1173,1174]},{"teal":1200,"source":"contracts/BalancedPoolV2.algo.ts:221","pc":[1175,1176]},{"teal":1204,"source":"contracts/BalancedPoolV2.algo.ts:222","pc":[1177]},{"teal":1205,"source":"contracts/BalancedPoolV2.algo.ts:222","pc":[1178,1179]},{"teal":1208,"source":"contracts/BalancedPoolV2.algo.ts:219","pc":[1180]},{"teal":1209,"source":"contracts/BalancedPoolV2.algo.ts:219","pc":[1181,1182]},{"teal":1212,"source":"contracts/BalancedPoolV2.algo.ts:219","pc":[1183]},{"teal":1213,"source":"contracts/BalancedPoolV2.algo.ts:214","pc":[1184]},{"teal":1224,"source":"contracts/BalancedPoolV2.algo.ts:234","pc":[1185,1186,1187]},{"teal":1229,"source":"contracts/BalancedPoolV2.algo.ts:235","pc":[1188,1189]},{"teal":1230,"source":"contracts/BalancedPoolV2.algo.ts:235","pc":[1190,1191]},{"teal":1231,"source":"contracts/BalancedPoolV2.algo.ts:235","pc":[1192]},{"teal":1232,"source":"contracts/BalancedPoolV2.algo.ts:235","pc":[1193]},{"teal":1233,"source":"contracts/BalancedPoolV2.algo.ts:235","pc":[1194]},{"teal":1234,"source":"contracts/BalancedPoolV2.algo.ts:235","pc":[1195]},{"teal":1235,"source":"contracts/BalancedPoolV2.algo.ts:235","pc":[1196]},{"teal":1236,"source":"contracts/BalancedPoolV2.algo.ts:235","pc":[1197]},{"teal":1237,"source":"contracts/BalancedPoolV2.algo.ts:235","pc":[1198,1199,1200]},{"teal":1242,"source":"contracts/BalancedPoolV2.algo.ts:236","pc":[1201,1202]},{"teal":1243,"source":"contracts/BalancedPoolV2.algo.ts:236","pc":[1203,1204]},{"teal":1244,"source":"contracts/BalancedPoolV2.algo.ts:236","pc":[1205]},{"teal":1245,"source":"contracts/BalancedPoolV2.algo.ts:236","pc":[1206]},{"teal":1246,"source":"contracts/BalancedPoolV2.algo.ts:236","pc":[1207]},{"teal":1247,"source":"contracts/BalancedPoolV2.algo.ts:236","pc":[1208]},{"teal":1248,"source":"contracts/BalancedPoolV2.algo.ts:236","pc":[1209]},{"teal":1254,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1210]},{"teal":1255,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1211,1212]},{"teal":1256,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1213]},{"teal":1257,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1214]},{"teal":1258,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1215]},{"teal":1259,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1216]},{"teal":1260,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1217]},{"teal":1261,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1218]},{"teal":1262,"source":"contracts/BalancedPoolV2.algo.ts:239","pc":[1219,1220,1221]},{"teal":1267,"source":"contracts/BalancedPoolV2.algo.ts:240","pc":[1222]},{"teal":1268,"source":"contracts/BalancedPoolV2.algo.ts:240","pc":[1223,1224]},{"teal":1269,"source":"contracts/BalancedPoolV2.algo.ts:240","pc":[1225]},{"teal":1270,"source":"contracts/BalancedPoolV2.algo.ts:240","pc":[1226]},{"teal":1271,"source":"contracts/BalancedPoolV2.algo.ts:240","pc":[1227]},{"teal":1272,"source":"contracts/BalancedPoolV2.algo.ts:240","pc":[1228]},{"teal":1273,"source":"contracts/BalancedPoolV2.algo.ts:240","pc":[1229]},{"teal":1278,"source":"contracts/BalancedPoolV2.algo.ts:243","pc":[1230,1231]},{"teal":1279,"source":"contracts/BalancedPoolV2.algo.ts:243","pc":[1232,1233]},{"teal":1280,"source":"contracts/BalancedPoolV2.algo.ts:243","pc":[1234]},{"teal":1281,"source":"contracts/BalancedPoolV2.algo.ts:243","pc":[1235]},{"teal":1282,"source":"contracts/BalancedPoolV2.algo.ts:243","pc":[1236,1237]},{"teal":1283,"source":"contracts/BalancedPoolV2.algo.ts:243","pc":[1238]},{"teal":1284,"source":"contracts/BalancedPoolV2.algo.ts:243","pc":[1239]},{"teal":1288,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1240]},{"teal":1289,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1241,1242]},{"teal":1290,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1243]},{"teal":1291,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1244]},{"teal":1292,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1245,1246]},{"teal":1293,"source":"contracts/BalancedPoolV2.algo.ts:244","pc":[1247]},{"teal":1294,"source":"contracts/BalancedPoolV2.algo.ts:234","pc":[1248]},{"teal":1300,"source":"contracts/BalancedPoolV2.algo.ts:250","pc":[1249,1250,1251]},{"teal":1305,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1252]},{"teal":1306,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1253]},{"teal":1307,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1254]},{"teal":1308,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1255]},{"teal":1309,"source":"contracts/BalancedPoolV2.algo.ts:251","pc":[1256,1257,1258]},{"teal":1324,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1259]},{"teal":1325,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1260]},{"teal":1326,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1261,1262]},{"teal":1327,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1263,1264]},{"teal":1331,"source":"contracts/BalancedPoolV2.algo.ts:3","pc":[1265,1266]},{"teal":1332,"source":"contracts/BalancedPoolV2.algo.ts:3","pc":[1267,1268]},{"teal":1333,"source":"contracts/BalancedPoolV2.algo.ts:3","pc":[1269]},{"teal":1334,"source":"contracts/BalancedPoolV2.algo.ts:253","pc":[1270,1271]},{"teal":1338,"source":"contracts/BalancedPoolV2.algo.ts:254","pc":[1272,1273]},{"teal":1339,"source":"contracts/BalancedPoolV2.algo.ts:254","pc":[1274,1275]},{"teal":1343,"source":"contracts/BalancedPoolV2.algo.ts:255","pc":[1276,1277]},{"teal":1344,"source":"contracts/BalancedPoolV2.algo.ts:255","pc":[1278,1279]},{"teal":1348,"source":"contracts/BalancedPoolV2.algo.ts:256","pc":[1280,1281]},{"teal":1349,"source":"contracts/BalancedPoolV2.algo.ts:256","pc":[1282,1283]},{"teal":1353,"source":"contracts/BalancedPoolV2.algo.ts:257","pc":[1284,1285]},{"teal":1354,"source":"contracts/BalancedPoolV2.algo.ts:257","pc":[1286,1287]},{"teal":1358,"source":"contracts/BalancedPoolV2.algo.ts:258","pc":[1288,1289]},{"teal":1359,"source":"contracts/BalancedPoolV2.algo.ts:258","pc":[1290,1291]},{"teal":1363,"source":"contracts/BalancedPoolV2.algo.ts:259","pc":[1292]},{"teal":1364,"source":"contracts/BalancedPoolV2.algo.ts:259","pc":[1293,1294]},{"teal":1368,"source":"contracts/BalancedPoolV2.algo.ts:260","pc":[1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309]},{"teal":1369,"source":"contracts/BalancedPoolV2.algo.ts:260","pc":[1310,1311,1312]},{"teal":1370,"source":"contracts/BalancedPoolV2.algo.ts:260","pc":[1313,1314,1315]},{"teal":1371,"source":"contracts/BalancedPoolV2.algo.ts:260","pc":[1316]},{"teal":1372,"source":"contracts/BalancedPoolV2.algo.ts:260","pc":[1317,1318]},{"teal":1376,"source":"contracts/BalancedPoolV2.algo.ts:261","pc":[1319,1320,1321,1322]},{"teal":1377,"source":"contracts/BalancedPoolV2.algo.ts:261","pc":[1323,1324]},{"teal":1380,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1325]},{"teal":1381,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1326,1327]},{"teal":1384,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1328]},{"teal":1385,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1329,1330]},{"teal":1386,"source":"contracts/BalancedPoolV2.algo.ts:252","pc":[1331]},{"teal":1389,"source":"contracts/BalancedPoolV2.algo.ts:250","pc":[1332]},{"teal":1395,"source":"contracts/BalancedPoolV2.algo.ts:269","pc":[1333,1334,1335]},{"teal":1399,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1336,1337]},{"teal":1400,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1338,1339]},{"teal":1401,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1340]},{"teal":1402,"source":"contracts/BalancedPoolV2.algo.ts:270","pc":[1341]},{"teal":1405,"source":"contracts/BalancedPoolV2.algo.ts:270","errorMessage":"only the manager can call this method","pc":[1342]},{"teal":1406,"source":"contracts/BalancedPoolV2.algo.ts:269","pc":[1343]},{"teal":1410,"source":"contracts/BalancedPoolV2.algo.ts:273","pc":[1344,1345,1346]},{"teal":1414,"source":"contracts/BalancedPoolV2.algo.ts:274","pc":[1347]},{"teal":1415,"source":"contracts/BalancedPoolV2.algo.ts:274","pc":[1348]},{"teal":1416,"source":"contracts/BalancedPoolV2.algo.ts:274","pc":[1349]},{"teal":1417,"source":"contracts/BalancedPoolV2.algo.ts:274","pc":[1350]},{"teal":1420,"source":"contracts/BalancedPoolV2.algo.ts:274","errorMessage":"pool not bootstrapped","pc":[1351]},{"teal":1421,"source":"contracts/BalancedPoolV2.algo.ts:273","pc":[1352]},{"teal":1425,"source":"contracts/BalancedPoolV2.algo.ts:277","pc":[1353,1354,1355]},{"teal":1428,"source":"contracts/BalancedPoolV2.algo.ts:277","pc":[1356]},{"teal":1429,"source":"contracts/BalancedPoolV2.algo.ts:277","pc":[1357,1358]},{"teal":1433,"source":"contracts/BalancedPoolV2.algo.ts:278","pc":[1359,1360]},{"teal":1434,"source":"contracts/BalancedPoolV2.algo.ts:278","pc":[1361]},{"teal":1435,"source":"contracts/BalancedPoolV2.algo.ts:278","pc":[1362]},{"teal":1438,"source":"contracts/BalancedPoolV2.algo.ts:278","errorMessage":"log undefined for x ≤ 0","pc":[1363]},{"teal":1442,"source":"contracts/BalancedPoolV2.algo.ts:280","pc":[1364]},{"teal":1443,"source":"contracts/BalancedPoolV2.algo.ts:280","pc":[1365,1366]},{"teal":1448,"source":"contracts/BalancedPoolV2.algo.ts:283","pc":[1367,1368]},{"teal":1449,"source":"contracts/BalancedPoolV2.algo.ts:283","pc":[1369]},{"teal":1450,"source":"contracts/BalancedPoolV2.algo.ts:283","pc":[1370]},{"teal":1451,"source":"contracts/BalancedPoolV2.algo.ts:283","pc":[1371,1372,1373]},{"teal":1456,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1374]},{"teal":1457,"source":"contracts/BalancedPoolV2.algo.ts:284","pc":[1375,1376]},{"teal":1461,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1377]},{"teal":1462,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1378]},{"teal":1463,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1379]},{"teal":1464,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1380]},{"teal":1465,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1381,1382]},{"teal":1466,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1383]},{"teal":1467,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1384]},{"teal":1468,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1385]},{"teal":1469,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1386]},{"teal":1470,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1387]},{"teal":1473,"source":"contracts/BalancedPoolV2.algo.ts:285","errorMessage":"wideRatio failed","pc":[1388]},{"teal":1474,"source":"contracts/BalancedPoolV2.algo.ts:285","pc":[1389,1390]},{"teal":1478,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1391,1392]},{"teal":1479,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1393]},{"teal":1480,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1394]},{"teal":1481,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1395]},{"teal":1482,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1396]},{"teal":1483,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1397]},{"teal":1484,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1398,1399]},{"teal":1485,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1400]},{"teal":1486,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1401]},{"teal":1487,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1402]},{"teal":1488,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1403]},{"teal":1489,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1404]},{"teal":1492,"source":"contracts/BalancedPoolV2.algo.ts:286","errorMessage":"wideRatio failed","pc":[1405]},{"teal":1493,"source":"contracts/BalancedPoolV2.algo.ts:286","pc":[1406,1407]},{"teal":1494,"source":"contracts/BalancedPoolV2.algo.ts:283","pc":[1408,1409,1410]},{"teal":1499,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1411,1412]},{"teal":1500,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1413]},{"teal":1501,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1414]},{"teal":1502,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1415]},{"teal":1503,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1416]},{"teal":1504,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1417]},{"teal":1505,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1418,1419]},{"teal":1506,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1420]},{"teal":1507,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1421]},{"teal":1508,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1422]},{"teal":1509,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1423]},{"teal":1510,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1424]},{"teal":1513,"source":"contracts/BalancedPoolV2.algo.ts:288","errorMessage":"wideRatio failed","pc":[1425]},{"teal":1514,"source":"contracts/BalancedPoolV2.algo.ts:288","pc":[1426,1427]},{"teal":1519,"source":"contracts/BalancedPoolV2.algo.ts:291","pc":[1428,1429]},{"teal":1520,"source":"contracts/BalancedPoolV2.algo.ts:291","pc":[1430,1431]},{"teal":1524,"source":"contracts/BalancedPoolV2.algo.ts:292","pc":[1432,1433]},{"teal":1525,"source":"contracts/BalancedPoolV2.algo.ts:292","pc":[1434,1435]},{"teal":1529,"source":"contracts/BalancedPoolV2.algo.ts:293","pc":[1436]},{"teal":1530,"source":"contracts/BalancedPoolV2.algo.ts:293","pc":[1437,1438]},{"teal":1534,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1439]},{"teal":1535,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1440,1441]},{"teal":1536,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1442,1443]},{"teal":1537,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1444]},{"teal":1538,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1445,1446]},{"teal":1539,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1447,1448]},{"teal":1540,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1449]},{"teal":1541,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1450,1451]},{"teal":1542,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1452,1453]},{"teal":1543,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1454,1455]},{"teal":1544,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1456,1457]},{"teal":1545,"source":"contracts/BalancedPoolV2.algo.ts:295","pc":[1458]},{"teal":1549,"source":"contracts/BalancedPoolV2.algo.ts:297","pc":[1459,1460]},{"teal":1550,"source":"contracts/BalancedPoolV2.algo.ts:297","pc":[1461,1462]},{"teal":1555,"source":"contracts/BalancedPoolV2.algo.ts:297","pc":[1463,1464]},{"teal":1556,"source":"contracts/BalancedPoolV2.algo.ts:297","pc":[1465,1466]},{"teal":1557,"source":"contracts/BalancedPoolV2.algo.ts:297","pc":[1467]},{"teal":1558,"source":"contracts/BalancedPoolV2.algo.ts:297","pc":[1468,1469,1470]},{"teal":1562,"source":"contracts/BalancedPoolV2.algo.ts:298","pc":[1471,1472]},{"teal":1563,"source":"contracts/BalancedPoolV2.algo.ts:298","pc":[1473,1474]},{"teal":1564,"source":"contracts/BalancedPoolV2.algo.ts:298","pc":[1475]},{"teal":1565,"source":"contracts/BalancedPoolV2.algo.ts:298","pc":[1476]},{"teal":1566,"source":"contracts/BalancedPoolV2.algo.ts:298","pc":[1477]},{"teal":1567,"source":"contracts/BalancedPoolV2.algo.ts:298","pc":[1478]},{"teal":1568,"source":"contracts/BalancedPoolV2.algo.ts:298","pc":[1479]},{"teal":1569,"source":"contracts/BalancedPoolV2.algo.ts:298","pc":[1480]},{"teal":1570,"source":"contracts/BalancedPoolV2.algo.ts:298","pc":[1481]},{"teal":1571,"source":"contracts/BalancedPoolV2.algo.ts:298","pc":[1482]},{"teal":1574,"source":"contracts/BalancedPoolV2.algo.ts:298","errorMessage":"wideRatio failed","pc":[1483]},{"teal":1575,"source":"contracts/BalancedPoolV2.algo.ts:298","pc":[1484,1485]},{"teal":1579,"source":"contracts/BalancedPoolV2.algo.ts:299","pc":[1486]},{"teal":1580,"source":"contracts/BalancedPoolV2.algo.ts:299","pc":[1487,1488]},{"teal":1581,"source":"contracts/BalancedPoolV2.algo.ts:299","pc":[1489]},{"teal":1582,"source":"contracts/BalancedPoolV2.algo.ts:299","pc":[1490,1491]},{"teal":1583,"source":"contracts/BalancedPoolV2.algo.ts:299","pc":[1492]},{"teal":1584,"source":"contracts/BalancedPoolV2.algo.ts:299","pc":[1493]},{"teal":1585,"source":"contracts/BalancedPoolV2.algo.ts:299","pc":[1494]},{"teal":1586,"source":"contracts/BalancedPoolV2.algo.ts:299","pc":[1495]},{"teal":1587,"source":"contracts/BalancedPoolV2.algo.ts:299","pc":[1496]},{"teal":1590,"source":"contracts/BalancedPoolV2.algo.ts:299","errorMessage":"wideRatio failed","pc":[1497]},{"teal":1591,"source":"contracts/BalancedPoolV2.algo.ts:299","pc":[1498,1499]},{"teal":1595,"source":"contracts/BalancedPoolV2.algo.ts:300","pc":[1500,1501]},{"teal":1596,"source":"contracts/BalancedPoolV2.algo.ts:300","pc":[1502,1503,1504]},{"teal":1597,"source":"contracts/BalancedPoolV2.algo.ts:300","pc":[1505,1506]},{"teal":1598,"source":"contracts/BalancedPoolV2.algo.ts:300","pc":[1507,1508]},{"teal":1599,"source":"contracts/BalancedPoolV2.algo.ts:300","pc":[1509]},{"teal":1600,"source":"contracts/BalancedPoolV2.algo.ts:300","pc":[1510,1511,1512]},{"teal":1603,"source":"contracts/BalancedPoolV2.algo.ts:300","pc":[1513,1514]},{"teal":1604,"source":"contracts/BalancedPoolV2.algo.ts:300","pc":[1515,1516]},{"teal":1605,"source":"contracts/BalancedPoolV2.algo.ts:300","pc":[1517]},{"teal":1608,"source":"contracts/BalancedPoolV2.algo.ts:300","pc":[1518,1519]},{"teal":1612,"source":"contracts/BalancedPoolV2.algo.ts:301","pc":[1520,1521]},{"teal":1613,"source":"contracts/BalancedPoolV2.algo.ts:301","pc":[1522]},{"teal":1614,"source":"contracts/BalancedPoolV2.algo.ts:301","pc":[1523,1524]},{"teal":1619,"source":"contracts/BalancedPoolV2.algo.ts:297","pc":[1525,1526]},{"teal":1620,"source":"contracts/BalancedPoolV2.algo.ts:297","pc":[1527]},{"teal":1621,"source":"contracts/BalancedPoolV2.algo.ts:297","pc":[1528]},{"teal":1622,"source":"contracts/BalancedPoolV2.algo.ts:297","pc":[1529,1530]},{"teal":1623,"source":"contracts/BalancedPoolV2.algo.ts:297","pc":[1531,1532,1533]},{"teal":1628,"source":"contracts/BalancedPoolV2.algo.ts:304","pc":[1534,1535]},{"teal":1629,"source":"contracts/BalancedPoolV2.algo.ts:304","pc":[1536]},{"teal":1630,"source":"contracts/BalancedPoolV2.algo.ts:304","pc":[1537,1538]},{"teal":1631,"source":"contracts/BalancedPoolV2.algo.ts:304","pc":[1539]},{"teal":1632,"source":"contracts/BalancedPoolV2.algo.ts:304","pc":[1540]},{"teal":1635,"source":"contracts/BalancedPoolV2.algo.ts:277","pc":[1541,1542]},{"teal":1638,"source":"contracts/BalancedPoolV2.algo.ts:277","pc":[1543,1544]},{"teal":1639,"source":"contracts/BalancedPoolV2.algo.ts:277","pc":[1545]},{"teal":1643,"source":"contracts/BalancedPoolV2.algo.ts:307","pc":[1546,1547,1548]},{"teal":1646,"source":"contracts/BalancedPoolV2.algo.ts:307","pc":[1549]},{"teal":1647,"source":"contracts/BalancedPoolV2.algo.ts:307","pc":[1550,1551]},{"teal":1651,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1552]},{"teal":1652,"source":"contracts/BalancedPoolV2.algo.ts:308","pc":[1553,1554]},{"teal":1656,"source":"contracts/BalancedPoolV2.algo.ts:309","pc":[1555]},{"teal":1657,"source":"contracts/BalancedPoolV2.algo.ts:309","pc":[1556,1557]},{"teal":1661,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1558]},{"teal":1662,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1559,1560]},{"teal":1667,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1561,1562]},{"teal":1668,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1563,1564]},{"teal":1669,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1565]},{"teal":1670,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1566,1567,1568]},{"teal":1674,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1569,1570]},{"teal":1675,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1571,1572]},{"teal":1676,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1573]},{"teal":1677,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1574]},{"teal":1678,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1575,1576]},{"teal":1679,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1577]},{"teal":1680,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1578]},{"teal":1681,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1579]},{"teal":1682,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1580]},{"teal":1683,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1581]},{"teal":1684,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1582]},{"teal":1685,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1583]},{"teal":1688,"source":"contracts/BalancedPoolV2.algo.ts:312","errorMessage":"wideRatio failed","pc":[1584]},{"teal":1689,"source":"contracts/BalancedPoolV2.algo.ts:312","pc":[1585,1586]},{"teal":1693,"source":"contracts/BalancedPoolV2.algo.ts:313","pc":[1587,1588]},{"teal":1694,"source":"contracts/BalancedPoolV2.algo.ts:313","pc":[1589,1590]},{"teal":1695,"source":"contracts/BalancedPoolV2.algo.ts:313","pc":[1591]},{"teal":1696,"source":"contracts/BalancedPoolV2.algo.ts:313","pc":[1592,1593]},{"teal":1701,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1594,1595]},{"teal":1702,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1596]},{"teal":1703,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1597]},{"teal":1704,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1598,1599]},{"teal":1705,"source":"contracts/BalancedPoolV2.algo.ts:311","pc":[1600,1601,1602]},{"teal":1710,"source":"contracts/BalancedPoolV2.algo.ts:316","pc":[1603,1604]},{"teal":1713,"source":"contracts/BalancedPoolV2.algo.ts:307","pc":[1605,1606]},{"teal":1716,"source":"contracts/BalancedPoolV2.algo.ts:307","pc":[1607,1608]},{"teal":1717,"source":"contracts/BalancedPoolV2.algo.ts:307","pc":[1609]},{"teal":1721,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1610,1611,1612]},{"teal":1724,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1613]},{"teal":1725,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1614,1615]},{"teal":1730,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1616,1617]},{"teal":1731,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1618]},{"teal":1732,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1619]},{"teal":1733,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1620,1621,1622]},{"teal":1738,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1623]},{"teal":1739,"source":"contracts/BalancedPoolV2.algo.ts:320","pc":[1624,1625,1626]},{"teal":1744,"source":"contracts/BalancedPoolV2.algo.ts:322","pc":[1627,1628]},{"teal":1745,"source":"contracts/BalancedPoolV2.algo.ts:322","pc":[1629,1630,1631]},{"teal":1746,"source":"contracts/BalancedPoolV2.algo.ts:322","pc":[1632,1633]},{"teal":1750,"source":"contracts/BalancedPoolV2.algo.ts:323","pc":[1634,1635]},{"teal":1751,"source":"contracts/BalancedPoolV2.algo.ts:323","pc":[1636,1637]},{"teal":1752,"source":"contracts/BalancedPoolV2.algo.ts:323","pc":[1638,1639]},{"teal":1753,"source":"contracts/BalancedPoolV2.algo.ts:323","pc":[1640,1641,1642]},{"teal":1754,"source":"contracts/BalancedPoolV2.algo.ts:323","pc":[1643]},{"teal":1755,"source":"contracts/BalancedPoolV2.algo.ts:323","pc":[1644,1645]},{"teal":1759,"source":"contracts/BalancedPoolV2.algo.ts:324","pc":[1646,1647]},{"teal":1760,"source":"contracts/BalancedPoolV2.algo.ts:324","pc":[1648,1649]},{"teal":1761,"source":"contracts/BalancedPoolV2.algo.ts:324","pc":[1650,1651]},{"teal":1762,"source":"contracts/BalancedPoolV2.algo.ts:324","pc":[1652,1653,1654]},{"teal":1763,"source":"contracts/BalancedPoolV2.algo.ts:324","pc":[1655]},{"teal":1764,"source":"contracts/BalancedPoolV2.algo.ts:324","pc":[1656,1657]},{"teal":1768,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1658,1659]},{"teal":1769,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1660,1661]},{"teal":1770,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1662]},{"teal":1771,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1663]},{"teal":1772,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1664]},{"teal":1773,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1665]},{"teal":1774,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1666]},{"teal":1775,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1667]},{"teal":1776,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1668]},{"teal":1777,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1669]},{"teal":1780,"source":"contracts/BalancedPoolV2.algo.ts:326","errorMessage":"wideRatio failed","pc":[1670]},{"teal":1781,"source":"contracts/BalancedPoolV2.algo.ts:326","pc":[1671,1672]},{"teal":1785,"source":"contracts/BalancedPoolV2.algo.ts:328","pc":[1673,1674]},{"teal":1786,"source":"contracts/BalancedPoolV2.algo.ts:328","pc":[1675,1676,1677]},{"teal":1787,"source":"contracts/BalancedPoolV2.algo.ts:328","pc":[1678,1679]},{"teal":1792,"source":"contracts/BalancedPoolV2.algo.ts:330","pc":[1680,1681]},{"teal":1793,"source":"contracts/BalancedPoolV2.algo.ts:330","pc":[1682]},{"teal":1794,"source":"contracts/BalancedPoolV2.algo.ts:330","pc":[1683]},{"teal":1795,"source":"contracts/BalancedPoolV2.algo.ts:330","pc":[1684,1685,1686]},{"teal":1800,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1687]},{"teal":1801,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1688]},{"teal":1802,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1689]},{"teal":1803,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1690]},{"teal":1804,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1691,1692]},{"teal":1805,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1693]},{"teal":1806,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1694]},{"teal":1807,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1695]},{"teal":1808,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1696]},{"teal":1809,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1697]},{"teal":1812,"source":"contracts/BalancedPoolV2.algo.ts:331","errorMessage":"wideRatio failed","pc":[1698]},{"teal":1813,"source":"contracts/BalancedPoolV2.algo.ts:331","pc":[1699,1700,1701]},{"teal":1818,"source":"contracts/BalancedPoolV2.algo.ts:334","pc":[1702,1703]},{"teal":1822,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1704,1705]},{"teal":1825,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1706,1707]},{"teal":1826,"source":"contracts/BalancedPoolV2.algo.ts:319","pc":[1708]},{"teal":1830,"source":"contracts/BalancedPoolV2.algo.ts:337","pc":[1709,1710,1711]},{"teal":1833,"source":"contracts/BalancedPoolV2.algo.ts:337","pc":[1712]},{"teal":1834,"source":"contracts/BalancedPoolV2.algo.ts:337","pc":[1713,1714]},{"teal":1838,"source":"contracts/BalancedPoolV2.algo.ts:346","pc":[1715,1716]},{"teal":1839,"source":"contracts/BalancedPoolV2.algo.ts:346","pc":[1717,1718,1719,1720]},{"teal":1840,"source":"contracts/BalancedPoolV2.algo.ts:346","pc":[1721]},{"teal":1841,"source":"contracts/BalancedPoolV2.algo.ts:346","pc":[1722]},{"teal":1842,"source":"contracts/BalancedPoolV2.algo.ts:346","pc":[1723]},{"teal":1843,"source":"contracts/BalancedPoolV2.algo.ts:346","pc":[1724]},{"teal":1844,"source":"contracts/BalancedPoolV2.algo.ts:346","pc":[1725]},{"teal":1845,"source":"contracts/BalancedPoolV2.algo.ts:346","pc":[1726]},{"teal":1846,"source":"contracts/BalancedPoolV2.algo.ts:346","pc":[1727]},{"teal":1847,"source":"contracts/BalancedPoolV2.algo.ts:346","pc":[1728]},{"teal":1850,"source":"contracts/BalancedPoolV2.algo.ts:346","errorMessage":"wideRatio failed","pc":[1729]},{"teal":1851,"source":"contracts/BalancedPoolV2.algo.ts:346","pc":[1730,1731]},{"teal":1855,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1732,1733]},{"teal":1856,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1734]},{"teal":1857,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1735]},{"teal":1858,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1736]},{"teal":1859,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1737,1738]},{"teal":1860,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1739,1740]},{"teal":1861,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1741]},{"teal":1862,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1742]},{"teal":1863,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1743]},{"teal":1864,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1744]},{"teal":1865,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1745]},{"teal":1866,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1746]},{"teal":1869,"source":"contracts/BalancedPoolV2.algo.ts:349","errorMessage":"wideRatio failed","pc":[1747]},{"teal":1870,"source":"contracts/BalancedPoolV2.algo.ts:349","pc":[1748,1749]},{"teal":1874,"source":"contracts/BalancedPoolV2.algo.ts:351","pc":[1750,1751]},{"teal":1875,"source":"contracts/BalancedPoolV2.algo.ts:351","pc":[1752]},{"teal":1876,"source":"contracts/BalancedPoolV2.algo.ts:351","pc":[1753]},{"teal":1877,"source":"contracts/BalancedPoolV2.algo.ts:351","pc":[1754]},{"teal":1878,"source":"contracts/BalancedPoolV2.algo.ts:351","pc":[1755,1756]},{"teal":1879,"source":"contracts/BalancedPoolV2.algo.ts:351","pc":[1757]},{"teal":1880,"source":"contracts/BalancedPoolV2.algo.ts:351","pc":[1758]},{"teal":1881,"source":"contracts/BalancedPoolV2.algo.ts:351","pc":[1759]},{"teal":1882,"source":"contracts/BalancedPoolV2.algo.ts:351","pc":[1760]},{"teal":1883,"source":"contracts/BalancedPoolV2.algo.ts:351","pc":[1761]},{"teal":1886,"source":"contracts/BalancedPoolV2.algo.ts:351","errorMessage":"wideRatio failed","pc":[1762]},{"teal":1887,"source":"contracts/BalancedPoolV2.algo.ts:351","pc":[1763,1764]},{"teal":1891,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1765,1766]},{"teal":1892,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1767]},{"teal":1893,"source":"contracts/BalancedPoolV2.algo.ts:353","pc":[1768]},{"teal":1897,"source":"contracts/BalancedPoolV2.algo.ts:354","pc":[1769,1770]},{"teal":1898,"source":"contracts/BalancedPoolV2.algo.ts:354","pc":[1771]},{"teal":1899,"source":"contracts/BalancedPoolV2.algo.ts:354","pc":[1772]},{"teal":1903,"source":"contracts/BalancedPoolV2.algo.ts:357","pc":[1773,1774]},{"teal":1904,"source":"contracts/BalancedPoolV2.algo.ts:357","pc":[1775,1776]},{"teal":1905,"source":"contracts/BalancedPoolV2.algo.ts:357","pc":[1777,1778,1779]},{"teal":1906,"source":"contracts/BalancedPoolV2.algo.ts:357","pc":[1780,1781]},{"teal":1910,"source":"contracts/BalancedPoolV2.algo.ts:359","pc":[1782,1783]},{"teal":1911,"source":"contracts/BalancedPoolV2.algo.ts:359","pc":[1784]},{"teal":1912,"source":"contracts/BalancedPoolV2.algo.ts:359","pc":[1785,1786]},{"teal":1913,"source":"contracts/BalancedPoolV2.algo.ts:359","pc":[1787]},{"teal":1914,"source":"contracts/BalancedPoolV2.algo.ts:359","pc":[1788]},{"teal":1915,"source":"contracts/BalancedPoolV2.algo.ts:359","pc":[1789]},{"teal":1916,"source":"contracts/BalancedPoolV2.algo.ts:359","pc":[1790]},{"teal":1917,"source":"contracts/BalancedPoolV2.algo.ts:359","pc":[1791]},{"teal":1918,"source":"contracts/BalancedPoolV2.algo.ts:359","pc":[1792]},{"teal":1919,"source":"contracts/BalancedPoolV2.algo.ts:359","pc":[1793]},{"teal":1920,"source":"contracts/BalancedPoolV2.algo.ts:359","pc":[1794]},{"teal":1921,"source":"contracts/BalancedPoolV2.algo.ts:359","pc":[1795]},{"teal":1924,"source":"contracts/BalancedPoolV2.algo.ts:359","errorMessage":"wideRatio failed","pc":[1796]},{"teal":1927,"source":"contracts/BalancedPoolV2.algo.ts:337","pc":[1797,1798]},{"teal":1930,"source":"contracts/BalancedPoolV2.algo.ts:337","pc":[1799,1800]},{"teal":1931,"source":"contracts/BalancedPoolV2.algo.ts:337","pc":[1801]},{"teal":1935,"source":"contracts/BalancedPoolV2.algo.ts:362","pc":[1802,1803,1804]},{"teal":1938,"source":"contracts/BalancedPoolV2.algo.ts:362","pc":[1805]},{"teal":1939,"source":"contracts/BalancedPoolV2.algo.ts:362","pc":[1806,1807]},{"teal":1943,"source":"contracts/BalancedPoolV2.algo.ts:363","pc":[1808,1809]},{"teal":1944,"source":"contracts/BalancedPoolV2.algo.ts:363","pc":[1810]},{"teal":1945,"source":"contracts/BalancedPoolV2.algo.ts:363","pc":[1811,1812,1813]},{"teal":1946,"source":"contracts/BalancedPoolV2.algo.ts:363","pc":[1814]},{"teal":1947,"source":"contracts/BalancedPoolV2.algo.ts:363","pc":[1815]},{"teal":1948,"source":"contracts/BalancedPoolV2.algo.ts:363","pc":[1816]},{"teal":1949,"source":"contracts/BalancedPoolV2.algo.ts:363","pc":[1817,1818]},{"teal":1953,"source":"contracts/BalancedPoolV2.algo.ts:364","pc":[1819]},{"teal":1954,"source":"contracts/BalancedPoolV2.algo.ts:364","pc":[1820,1821]},{"teal":1958,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1822]},{"teal":1959,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1823,1824]},{"teal":1960,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1825,1826]},{"teal":1961,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1827]},{"teal":1962,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1828,1829]},{"teal":1963,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1830,1831]},{"teal":1964,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1832]},{"teal":1965,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1833,1834]},{"teal":1966,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1835,1836]},{"teal":1967,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1837,1838]},{"teal":1968,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1839,1840]},{"teal":1969,"source":"contracts/BalancedPoolV2.algo.ts:366","pc":[1841]},{"teal":1973,"source":"contracts/BalancedPoolV2.algo.ts:368","pc":[1842]},{"teal":1974,"source":"contracts/BalancedPoolV2.algo.ts:368","pc":[1843,1844]},{"teal":1979,"source":"contracts/BalancedPoolV2.algo.ts:368","pc":[1845,1846]},{"teal":1980,"source":"contracts/BalancedPoolV2.algo.ts:368","pc":[1847,1848]},{"teal":1981,"source":"contracts/BalancedPoolV2.algo.ts:368","pc":[1849]},{"teal":1982,"source":"contracts/BalancedPoolV2.algo.ts:368","pc":[1850,1851,1852]},{"teal":1986,"source":"contracts/BalancedPoolV2.algo.ts:369","pc":[1853,1854]},{"teal":1987,"source":"contracts/BalancedPoolV2.algo.ts:369","pc":[1855]},{"teal":1988,"source":"contracts/BalancedPoolV2.algo.ts:369","pc":[1856,1857,1858]},{"teal":1989,"source":"contracts/BalancedPoolV2.algo.ts:369","pc":[1859,1860]},{"teal":1990,"source":"contracts/BalancedPoolV2.algo.ts:369","pc":[1861]},{"teal":1991,"source":"contracts/BalancedPoolV2.algo.ts:369","pc":[1862,1863]},{"teal":1992,"source":"contracts/BalancedPoolV2.algo.ts:369","pc":[1864]},{"teal":1993,"source":"contracts/BalancedPoolV2.algo.ts:369","pc":[1865]},{"teal":1994,"source":"contracts/BalancedPoolV2.algo.ts:369","pc":[1866]},{"teal":1995,"source":"contracts/BalancedPoolV2.algo.ts:369","pc":[1867,1868]},{"teal":1996,"source":"contracts/BalancedPoolV2.algo.ts:369","pc":[1869]},{"teal":1997,"source":"contracts/BalancedPoolV2.algo.ts:369","pc":[1870]},{"teal":1998,"source":"contracts/BalancedPoolV2.algo.ts:369","pc":[1871]},{"teal":1999,"source":"contracts/BalancedPoolV2.algo.ts:369","pc":[1872]},{"teal":2000,"source":"contracts/BalancedPoolV2.algo.ts:369","pc":[1873,1874]},{"teal":2004,"source":"contracts/BalancedPoolV2.algo.ts:370","pc":[1875]},{"teal":2005,"source":"contracts/BalancedPoolV2.algo.ts:370","pc":[1876,1877]},{"teal":2006,"source":"contracts/BalancedPoolV2.algo.ts:370","pc":[1878]},{"teal":2007,"source":"contracts/BalancedPoolV2.algo.ts:370","pc":[1879]},{"teal":2008,"source":"contracts/BalancedPoolV2.algo.ts:370","pc":[1880]},{"teal":2011,"source":"contracts/BalancedPoolV2.algo.ts:370","errorMessage":"box value does not exist: this.balances(assetId).value","pc":[1881]},{"teal":2012,"source":"contracts/BalancedPoolV2.algo.ts:370","pc":[1882]},{"teal":2013,"source":"contracts/BalancedPoolV2.algo.ts:370","pc":[1883,1884]},{"teal":2017,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1885]},{"teal":2018,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1886,1887]},{"teal":2019,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1888]},{"teal":2020,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1889]},{"teal":2023,"source":"contracts/BalancedPoolV2.algo.ts:371","errorMessage":"box value does not exist: this.provided(sender).value","pc":[1890]},{"teal":2024,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1891,1892,1893]},{"teal":2025,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1894,1895]},{"teal":2026,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1896]},{"teal":2027,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1897,1898]},{"teal":2028,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1899]},{"teal":2029,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1900]},{"teal":2030,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1901]},{"teal":2031,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1902,1903]},{"teal":2032,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1904]},{"teal":2033,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1905]},{"teal":2034,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1906]},{"teal":2035,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1907]},{"teal":2036,"source":"contracts/BalancedPoolV2.algo.ts:371","pc":[1908,1909]},{"teal":2040,"source":"contracts/BalancedPoolV2.algo.ts:373","pc":[1910,1911]},{"teal":2041,"source":"contracts/BalancedPoolV2.algo.ts:373","pc":[1912]},{"teal":2042,"source":"contracts/BalancedPoolV2.algo.ts:373","pc":[1913]},{"teal":2045,"source":"contracts/BalancedPoolV2.algo.ts:373","errorMessage":"Pool balance must be > 0","pc":[1914]},{"teal":2049,"source":"contracts/BalancedPoolV2.algo.ts:374","pc":[1915,1916]},{"teal":2050,"source":"contracts/BalancedPoolV2.algo.ts:374","pc":[1917]},{"teal":2051,"source":"contracts/BalancedPoolV2.algo.ts:374","pc":[1918]},{"teal":2054,"source":"contracts/BalancedPoolV2.algo.ts:374","errorMessage":"Missing one asset contribution","pc":[1919]},{"teal":2058,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1920,1921]},{"teal":2059,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1922]},{"teal":2060,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1923]},{"teal":2061,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1924]},{"teal":2062,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1925,1926]},{"teal":2063,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1927]},{"teal":2064,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1928]},{"teal":2065,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1929]},{"teal":2066,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1930]},{"teal":2067,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1931]},{"teal":2070,"source":"contracts/BalancedPoolV2.algo.ts:376","errorMessage":"wideRatio failed","pc":[1932]},{"teal":2071,"source":"contracts/BalancedPoolV2.algo.ts:376","pc":[1933,1934]},{"teal":2076,"source":"contracts/BalancedPoolV2.algo.ts:378","pc":[1935,1936]},{"teal":2077,"source":"contracts/BalancedPoolV2.algo.ts:378","pc":[1937,1938]},{"teal":2078,"source":"contracts/BalancedPoolV2.algo.ts:378","pc":[1939]},{"teal":2079,"source":"contracts/BalancedPoolV2.algo.ts:378","pc":[1940,1941,1942]},{"teal":2084,"source":"contracts/BalancedPoolV2.algo.ts:379","pc":[1943,1944]},{"teal":2085,"source":"contracts/BalancedPoolV2.algo.ts:379","pc":[1945,1946]},{"teal":2092,"source":"contracts/BalancedPoolV2.algo.ts:368","pc":[1947,1948]},{"teal":2093,"source":"contracts/BalancedPoolV2.algo.ts:368","pc":[1949]},{"teal":2094,"source":"contracts/BalancedPoolV2.algo.ts:368","pc":[1950]},{"teal":2095,"source":"contracts/BalancedPoolV2.algo.ts:368","pc":[1951,1952]},{"teal":2096,"source":"contracts/BalancedPoolV2.algo.ts:368","pc":[1953,1954,1955]},{"teal":2101,"source":"contracts/BalancedPoolV2.algo.ts:383","pc":[1956]},{"teal":2102,"source":"contracts/BalancedPoolV2.algo.ts:383","pc":[1957]},{"teal":2103,"source":"contracts/BalancedPoolV2.algo.ts:383","pc":[1958,1959]},{"teal":2104,"source":"contracts/BalancedPoolV2.algo.ts:383","pc":[1960]},{"teal":2105,"source":"contracts/BalancedPoolV2.algo.ts:383","pc":[1961]},{"teal":2106,"source":"contracts/BalancedPoolV2.algo.ts:383","pc":[1962]},{"teal":2107,"source":"contracts/BalancedPoolV2.algo.ts:383","pc":[1963,1964]},{"teal":2108,"source":"contracts/BalancedPoolV2.algo.ts:383","pc":[1965]},{"teal":2109,"source":"contracts/BalancedPoolV2.algo.ts:383","pc":[1966,1967]},{"teal":2113,"source":"contracts/BalancedPoolV2.algo.ts:384","pc":[1968,1969]},{"teal":2114,"source":"contracts/BalancedPoolV2.algo.ts:384","pc":[1970,1971]},{"teal":2115,"source":"contracts/BalancedPoolV2.algo.ts:384","pc":[1972]},{"teal":2116,"source":"contracts/BalancedPoolV2.algo.ts:384","pc":[1973]},{"teal":2117,"source":"contracts/BalancedPoolV2.algo.ts:384","pc":[1974]},{"teal":2118,"source":"contracts/BalancedPoolV2.algo.ts:384","pc":[1975]},{"teal":2119,"source":"contracts/BalancedPoolV2.algo.ts:384","pc":[1976]},{"teal":2120,"source":"contracts/BalancedPoolV2.algo.ts:384","pc":[1977]},{"teal":2121,"source":"contracts/BalancedPoolV2.algo.ts:384","pc":[1978]},{"teal":2122,"source":"contracts/BalancedPoolV2.algo.ts:384","pc":[1979]},{"teal":2125,"source":"contracts/BalancedPoolV2.algo.ts:384","errorMessage":"wideRatio failed","pc":[1980]},{"teal":2128,"source":"contracts/BalancedPoolV2.algo.ts:362","pc":[1981,1982]},{"teal":2131,"source":"contracts/BalancedPoolV2.algo.ts:362","pc":[1983,1984]},{"teal":2132,"source":"contracts/BalancedPoolV2.algo.ts:362","pc":[1985]},{"teal":2136,"source":"contracts/BalancedPoolV2.algo.ts:387","pc":[1986,1987,1988]},{"teal":2140,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[1989]},{"teal":2141,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[1990]},{"teal":2142,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[1991,1992]},{"teal":2143,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[1993]},{"teal":2144,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[1994]},{"teal":2145,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[1995]},{"teal":2146,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[1996,1997]},{"teal":2147,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[1998]},{"teal":2148,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[1999]},{"teal":2149,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[2000]},{"teal":2150,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[2001,2002]},{"teal":2151,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[2003]},{"teal":2152,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[2004]},{"teal":2153,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[2005,2006]},{"teal":2154,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[2007]},{"teal":2155,"source":"contracts/BalancedPoolV2.algo.ts:388","pc":[2008]},{"teal":2156,"source":"contracts/BalancedPoolV2.algo.ts:387","pc":[2009]},{"teal":2159,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2010,2011]},{"teal":2160,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2012,2013,2014]},{"teal":2161,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2015,2016,2017,2018,2019,2020]},{"teal":2162,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2021,2022,2023]},{"teal":2163,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2024,2025,2026,2027]},{"teal":2166,"source":"contracts/BalancedPoolV2.algo.ts:7","errorMessage":"this contract does not implement the given ABI method for create NoOp","pc":[2028]},{"teal":2169,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2029,2030,2031,2032,2033,2034]},{"teal":2170,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2035,2036,2037,2038,2039,2040]},{"teal":2171,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2041,2042,2043,2044,2045,2046]},{"teal":2172,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2047,2048,2049,2050,2051,2052]},{"teal":2173,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2053,2054,2055,2056,2057,2058]},{"teal":2174,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2059,2060,2061,2062,2063,2064]},{"teal":2175,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2065,2066,2067]},{"teal":2176,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081]},{"teal":2179,"source":"contracts/BalancedPoolV2.algo.ts:7","errorMessage":"this contract does not implement the given ABI method for call NoOp","pc":[2082]},{"teal":2182,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2083,2084,2085]},{"teal":2183,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097]},{"teal":2184,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2098,2099]},{"teal":2185,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2100]},{"teal":2186,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2101]},{"teal":2187,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2102]},{"teal":2191,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2103,2104,2105]},{"teal":2192,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2106,2107]},{"teal":2193,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2108]},{"teal":2194,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2109]},{"teal":2195,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2110,2111,2112]},{"teal":2196,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2113,2114,2115]},{"teal":2197,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2116]},{"teal":2200,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2117,2118]},{"teal":2201,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2119,2120]},{"teal":2202,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2121]},{"teal":2203,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2122]},{"teal":2204,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2123]},{"teal":2205,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2124,2125,2126]},{"teal":2206,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2127,2128]},{"teal":2207,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2129,2130]},{"teal":2208,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2131]},{"teal":2209,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2132,2133,2134]},{"teal":2210,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2135,2136,2137]},{"teal":2213,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2138]},{"teal":2216,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2139,2140]},{"teal":2217,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2141,2142]},{"teal":2218,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2143]},{"teal":2219,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2144,2145,2146]},{"teal":2220,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2147]},{"teal":2221,"source":"contracts/BalancedPoolV2.algo.ts:7","pc":[2148]}],"pcOffsetMethod":"none"},"clear":{"sourceInfo":[],"pcOffsetMethod":"none"}},"source":{"approval":"","clear":"I3ByYWdtYSB2ZXJzaW9uIDEw"},"byteCode":{"approval":"CiAKAAjAhD0BCgYEIAIFJgsACWJhbGFuY2VzXwlwcm92aWRlZF8FdG9rZW4GYXNzZXRzCHdlaWdodHNfBmJ1cm5lZAMKgQEEFR98dQgAAAAAAAAAAAdtYW5hZ2VyMRgUIQULMRkIjQwHbQAAAAAAAAAAAAAHWgAAAAAAAAAAAAAAiAACJUOKAAAnCjYyAHIHSGcnBiJniScINhoCVwIANhoBVwIAiAAFFlCwJUOKAgEoSYgEgIv/FSMKIQgPRIv/FSMKi/4VIwoSRCKMACKMAYsBi/8VIwoMQQBDi/41/yKLASMLCDT/TCNYF4v/Nf8iiwEjCwg0/0wjWBeLAYgDoYsAi/41/yKLASMLCDT/TCNYFwiMAIsBJQiMAUL/sicEi/9JFSMKFlcGAkxQZ4sAJBJEiAOsK2SMAEYBiTYaA0kVIQcSRDYaAhc2GgEXiAACJUOKAwAoiAPciAPkJwRkVwIANf8ii/8jCwg0/0wjWBeMAIAMQXNzZXQgSUQgPT4giwAWULCLAIgC8ymLABZQvkQXi/4IKYsAFlBMFr8qi/1QvUxIFEEACCqL/VCBQLlIKov9UL5EVwIANf8ii/8jCwg0/0wqi/1QvkRXAgA1/yKL/yMLCDT/TCNYF4v+CBZdKov9UEm8SExJFSMKFlcGAkxQv4knCDYaAUkVIQcSRIgABRZQsCVDigEBKEcEiAMliAMtKov/UIwAIowBIowCiwKLAL5EVwIAFSMKDEEAKYsAvkRXAgA1/yKLAiMLCDT/TCNYFyINQQAGiwElCIwBiwIlCIwCQv/HIowDiAVkIhJBAA+BwIQ9IQQhBZQLjANCACOLAScEZFcCABUjChJBAAqL/4gEhIwDQgAKiwElEkEAA0IAACKMBIsEKov/UL5EVwIAFSMKDEEAMyqL/1C+RFcCADX/IosEIwsINP9MJwldKov/UEm8SExJFSMKFlcGAkxQv4sEJQiMBEL/u7EhBrIQi/+yFIsDshIrZLIRIrIBs4sDjABGBIk2GgIXNhoBSRUhBxJEiAACJUOKAgAoRwWIAiGIAimL/iINRIgEo4wAJwRkVwIAFSMKjAEijAKLAosBDEEAWicEZFcCADX/IosCIwsINP9MI1gXjAMpiwMWUL5EF4wEi/6LBB0iiwAfSEhMFESMBSmLAxZQiwSLBQkWv7EhBrIQi/+yFIsFshKLA7IRIrIBs4sCJQiMAkL/nicGZIv+CCcGTGeJJwg2GgQXNhoDFzYaAhc2GgFJFSEHEkSIAAUWULAlQ4oEAShHBogBcYgBeScEZFcCADX/Iov+IwsINP9MI1gXjAAnBGRXAgA1/yKL/SMLCDT/TCNYF4wBKYsAFlC+RBeMAimLARZQvkQXjAMnBYv+FlC+RBeMBCcFi/0WUL5EF4wFiwIWsIsDFrCLBBawiwUWsIv8iwWLA4sEiwKIAnOMBosGFrApiwAWUIsCi/wIFr8piwEWUIsDiwYJFr+xIQayEIv/shSLBrISiwGyESKyAbOLBowARgaJNhoBF4gAAiVDigEAMgqL/3AATEhBAAGJsSEGshAyCrIUi/+yESKyEiKyAbOJigMAJwWL/xZQvUxIFEEACScFi/8WUCO5SCmL/hZQvUxIFEEACCmL/hZQI7lIJwWL/xZQi/0WvymL/hZQJwm/iYoAACtkIhJBAEkrsYEDshAhBIEQlLIiIQWyIzIKsioyCrIpMgOyLDIDsisisiSADUJhbGFuY2VkUG9vbC02MgCIAxNQsiaAAkxQsiUisgGztDxniYoAADEAJwpkEkSJigAAK2QiE0SJigEBKEcHi/8iDUQijACL/yQMQQAlJYwAJEkdIov/H0hITBREjAKLAiQJJB0iiwIfSEhMFESMAUIAEYv/JAkkHSKL/x9ISEwURIwBiwGMA4sBjAQijAWxIQWyECKyAScHSbIesh8hCbIZsyEIjAaLBiEEDkEAP4sEiwEdIiQfSEhMFESMBCKLBCKLBh9ISEwURIwHiwVBAAiLA4sHCUIABYsDiwcIjAOLBRSMBYsGJQiMBkL/uYsAFosDFlCMAEYHiYoBAShHAiSMACSMASWMAosCIQQOQQAiiwGL/x0iiwIkCx9ISEwURIwBiwCLAQiMAIsCJQiMAkL/1osAjABGAomKAgEoRwSL/yISQQAEIkIATYv/iP7pjACLADX/NP9XAAgXjAGLADX/NP9XCAgXjAKL/osCHSIkH0hITBREjAOLA4j/fIwEiwElEkEADyRJHSKLBB9ISEwUREIAAosEjABGBImKBQEoRwOL+4HY/DwdIiQfSEhMFESMAIv/JB0ii/+LAAgfSEhMFESMAYv+JB0ii/wfSEhMFESMAosBFrCLAhawiwKLAYj/VowDi/0kiwMJHSIkH0hITBREjABGA4mKAQEoRwcnBGRXAgAVIwqMACSMAbEhBbIQIrIBJwdJsh6yHyEJshmzIowCiwKLAAxBAGcnBGRXAgA1/yKLAiMLCDT/TCNYF4wDKYsDFlC+RBeMBCqL/1C+RFcCADX/IosCIwsINP9MI1gXjAWLBCINRIsFIg1EiwUkHSKLBB9ISEwURIwGiwaLAQxBAASLBowBiwIlCIwCQv+RK2RxCEgrZHAASIwHiweLAR0iJB9ISEwURIwARgeJigABK2RxAEgrZHEISCtkcABICScGZAmJMRtB+KKABLhEezY2GgCOAfiVAIAE5jX9tYAEq99+FYAEKnQAT4AEP7HQm4AEjTJeKYAEH8TD4zYaAI4G+HX5GvnS+tf7evxSAIoBAYAKMDEyMzQ1Njc4OYv/JViJigEBi/8iEkEABIABMImL/yEECiINQQALi/8hBAqI/+BCAAEoi/8hBBiI/8BQiQ==","clear":"Cg=="},"compilerInfo":{"compiler":"algod","compilerVersion":{"major":4,"minor":0,"patch":2,"commitHash":"6b940281"}}} as unknown as Arc56Contract

/**
 * A state record containing binary data
 */
export interface BinaryState {
  /**
   * Gets the state value as a Uint8Array
   */
  asByteArray(): Uint8Array | undefined
  /**
   * Gets the state value as a string
   */
  asString(): string | undefined
}

class BinaryStateValue implements BinaryState {
  constructor(private value: Uint8Array | undefined) {}

  asByteArray(): Uint8Array | undefined {
    return this.value
  }

  asString(): string | undefined {
    return this.value !== undefined ? Buffer.from(this.value).toString('utf-8') : undefined
  }
}

/**
 * Expands types for IntelliSense so they are more human readable
 * See https://stackoverflow.com/a/69288824
 */
export type Expand<T> = T extends (...args: infer A) => infer R
  ? (...args: Expand<A>) => Expand<R>
  : T extends infer O
    ? { [K in keyof O]: O[K] }
    : never


/**
 * The argument types for the BalancedPoolV2 contract
 */
export type BalancedPoolV2Args = {
  /**
   * The object representation of the arguments for each method
   */
  obj: {
    'createApplication()void': Record<string, never>
    'bootstrap(uint64[],uint64[])uint64': {
      /**
       * assets of the pool
       */
      assetIds: bigint[] | number[]
      /**
      * weights of the pool
      uint64 - LP Token created ID

       */
      weights: bigint[] | number[]
    }
    'addLiquidity(uint64,uint64,address)void': {
      /**
       * index of the token in the pool
       */
      index: bigint | number
      /**
       * amount of token sent
       */
      amount: bigint | number
      /**
       * the sender
       */
      sender: string
    }
    'getLiquidity(address)uint64': {
      /**
       * the sender
       */
      sender: string
    }
    'burnLiquidity(address,uint64)void': {
      sender: string
      amountLp: bigint | number
    }
    'swap(address,uint64,uint64,uint64)uint64': {
      sender: string
      from: bigint | number
      to: bigint | number
      amount: bigint | number
    }
    'optIn(uint64)void': {
      /**
      * asset to opt-in
      why?

       */
      assetId: bigint | number
    }
  }
  /**
   * The tuple representation of the arguments for each method
   */
  tuple: {
    'createApplication()void': []
    'bootstrap(uint64[],uint64[])uint64': [assetIds: bigint[] | number[], weights: bigint[] | number[]]
    'addLiquidity(uint64,uint64,address)void': [index: bigint | number, amount: bigint | number, sender: string]
    'getLiquidity(address)uint64': [sender: string]
    'burnLiquidity(address,uint64)void': [sender: string, amountLp: bigint | number]
    'swap(address,uint64,uint64,uint64)uint64': [sender: string, from: bigint | number, to: bigint | number, amount: bigint | number]
    'optIn(uint64)void': [assetId: bigint | number]
  }
}

/**
 * The return type for each method
 */
export type BalancedPoolV2Returns = {
  'createApplication()void': void
  'bootstrap(uint64[],uint64[])uint64': bigint
  'addLiquidity(uint64,uint64,address)void': void
  'getLiquidity(address)uint64': bigint
  'burnLiquidity(address,uint64)void': void
  'swap(address,uint64,uint64,uint64)uint64': bigint
  'optIn(uint64)void': void
}

/**
 * Defines the types of available calls and state of the BalancedPoolV2 smart contract.
 */
export type BalancedPoolV2Types = {
  /**
   * Maps method signatures / names to their argument and return types.
   */
  methods:
    & Record<'createApplication()void' | 'createApplication', {
      argsObj: BalancedPoolV2Args['obj']['createApplication()void']
      argsTuple: BalancedPoolV2Args['tuple']['createApplication()void']
      returns: BalancedPoolV2Returns['createApplication()void']
    }>
    & Record<'bootstrap(uint64[],uint64[])uint64' | 'bootstrap', {
      argsObj: BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64']
      argsTuple: BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']
      returns: BalancedPoolV2Returns['bootstrap(uint64[],uint64[])uint64']
    }>
    & Record<'addLiquidity(uint64,uint64,address)void' | 'addLiquidity', {
      argsObj: BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void']
      argsTuple: BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']
      returns: BalancedPoolV2Returns['addLiquidity(uint64,uint64,address)void']
    }>
    & Record<'getLiquidity(address)uint64' | 'getLiquidity', {
      argsObj: BalancedPoolV2Args['obj']['getLiquidity(address)uint64']
      argsTuple: BalancedPoolV2Args['tuple']['getLiquidity(address)uint64']
      returns: BalancedPoolV2Returns['getLiquidity(address)uint64']
    }>
    & Record<'burnLiquidity(address,uint64)void' | 'burnLiquidity', {
      argsObj: BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void']
      argsTuple: BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']
      returns: BalancedPoolV2Returns['burnLiquidity(address,uint64)void']
    }>
    & Record<'swap(address,uint64,uint64,uint64)uint64' | 'swap', {
      argsObj: BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)uint64']
      argsTuple: BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)uint64']
      returns: BalancedPoolV2Returns['swap(address,uint64,uint64,uint64)uint64']
    }>
    & Record<'optIn(uint64)void' | 'optIn', {
      argsObj: BalancedPoolV2Args['obj']['optIn(uint64)void']
      argsTuple: BalancedPoolV2Args['tuple']['optIn(uint64)void']
      returns: BalancedPoolV2Returns['optIn(uint64)void']
    }>
  /**
   * Defines the shape of the state of the application.
   */
  state: {
    global: {
      keys: {
        manager: string
        token: bigint
        burned: bigint
        assets: bigint[]
      }
      maps: {}
    }
    box: {
      keys: {}
      maps: {
        weights: Map<bigint | number, bigint>
        balances: Map<bigint | number, bigint>
        provided: Map<string, bigint[]>
        minRatios: Map<string, bigint>
      }
    }
  }
}

/**
 * Defines the possible abi call signatures.
 */
export type BalancedPoolV2Signatures = keyof BalancedPoolV2Types['methods']
/**
 * Defines the possible abi call signatures for methods that return a non-void value.
 */
export type BalancedPoolV2NonVoidMethodSignatures = keyof BalancedPoolV2Types['methods'] extends infer T ? T extends keyof BalancedPoolV2Types['methods'] ? MethodReturn<T> extends void ? never : T  : never : never
/**
 * Defines an object containing all relevant parameters for a single call to the contract.
 */
export type CallParams<TArgs> = Expand<
  Omit<AppClientMethodCallParams, 'method' | 'args' | 'onComplete'> &
    {
      /** The args for the ABI method call, either as an ordered array or an object */
      args: Expand<TArgs>
    }
>
/**
 * Maps a method signature from the BalancedPoolV2 smart contract to the method's arguments in either tuple or struct form
 */
export type MethodArgs<TSignature extends BalancedPoolV2Signatures> = BalancedPoolV2Types['methods'][TSignature]['argsObj' | 'argsTuple']
/**
 * Maps a method signature from the BalancedPoolV2 smart contract to the method's return type
 */
export type MethodReturn<TSignature extends BalancedPoolV2Signatures> = BalancedPoolV2Types['methods'][TSignature]['returns']

/**
 * Defines the shape of the keyed global state of the application.
 */
export type GlobalKeysState = BalancedPoolV2Types['state']['global']['keys']

/**
 * Defines the shape of the keyed box state of the application.
 */
export type BoxKeysState = BalancedPoolV2Types['state']['box']['keys']


/**
 * Defines supported create method params for this smart contract
 */
export type BalancedPoolV2CreateCallParams =
  | Expand<CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & {method: 'createApplication'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
  | Expand<CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & {method: 'createApplication()void'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
/**
 * Defines arguments required for the deploy method.
 */
export type BalancedPoolV2DeployParams = Expand<Omit<AppFactoryDeployParams, 'createParams' | 'updateParams' | 'deleteParams'> & {
  /**
   * Create transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  createParams?: BalancedPoolV2CreateCallParams
}>


/**
 * Exposes methods for constructing `AppClient` params objects for ABI calls to the BalancedPoolV2 smart contract
 */
export abstract class BalancedPoolV2ParamsFactory {
  /**
   * Gets available create ABI call param factories
   */
  static get create() {
    return {
      _resolveByMethod<TParams extends BalancedPoolV2CreateCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'createApplication':
          case 'createApplication()void':
            return BalancedPoolV2ParamsFactory.create.createApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs create ABI call params for the BalancedPoolV2 smart contract using the createApplication()void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      createApplication(params: CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC}): AppClientMethodCallParams & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC} {
        return {
          ...params,
          method: 'createApplication()void' as const,
          args: Array.isArray(params.args) ? params.args : [],
        }
      },
    }
  }

  /**
   * Constructs a no op call for the bootstrap(uint64[],uint64[])uint64 ABI method
   *
   * Bootstrap the pool by assigning assets and weights, create the LP tokens
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static bootstrap(params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'bootstrap(uint64[],uint64[])uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.assetIds, params.args.weights],
    }
  }
  /**
   * Constructs a no op call for the addLiquidity(uint64,uint64,address)void ABI method
   *
   * Provide one token liquidity to the pool
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static addLiquidity(params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'addLiquidity(uint64,uint64,address)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.index, params.args.amount, params.args.sender],
    }
  }
  /**
   * Constructs a no op call for the getLiquidity(address)uint64 ABI method
   *
  * Compute the liquidity for the given sender based on the state
  in the contract

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getLiquidity(params: CallParams<BalancedPoolV2Args['obj']['getLiquidity(address)uint64'] | BalancedPoolV2Args['tuple']['getLiquidity(address)uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getLiquidity(address)uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.sender],
    }
  }
  /**
   * Constructs a no op call for the burnLiquidity(address,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static burnLiquidity(params: CallParams<BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void'] | BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'burnLiquidity(address,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.sender, params.args.amountLp],
    }
  }
  /**
   * Constructs a no op call for the swap(address,uint64,uint64,uint64)uint64 ABI method
   *
   * Swap the token from for the token to
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static swap(params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)uint64']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'swap(address,uint64,uint64,uint64)uint64' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.sender, params.args.from, params.args.to, params.args.amount],
    }
  }
  /**
   * Constructs a no op call for the optIn(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static optIn(params: CallParams<BalancedPoolV2Args['obj']['optIn(uint64)void'] | BalancedPoolV2Args['tuple']['optIn(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'optIn(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.assetId],
    }
  }
}

/**
 * A factory to create and deploy one or more instance of the BalancedPoolV2 smart contract and to create one or more app clients to interact with those (or other) app instances
 */
export class BalancedPoolV2Factory {
  /**
   * The underlying `AppFactory` for when you want to have more flexibility
   */
  public readonly appFactory: _AppFactory

  /**
   * Creates a new instance of `BalancedPoolV2Factory`
   *
   * @param params The parameters to initialise the app factory with
   */
  constructor(params: Omit<AppFactoryParams, 'appSpec'>) {
    this.appFactory = new _AppFactory({
      ...params,
      appSpec: APP_SPEC,
    })
  }
  
  /** The name of the app (from the ARC-32 / ARC-56 app spec or override). */
  public get appName() {
    return this.appFactory.appName
  }
  
  /** The ARC-56 app spec being used */
  get appSpec() {
    return APP_SPEC
  }
  
  /** A reference to the underlying `AlgorandClient` this app factory is using. */
  public get algorand(): AlgorandClientInterface {
    return this.appFactory.algorand
  }
  
  /**
   * Returns a new `AppClient` client for an app instance of the given ID.
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public getAppClientById(params: AppFactoryAppClientParams) {
    return new BalancedPoolV2Client(this.appFactory.getAppClientById(params))
  }
  
  /**
   * Returns a new `AppClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public async getAppClientByCreatorAndName(
    params: AppFactoryResolveAppClientByCreatorAndNameParams,
  ) {
    return new BalancedPoolV2Client(await this.appFactory.getAppClientByCreatorAndName(params))
  }

  /**
   * Idempotently deploys the BalancedPoolV2 smart contract.
   *
   * @param params The arguments for the contract calls and any additional parameters for the call
   * @returns The deployment result
   */
  public async deploy(params: BalancedPoolV2DeployParams = {}) {
    const result = await this.appFactory.deploy({
      ...params,
      createParams: params.createParams?.method ? BalancedPoolV2ParamsFactory.create._resolveByMethod(params.createParams) : params.createParams ? params.createParams as (BalancedPoolV2CreateCallParams & { args: Uint8Array[] }) : undefined,
    })
    return { result: result.result, appClient: new BalancedPoolV2Client(result.appClient) }
  }

  /**
   * Get parameters to create transactions (create and deploy related calls) for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the BalancedPoolV2 smart contract using the createApplication()void ABI method.
       *
       * createApplication method called at creation
       *
       * @param params The params for the smart contract call
       * @returns The create params
       */
      createApplication: (params: CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.params.create(BalancedPoolV2ParamsFactory.create.createApplication(params))
      },
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the BalancedPoolV2 smart contract using the createApplication()void ABI method.
       *
       * createApplication method called at creation
       *
       * @param params The params for the smart contract call
       * @returns The create transaction
       */
      createApplication: (params: CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        return this.appFactory.createTransaction.create(BalancedPoolV2ParamsFactory.create.createApplication(params))
      },
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the BalancedPoolV2 smart contract using an ABI method call using the createApplication()void ABI method.
       *
       * createApplication method called at creation
       *
       * @param params The params for the smart contract call
       * @returns The create result
       */
      createApplication: async (params: CallParams<BalancedPoolV2Args['obj']['createApplication()void'] | BalancedPoolV2Args['tuple']['createApplication()void']> & AppClientCompilationParams & CreateSchema & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
        const result = await this.appFactory.send.create(BalancedPoolV2ParamsFactory.create.createApplication(params))
        return { result: { ...result.result, return: result.result.return as unknown as (undefined | BalancedPoolV2Returns['createApplication()void']) }, appClient: new BalancedPoolV2Client(result.appClient) }
      },
    },

  }

}
/**
 * A client to make calls to the BalancedPoolV2 smart contract
 */
export class BalancedPoolV2Client {
  /**
   * The underlying `AppClient` for when you want to have more flexibility
   */
  public readonly appClient: _AppClient

  /**
   * Creates a new instance of `BalancedPoolV2Client`
   *
   * @param appClient An `AppClient` instance which has been created with the BalancedPoolV2 app spec
   */
  constructor(appClient: _AppClient)
  /**
   * Creates a new instance of `BalancedPoolV2Client`
   *
   * @param params The parameters to initialise the app client with
   */
  constructor(params: Omit<AppClientParams, 'appSpec'>)
  constructor(appClientOrParams: _AppClient | Omit<AppClientParams, 'appSpec'>) {
    this.appClient = appClientOrParams instanceof _AppClient ? appClientOrParams : new _AppClient({
      ...appClientOrParams,
      appSpec: APP_SPEC,
    })
  }
  
  /**
   * Checks for decode errors on the given return value and maps the return value to the return type for the given method
   * @returns The typed return value or undefined if there was no value
   */
  decodeReturnValue<TSignature extends BalancedPoolV2NonVoidMethodSignatures>(method: TSignature, returnValue: ABIReturn | undefined) {
    return returnValue !== undefined ? getArc56ReturnValue<MethodReturn<TSignature>>(returnValue, this.appClient.getABIMethod(method), APP_SPEC.structs) : undefined
  }
  
  /**
   * Returns a new `BalancedPoolV2Client` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   * @param params The parameters to create the app client
   */
  public static async fromCreatorAndName(params: Omit<ResolveAppClientByCreatorAndName, 'appSpec'>): Promise<BalancedPoolV2Client> {
    return new BalancedPoolV2Client(await _AppClient.fromCreatorAndName({...params, appSpec: APP_SPEC}))
  }
  
  /**
   * Returns an `BalancedPoolV2Client` instance for the current network based on
   * pre-determined network-specific app IDs specified in the ARC-56 app spec.
   *
   * If no IDs are in the app spec or the network isn't recognised, an error is thrown.
   * @param params The parameters to create the app client
   */
  static async fromNetwork(
    params: Omit<ResolveAppClientByNetwork, 'appSpec'>
  ): Promise<BalancedPoolV2Client> {
    return new BalancedPoolV2Client(await _AppClient.fromNetwork({...params, appSpec: APP_SPEC}))
  }
  
  /** The ID of the app instance this client is linked to. */
  public get appId() {
    return this.appClient.appId
  }
  
  /** The app address of the app instance this client is linked to. */
  public get appAddress() {
    return this.appClient.appAddress
  }
  
  /** The name of the app. */
  public get appName() {
    return this.appClient.appName
  }
  
  /** The ARC-56 app spec being used */
  public get appSpec() {
    return this.appClient.appSpec
  }
  
  /** A reference to the underlying `AlgorandClient` this app client is using. */
  public get algorand(): AlgorandClientInterface {
    return this.appClient.algorand
  }

  /**
   * Get parameters to create transactions for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Makes a clear_state call to an existing instance of the BalancedPoolV2 smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.params.bare.clearState(params)
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `bootstrap(uint64[],uint64[])uint64` ABI method.
     *
     * Bootstrap the pool by assigning assets and weights, create the LP tokens
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    bootstrap: (params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.bootstrap(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `addLiquidity(uint64,uint64,address)void` ABI method.
     *
     * Provide one token liquidity to the pool
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    addLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.addLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getLiquidity(address)uint64` ABI method.
     *
    * Compute the liquidity for the given sender based on the state
    in the contract

     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['getLiquidity(address)uint64'] | BalancedPoolV2Args['tuple']['getLiquidity(address)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.getLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `burnLiquidity(address,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    burnLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void'] | BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.burnLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `swap(address,uint64,uint64,uint64)uint64` ABI method.
     *
     * Swap the token from for the token to
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    swap: (params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.swap(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `optIn(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    optIn: (params: CallParams<BalancedPoolV2Args['obj']['optIn(uint64)void'] | BalancedPoolV2Args['tuple']['optIn(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(BalancedPoolV2ParamsFactory.optIn(params))
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Makes a clear_state call to an existing instance of the BalancedPoolV2 smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.createTransaction.bare.clearState(params)
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `bootstrap(uint64[],uint64[])uint64` ABI method.
     *
     * Bootstrap the pool by assigning assets and weights, create the LP tokens
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    bootstrap: (params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.bootstrap(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `addLiquidity(uint64,uint64,address)void` ABI method.
     *
     * Provide one token liquidity to the pool
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    addLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.addLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getLiquidity(address)uint64` ABI method.
     *
    * Compute the liquidity for the given sender based on the state
    in the contract

     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['getLiquidity(address)uint64'] | BalancedPoolV2Args['tuple']['getLiquidity(address)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.getLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `burnLiquidity(address,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    burnLiquidity: (params: CallParams<BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void'] | BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.burnLiquidity(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `swap(address,uint64,uint64,uint64)uint64` ABI method.
     *
     * Swap the token from for the token to
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    swap: (params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.swap(params))
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `optIn(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    optIn: (params: CallParams<BalancedPoolV2Args['obj']['optIn(uint64)void'] | BalancedPoolV2Args['tuple']['optIn(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(BalancedPoolV2ParamsFactory.optIn(params))
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Makes a clear_state call to an existing instance of the BalancedPoolV2 smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams & SendParams>) => {
      return this.appClient.send.bare.clearState(params)
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `bootstrap(uint64[],uint64[])uint64` ABI method.
     *
     * Bootstrap the pool by assigning assets and weights, create the LP tokens
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    bootstrap: async (params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.bootstrap(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['bootstrap(uint64[],uint64[])uint64'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `addLiquidity(uint64,uint64,address)void` ABI method.
     *
     * Provide one token liquidity to the pool
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    addLiquidity: async (params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.addLiquidity(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['addLiquidity(uint64,uint64,address)void'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `getLiquidity(address)uint64` ABI method.
     *
    * Compute the liquidity for the given sender based on the state
    in the contract

     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getLiquidity: async (params: CallParams<BalancedPoolV2Args['obj']['getLiquidity(address)uint64'] | BalancedPoolV2Args['tuple']['getLiquidity(address)uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.getLiquidity(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['getLiquidity(address)uint64'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `burnLiquidity(address,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    burnLiquidity: async (params: CallParams<BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void'] | BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.burnLiquidity(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['burnLiquidity(address,uint64)void'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `swap(address,uint64,uint64,uint64)uint64` ABI method.
     *
     * Swap the token from for the token to
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    swap: async (params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)uint64']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.swap(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['swap(address,uint64,uint64,uint64)uint64'])}
    },

    /**
     * Makes a call to the BalancedPoolV2 smart contract using the `optIn(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    optIn: async (params: CallParams<BalancedPoolV2Args['obj']['optIn(uint64)void'] | BalancedPoolV2Args['tuple']['optIn(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(BalancedPoolV2ParamsFactory.optIn(params))
      return {...result, return: result.return as unknown as (undefined | BalancedPoolV2Returns['optIn(uint64)void'])}
    },

  }

  /**
   * Clone this app client with different params
   *
   * @param params The params to use for the the cloned app client. Omit a param to keep the original value. Set a param to override the original value. Setting to undefined will clear the original value.
   * @returns A new app client with the altered params
   */
  public clone(params: CloneAppClientParams) {
    return new BalancedPoolV2Client(this.appClient.clone(params))
  }

  /**
   * Methods to access state for the current BalancedPoolV2 app
   */
  state = {
    /**
     * Methods to access global state for the current BalancedPoolV2 app
     */
    global: {
      /**
       * Get all current keyed values from global state
       */
      getAll: async (): Promise<Partial<Expand<GlobalKeysState>>> => {
        const result = await this.appClient.state.global.getAll()
        return {
          manager: result.manager,
          token: result.token,
          burned: result.burned,
          assets: result.assets,
        }
      },
      /**
       * Get the current value of the manager key in global state
       */
      manager: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("manager")) as string | undefined },
      /**
       * Get the current value of the token key in global state
       */
      token: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("token")) as bigint | undefined },
      /**
       * Get the current value of the burned key in global state
       */
      burned: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("burned")) as bigint | undefined },
      /**
       * Get the current value of the assets key in global state
       */
      assets: async (): Promise<bigint[] | undefined> => { return (await this.appClient.state.global.getValue("assets")) as bigint[] | undefined },
    },
    /**
     * Methods to access box state for the current BalancedPoolV2 app
     */
    box: {
      /**
       * Get all current keyed values from box state
       */
      getAll: async (): Promise<Partial<Expand<BoxKeysState>>> => {
        const result = await this.appClient.state.box.getAll()
        return {
        }
      },
      /**
       * Get values from the weights map in box state
       */
      weights: {
        /**
         * Get all current values of the weights map in box state
         */
        getMap: async (): Promise<Map<bigint, bigint>> => { return (await this.appClient.state.box.getMap("weights")) as Map<bigint, bigint> },
        /**
         * Get a current value of the weights map by key from box state
         */
        value: async (key: bigint | number): Promise<bigint | undefined> => { return await this.appClient.state.box.getMapValue("weights", key) as bigint | undefined },
      },
      /**
       * Get values from the balances map in box state
       */
      balances: {
        /**
         * Get all current values of the balances map in box state
         */
        getMap: async (): Promise<Map<bigint, bigint>> => { return (await this.appClient.state.box.getMap("balances")) as Map<bigint, bigint> },
        /**
         * Get a current value of the balances map by key from box state
         */
        value: async (key: bigint | number): Promise<bigint | undefined> => { return await this.appClient.state.box.getMapValue("balances", key) as bigint | undefined },
      },
      /**
       * Get values from the provided map in box state
       */
      provided: {
        /**
         * Get all current values of the provided map in box state
         */
        getMap: async (): Promise<Map<string, bigint[]>> => { return (await this.appClient.state.box.getMap("provided")) as Map<string, bigint[]> },
        /**
         * Get a current value of the provided map by key from box state
         */
        value: async (key: string): Promise<bigint[] | undefined> => { return await this.appClient.state.box.getMapValue("provided", key) as bigint[] | undefined },
      },
      /**
       * Get values from the minRatios map in box state
       */
      minRatios: {
        /**
         * Get all current values of the minRatios map in box state
         */
        getMap: async (): Promise<Map<string, bigint>> => { return (await this.appClient.state.box.getMap("minRatios")) as Map<string, bigint> },
        /**
         * Get a current value of the minRatios map by key from box state
         */
        value: async (key: string): Promise<bigint | undefined> => { return await this.appClient.state.box.getMapValue("minRatios", key) as bigint | undefined },
      },
    },
  }

  public newGroup(): BalancedPoolV2Composer {
    const client = this
    const composer = this.algorand.newGroup()
    let promiseChain:Promise<unknown> = Promise.resolve()
    const resultMappers: Array<undefined | ((x: ABIReturn | undefined) => any)> = []
    return {
      /**
       * Add a bootstrap(uint64[],uint64[])uint64 method call against the BalancedPoolV2 contract
       */
      bootstrap(params: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.bootstrap(params)))
        resultMappers.push((v) => client.decodeReturnValue('bootstrap(uint64[],uint64[])uint64', v))
        return this
      },
      /**
       * Add a addLiquidity(uint64,uint64,address)void method call against the BalancedPoolV2 contract
       */
      addLiquidity(params: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.addLiquidity(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a getLiquidity(address)uint64 method call against the BalancedPoolV2 contract
       */
      getLiquidity(params: CallParams<BalancedPoolV2Args['obj']['getLiquidity(address)uint64'] | BalancedPoolV2Args['tuple']['getLiquidity(address)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getLiquidity(params)))
        resultMappers.push((v) => client.decodeReturnValue('getLiquidity(address)uint64', v))
        return this
      },
      /**
       * Add a burnLiquidity(address,uint64)void method call against the BalancedPoolV2 contract
       */
      burnLiquidity(params: CallParams<BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void'] | BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.burnLiquidity(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a swap(address,uint64,uint64,uint64)uint64 method call against the BalancedPoolV2 contract
       */
      swap(params: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)uint64']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.swap(params)))
        resultMappers.push((v) => client.decodeReturnValue('swap(address,uint64,uint64,uint64)uint64', v))
        return this
      },
      /**
       * Add a optIn(uint64)void method call against the BalancedPoolV2 contract
       */
      optIn(params: CallParams<BalancedPoolV2Args['obj']['optIn(uint64)void'] | BalancedPoolV2Args['tuple']['optIn(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.optIn(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a clear state call to the BalancedPoolV2 contract
       */
      clearState(params: AppClientBareCallParams) {
        promiseChain = promiseChain.then(() => composer.addAppCall(client.params.clearState(params)))
        return this
      },
      addTransaction(txn: Transaction, signer?: TransactionSigner) {
        promiseChain = promiseChain.then(() => composer.addTransaction(txn, signer))
        return this
      },
      async composer() {
        await promiseChain
        return composer
      },
      async simulate(options?: SimulateOptions) {
        await promiseChain
        const result = await (!options ? composer.simulate() : composer.simulate(options))
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      },
      async send(params?: SendParams) {
        await promiseChain
        const result = await composer.send(params)
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      }
    } as unknown as BalancedPoolV2Composer
  }
}
export type BalancedPoolV2Composer<TReturns extends [...any[]] = []> = {
  /**
   * Calls the bootstrap(uint64[],uint64[])uint64 ABI method.
   *
   * Bootstrap the pool by assigning assets and weights, create the LP tokens
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  bootstrap(params?: CallParams<BalancedPoolV2Args['obj']['bootstrap(uint64[],uint64[])uint64'] | BalancedPoolV2Args['tuple']['bootstrap(uint64[],uint64[])uint64']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['bootstrap(uint64[],uint64[])uint64'] | undefined]>

  /**
   * Calls the addLiquidity(uint64,uint64,address)void ABI method.
   *
   * Provide one token liquidity to the pool
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  addLiquidity(params?: CallParams<BalancedPoolV2Args['obj']['addLiquidity(uint64,uint64,address)void'] | BalancedPoolV2Args['tuple']['addLiquidity(uint64,uint64,address)void']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['addLiquidity(uint64,uint64,address)void'] | undefined]>

  /**
   * Calls the getLiquidity(address)uint64 ABI method.
   *
  * Compute the liquidity for the given sender based on the state
  in the contract

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getLiquidity(params?: CallParams<BalancedPoolV2Args['obj']['getLiquidity(address)uint64'] | BalancedPoolV2Args['tuple']['getLiquidity(address)uint64']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['getLiquidity(address)uint64'] | undefined]>

  /**
   * Calls the burnLiquidity(address,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  burnLiquidity(params?: CallParams<BalancedPoolV2Args['obj']['burnLiquidity(address,uint64)void'] | BalancedPoolV2Args['tuple']['burnLiquidity(address,uint64)void']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['burnLiquidity(address,uint64)void'] | undefined]>

  /**
   * Calls the swap(address,uint64,uint64,uint64)uint64 ABI method.
   *
   * Swap the token from for the token to
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  swap(params?: CallParams<BalancedPoolV2Args['obj']['swap(address,uint64,uint64,uint64)uint64'] | BalancedPoolV2Args['tuple']['swap(address,uint64,uint64,uint64)uint64']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['swap(address,uint64,uint64,uint64)uint64'] | undefined]>

  /**
   * Calls the optIn(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  optIn(params?: CallParams<BalancedPoolV2Args['obj']['optIn(uint64)void'] | BalancedPoolV2Args['tuple']['optIn(uint64)void']>): BalancedPoolV2Composer<[...TReturns, BalancedPoolV2Returns['optIn(uint64)void'] | undefined]>

  /**
   * Makes a clear_state call to an existing instance of the BalancedPoolV2 smart contract.
   *
   * @param args The arguments for the bare call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  clearState(params?: AppClientBareCallParams): BalancedPoolV2Composer<[...TReturns, undefined]>

  /**
   * Adds a transaction to the composer
   *
   * @param txn A transaction to add to the transaction group
   * @param signer The optional signer to use when signing this transaction.
   */
  addTransaction(txn: Transaction, signer?: TransactionSigner): BalancedPoolV2Composer<TReturns>
  /**
   * Returns the underlying AtomicTransactionComposer instance
   */
  composer(): Promise<TransactionComposer>
  /**
   * Simulates the transaction group and returns the result
   */
  simulate(): Promise<BalancedPoolV2ComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: SkipSignaturesSimulateOptions): Promise<BalancedPoolV2ComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: RawSimulateOptions): Promise<BalancedPoolV2ComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  /**
   * Sends the transaction group to the network and returns the results
   */
  send(params?: SendParams): Promise<BalancedPoolV2ComposerResults<TReturns>>
}
export type BalancedPoolV2ComposerResults<TReturns extends [...any[]]> = Expand<SendAtomicTransactionComposerResults & {
  returns: TReturns
}>

